/*! For license information please see LICENSES */
(window.webpackJsonp = window.webpackJsonp || []).push([[0], [function (e, t, n) { (function (e) { e.exports = (function () { 'use strict'; let t, r; function o () { return t.apply(null, arguments) } function d (input) { return Array.isArray(input) || Object.prototype.toString.call(input) === '[object Array]' } function _ (input) { return input != null && Object.prototype.toString.call(input) === '[object Object]' } function l (a, b) { return Object.prototype.hasOwnProperty.call(a, b) } function c (e) { if (Object.getOwnPropertyNames) { return Object.getOwnPropertyNames(e).length === 0 } let t; for (t in e) { if (l(e, t)) { return !1 } } return !0 } function m (input) { return void 0 === input } function h (input) { return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]' } function f (input) { return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]' } function map (e, t) { let i; const n = []; for (i = 0; i < e.length; ++i) { n.push(t(e[i], i)) } return n } function M (a, b) { for (const i in b) { l(b, i) && (a[i] = b[i]) } return l(b, 'toString') && (a.toString = b.toString), l(b, 'valueOf') && (a.valueOf = b.valueOf), a } function y (input, e, t, n) { return Wt(input, e, t, n, !0).utc() } function L (e) { return e._pf == null && (e._pf = { empty: !1, unusedTokens: [], unusedInput: [], overflow: -2, charsLeftOver: 0, nullInput: !1, invalidEra: null, invalidMonth: null, invalidFormat: !1, userInvalidated: !1, iso: !1, parsedDateParts: [], era: null, meridiem: null, rfc2822: !1, weekdayMismatch: !1 }), e._pf } function Y (e) { if (e._isValid == null) { const t = L(e); const n = r.call(t.parsedDateParts, function (i) { return i != null }); let o = !isNaN(e._d.getTime()) && t.overflow < 0 && !t.empty && !t.invalidEra && !t.invalidMonth && !t.invalidWeekday && !t.weekdayMismatch && !t.nullInput && !t.invalidFormat && !t.userInvalidated && (!t.meridiem || t.meridiem && n); if (e._strict && (o = o && t.charsLeftOver === 0 && t.unusedTokens.length === 0 && void 0 === t.bigHour), Object.isFrozen != null && Object.isFrozen(e)) { return o } e._isValid = o } return e._isValid } function k (e) { const t = y(NaN); return e != null ? M(L(t), e) : L(t).userInvalidated = !0, t }r = Array.prototype.some ? Array.prototype.some : function (e) { let i; const t = Object(this); const n = t.length >>> 0; for (i = 0; i < n; i++) { if (i in t && e.call(this, t[i], i, t)) { return !0 } } return !1 }; const w = o.momentProperties = []; let v = !1; function D (e, t) { let i, n, r; if (m(t._isAMomentObject) || (e._isAMomentObject = t._isAMomentObject), m(t._i) || (e._i = t._i), m(t._f) || (e._f = t._f), m(t._l) || (e._l = t._l), m(t._strict) || (e._strict = t._strict), m(t._tzm) || (e._tzm = t._tzm), m(t._isUTC) || (e._isUTC = t._isUTC), m(t._offset) || (e._offset = t._offset), m(t._pf) || (e._pf = L(t)), m(t._locale) || (e._locale = t._locale), w.length > 0) { for (i = 0; i < w.length; i++) { m(r = t[n = w[i]]) || (e[n] = r) } } return e } function T (e) { D(this, e), this._d = new Date(e._d != null ? e._d.getTime() : NaN), this.isValid() || (this._d = new Date(NaN)), !1 === v && (v = !0, o.updateOffset(this), v = !1) } function x (e) { return e instanceof T || e != null && e._isAMomentObject != null } function S (e) { !1 === o.suppressDeprecationWarnings && typeof console !== 'undefined' && console.warn && console.warn('Deprecation warning: ' + e) } function j (e, t) { let n = !0; return M(function () { if (o.deprecationHandler != null && o.deprecationHandler(null, e), n) { let r; let i; let d; const _ = []; for (i = 0; i < arguments.length; i++) { if (r = '', typeof arguments[i] === 'object') { for (d in r += '\n[' + i + '] ', arguments[0]) { l(arguments[0], d) && (r += d + ': ' + arguments[0][d] + ', ') }r = r.slice(0, -2) } else { r = arguments[i] }_.push(r) }S(e + '\nArguments: ' + Array.prototype.slice.call(_).join('') + '\n' + (new Error()).stack), n = !1 } return t.apply(this, arguments) }, t) } let H; const O = {}; function P (e, t) { o.deprecationHandler != null && o.deprecationHandler(e, t), O[e] || (S(t), O[e] = !0) } function W (input) { return typeof Function !== 'undefined' && input instanceof Function || Object.prototype.toString.call(input) === '[object Function]' } function E (e, t) { let n; const r = M({}, e); for (n in t) { l(t, n) && (_(e[n]) && _(t[n]) ? (r[n] = {}, M(r[n], e[n]), M(r[n], t[n])) : t[n] != null ? r[n] = t[n] : delete r[n]) } for (n in e) { l(e, n) && !l(t, n) && _(e[n]) && (r[n] = M({}, r[n])) } return r } function A (e) { e != null && this.set(e) } function z (e, t, n) { const r = '' + Math.abs(e); const o = t - r.length; return (e >= 0 ? n ? '+' : '' : '-') + Math.pow(10, Math.max(0, o)).toString().substr(1) + r }o.suppressDeprecationWarnings = !1, o.deprecationHandler = null, H = Object.keys ? Object.keys : function (e) { let i; const t = []; for (i in e) { l(e, i) && t.push(i) } return t }; const F = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g; const C = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g; const R = {}; const N = {}; function $ (e, t, n, r) { let o = r; typeof r === 'string' && (o = function () { return this[r]() }), e && (N[e] = o), t && (N[t[0]] = function () { return z(o.apply(this, arguments), t[1], t[2]) }), n && (N[n] = function () { return this.localeData().ordinal(o.apply(this, arguments), e) }) } function J (e, t) { return e.isValid() ? (t = I(t, e.localeData()), R[t] = R[t] || (function (e) { let i; let t; let input; const n = e.match(F); for (i = 0, t = n.length; i < t; i++) { N[n[i]] ? n[i] = N[n[i]] : n[i] = (input = n[i]).match(/\[[\s\S]/) ? input.replace(/^\[|\]$/g, '') : input.replace(/\\/g, '') } return function (r) { let i; let output = ''; for (i = 0; i < t; i++) { output += W(n[i]) ? n[i].call(r, e) : n[i] } return output } }(t)), R[t](e)) : e.localeData().invalidDate() } function I (e, t) { let i = 5; function n (input) { return t.longDateFormat(input) || input } for (C.lastIndex = 0; i >= 0 && C.test(e);) { e = e.replace(C, n), C.lastIndex = 0, i -= 1 } return e } const U = {}; function G (e, t) { const n = e.toLowerCase(); U[n] = U[n + 's'] = U[t] = e } function V (e) { return typeof e === 'string' ? U[e] || U[e.toLowerCase()] : void 0 } function B (e) { let t; let n; const r = {}; for (n in e) { l(e, n) && (t = V(n)) && (r[t] = e[n]) } return r } const K = {}; function Z (e, t) { K[e] = t } function Q (e) { return e % 4 == 0 && e % 100 != 0 || e % 400 == 0 } function X (e) { return e < 0 ? Math.ceil(e) || 0 : Math.floor(e) } function ee (e) { const t = +e; let n = 0; return t !== 0 && isFinite(t) && (n = X(t)), n } function te (e, t) { return function (n) { return n != null ? (ae(this, e, n), o.updateOffset(this, t), this) : ne(this, e) } } function ne (e, t) { return e.isValid() ? e._d['get' + (e._isUTC ? 'UTC' : '') + t]() : NaN } function ae (e, t, n) { e.isValid() && !isNaN(n) && (t === 'FullYear' && Q(e.year()) && e.month() === 1 && e.date() === 29 ? (n = ee(n), e._d['set' + (e._isUTC ? 'UTC' : '') + t](n, e.month(), Se(n, e.month()))) : e._d['set' + (e._isUTC ? 'UTC' : '') + t](n)) } let re; const se = /\d/; const ie = /\d\d/; const oe = /\d{3}/; const de = /\d{4}/; const ue = /[+-]?\d{6}/; const _e = /\d\d?/; const le = /\d\d\d\d?/; const ce = /\d\d\d\d\d\d?/; const me = /\d{1,3}/; const he = /\d{1,4}/; const fe = /[+-]?\d{1,6}/; const pe = /\d+/; const Me = /[+-]?\d+/; const ye = /Z|[+-]\d\d:?\d\d/gi; const Le = /Z|[+-]\d\d(?::?\d\d)?/gi; const ge = /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i; function Ye (e, t, n) { re[e] = W(t) ? t : function (e, r) { return e && n ? n : t } } function be (e, t) { return l(re, e) ? re[e](t._strict, t._locale) : new RegExp(ke(e.replace('\\', '').replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (e, t, n, r, o) { return t || n || r || o }))) } function ke (s) { return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&') }re = {}; let we; const ve = {}; function De (e, t) { let i; let n = t; for (typeof e === 'string' && (e = [e]), h(t) && (n = function (input, e) { e[t] = ee(input) }), i = 0; i < e.length; i++) { ve[e[i]] = n } } function Te (e, t) { De(e, function (input, e, n, r) { n._w = n._w || {}, t(input, n._w, n, r) }) } function xe (e, input, t) { input != null && l(ve, e) && ve[e](input, t._a, t, e) } function Se (e, t) { if (isNaN(e) || isNaN(t)) { return NaN } let n; const r = (t % (n = 12) + n) % n; return e += (t - r) / 12, r === 1 ? Q(e) ? 29 : 28 : 31 - r % 7 % 2 }we = Array.prototype.indexOf ? Array.prototype.indexOf : function (e) { let i; for (i = 0; i < this.length; ++i) { if (this[i] === e) { return i } } return -1 }, $('M', ['MM', 2], 'Mo', function () { return this.month() + 1 }), $('MMM', 0, 0, function (e) { return this.localeData().monthsShort(this, e) }), $('MMMM', 0, 0, function (e) { return this.localeData().months(this, e) }), G('month', 'M'), Z('month', 8), Ye('M', _e), Ye('MM', _e, ie), Ye('MMM', function (e, t) { return t.monthsShortRegex(e) }), Ye('MMMM', function (e, t) { return t.monthsRegex(e) }), De(['M', 'MM'], function (input, e) { e[1] = ee(input) - 1 }), De(['MMM', 'MMMM'], function (input, e, t, n) { const r = t._locale.monthsParse(input, n, t._strict); r != null ? e[1] = r : L(t).invalidMonth = input }); const je = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'); const He = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'); const Oe = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/; const Pe = ge; const We = ge; function Ee (e, t, n) { let i; let r; let o; const d = e.toLocaleLowerCase(); if (!this._monthsParse) { for (this._monthsParse = [], this._longMonthsParse = [], this._shortMonthsParse = [], i = 0; i < 12; ++i) { o = y([2e3, i]), this._shortMonthsParse[i] = this.monthsShort(o, '').toLocaleLowerCase(), this._longMonthsParse[i] = this.months(o, '').toLocaleLowerCase() } } return n ? t === 'MMM' ? (r = we.call(this._shortMonthsParse, d)) !== -1 ? r : null : (r = we.call(this._longMonthsParse, d)) !== -1 ? r : null : t === 'MMM' ? (r = we.call(this._shortMonthsParse, d)) !== -1 || (r = we.call(this._longMonthsParse, d)) !== -1 ? r : null : (r = we.call(this._longMonthsParse, d)) !== -1 || (r = we.call(this._shortMonthsParse, d)) !== -1 ? r : null } function Ae (e, t) { let n; if (!e.isValid()) { return e } if (typeof t === 'string') { if (/^\d+$/.test(t)) { t = ee(t) } else if (!h(t = e.localeData().monthsParse(t))) { return e } } return n = Math.min(e.date(), Se(e.year(), t)), e._d['set' + (e._isUTC ? 'UTC' : '') + 'Month'](t, n), e } function ze (e) { return e != null ? (Ae(this, e), o.updateOffset(this, !0), this) : ne(this, 'Month') } function Fe () { function e (a, b) { return b.length - a.length } let i; let t; const n = []; const r = []; const o = []; for (i = 0; i < 12; i++) { t = y([2e3, i]), n.push(this.monthsShort(t, '')), r.push(this.months(t, '')), o.push(this.months(t, '')), o.push(this.monthsShort(t, '')) } for (n.sort(e), r.sort(e), o.sort(e), i = 0; i < 12; i++) { n[i] = ke(n[i]), r[i] = ke(r[i]) } for (i = 0; i < 24; i++) { o[i] = ke(o[i]) } this._monthsRegex = new RegExp('^(' + o.join('|') + ')', 'i'), this._monthsShortRegex = this._monthsRegex, this._monthsStrictRegex = new RegExp('^(' + r.join('|') + ')', 'i'), this._monthsShortStrictRegex = new RegExp('^(' + n.join('|') + ')', 'i') } function Ce (e) { return Q(e) ? 366 : 365 }$('Y', 0, 0, function () { const e = this.year(); return e <= 9999 ? z(e, 4) : '+' + e }), $(0, ['YY', 2], 0, function () { return this.year() % 100 }), $(0, ['YYYY', 4], 0, 'year'), $(0, ['YYYYY', 5], 0, 'year'), $(0, ['YYYYYY', 6, !0], 0, 'year'), G('year', 'y'), Z('year', 1), Ye('Y', Me), Ye('YY', _e, ie), Ye('YYYY', he, de), Ye('YYYYY', fe, ue), Ye('YYYYYY', fe, ue), De(['YYYYY', 'YYYYYY'], 0), De('YYYY', function (input, e) { e[0] = input.length === 2 ? o.parseTwoDigitYear(input) : ee(input) }), De('YY', function (input, e) { e[0] = o.parseTwoDigitYear(input) }), De('Y', function (input, e) { e[0] = parseInt(input, 10) }), o.parseTwoDigitYear = function (input) { return ee(input) + (ee(input) > 68 ? 1900 : 2e3) }; const Re = te('FullYear', !0); function Ne (e, t, n, r, o, s, d) { let _; return e < 100 && e >= 0 ? (_ = new Date(e + 400, t, n, r, o, s, d), isFinite(_.getFullYear()) && _.setFullYear(e)) : _ = new Date(e, t, n, r, o, s, d), _ } function $e (e) { let t, n; return e < 100 && e >= 0 ? ((n = Array.prototype.slice.call(arguments))[0] = e + 400, t = new Date(Date.UTC.apply(null, n)), isFinite(t.getUTCFullYear()) && t.setUTCFullYear(e)) : t = new Date(Date.UTC.apply(null, arguments)), t } function Je (e, t, n) { const r = 7 + t - n; return -(7 + $e(e, 0, r).getUTCDay() - t) % 7 + r - 1 } function Ie (e, t, n, r, o) { let d; let _; const l = 1 + 7 * (t - 1) + (7 + n - r) % 7 + Je(e, r, o); return l <= 0 ? _ = Ce(d = e - 1) + l : l > Ce(e) ? (d = e + 1, _ = l - Ce(e)) : (d = e, _ = l), { year: d, dayOfYear: _ } } function Ue (e, t, n) { let r; let o; const d = Je(e.year(), t, n); const _ = Math.floor((e.dayOfYear() - d - 1) / 7) + 1; return _ < 1 ? r = _ + Ge(o = e.year() - 1, t, n) : _ > Ge(e.year(), t, n) ? (r = _ - Ge(e.year(), t, n), o = e.year() + 1) : (o = e.year(), r = _), { week: r, year: o } } function Ge (e, t, n) { const r = Je(e, t, n); const o = Je(e + 1, t, n); return (Ce(e) - r + o) / 7 } function Ve (e, t) { return e.slice(t, 7).concat(e.slice(0, t)) }$('w', ['ww', 2], 'wo', 'week'), $('W', ['WW', 2], 'Wo', 'isoWeek'), G('week', 'w'), G('isoWeek', 'W'), Z('week', 5), Z('isoWeek', 5), Ye('w', _e), Ye('ww', _e, ie), Ye('W', _e), Ye('WW', _e, ie), Te(['w', 'ww', 'W', 'WW'], function (input, e, t, n) { e[n.substr(0, 1)] = ee(input) }), $('d', 0, 'do', 'day'), $('dd', 0, 0, function (e) { return this.localeData().weekdaysMin(this, e) }), $('ddd', 0, 0, function (e) { return this.localeData().weekdaysShort(this, e) }), $('dddd', 0, 0, function (e) { return this.localeData().weekdays(this, e) }), $('e', 0, 0, 'weekday'), $('E', 0, 0, 'isoWeekday'), G('day', 'd'), G('weekday', 'e'), G('isoWeekday', 'E'), Z('day', 11), Z('weekday', 11), Z('isoWeekday', 11), Ye('d', _e), Ye('e', _e), Ye('E', _e), Ye('dd', function (e, t) { return t.weekdaysMinRegex(e) }), Ye('ddd', function (e, t) { return t.weekdaysShortRegex(e) }), Ye('dddd', function (e, t) { return t.weekdaysRegex(e) }), Te(['dd', 'ddd', 'dddd'], function (input, e, t, n) { const r = t._locale.weekdaysParse(input, n, t._strict); r != null ? e.d = r : L(t).invalidWeekday = input }), Te(['d', 'e', 'E'], function (input, e, t, n) { e[n] = ee(input) }); const Be = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'); const qe = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'); const Ke = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'); const Ze = ge; const Qe = ge; const Xe = ge; function et (e, t, n) { let i; let r; let o; const d = e.toLocaleLowerCase(); if (!this._weekdaysParse) { for (this._weekdaysParse = [], this._shortWeekdaysParse = [], this._minWeekdaysParse = [], i = 0; i < 7; ++i) { o = y([2e3, 1]).day(i), this._minWeekdaysParse[i] = this.weekdaysMin(o, '').toLocaleLowerCase(), this._shortWeekdaysParse[i] = this.weekdaysShort(o, '').toLocaleLowerCase(), this._weekdaysParse[i] = this.weekdays(o, '').toLocaleLowerCase() } } return n ? t === 'dddd' ? (r = we.call(this._weekdaysParse, d)) !== -1 ? r : null : t === 'ddd' ? (r = we.call(this._shortWeekdaysParse, d)) !== -1 ? r : null : (r = we.call(this._minWeekdaysParse, d)) !== -1 ? r : null : t === 'dddd' ? (r = we.call(this._weekdaysParse, d)) !== -1 || (r = we.call(this._shortWeekdaysParse, d)) !== -1 || (r = we.call(this._minWeekdaysParse, d)) !== -1 ? r : null : t === 'ddd' ? (r = we.call(this._shortWeekdaysParse, d)) !== -1 || (r = we.call(this._weekdaysParse, d)) !== -1 || (r = we.call(this._minWeekdaysParse, d)) !== -1 ? r : null : (r = we.call(this._minWeekdaysParse, d)) !== -1 || (r = we.call(this._weekdaysParse, d)) !== -1 || (r = we.call(this._shortWeekdaysParse, d)) !== -1 ? r : null } function tt () { function e (a, b) { return b.length - a.length } let i; let t; let n; let r; let o; const d = []; const _ = []; const l = []; const c = []; for (i = 0; i < 7; i++) { t = y([2e3, 1]).day(i), n = ke(this.weekdaysMin(t, '')), r = ke(this.weekdaysShort(t, '')), o = ke(this.weekdays(t, '')), d.push(n), _.push(r), l.push(o), c.push(n), c.push(r), c.push(o) }d.sort(e), _.sort(e), l.sort(e), c.sort(e), this._weekdaysRegex = new RegExp('^(' + c.join('|') + ')', 'i'), this._weekdaysShortRegex = this._weekdaysRegex, this._weekdaysMinRegex = this._weekdaysRegex, this._weekdaysStrictRegex = new RegExp('^(' + l.join('|') + ')', 'i'), this._weekdaysShortStrictRegex = new RegExp('^(' + _.join('|') + ')', 'i'), this._weekdaysMinStrictRegex = new RegExp('^(' + d.join('|') + ')', 'i') } function nt () { return this.hours() % 12 || 12 } function at (e, t) { $(e, 0, 0, function () { return this.localeData().meridiem(this.hours(), this.minutes(), t) }) } function st (e, t) { return t._meridiemParse }$('H', ['HH', 2], 0, 'hour'), $('h', ['hh', 2], 0, nt), $('k', ['kk', 2], 0, function () { return this.hours() || 24 }), $('hmm', 0, 0, function () { return '' + nt.apply(this) + z(this.minutes(), 2) }), $('hmmss', 0, 0, function () { return '' + nt.apply(this) + z(this.minutes(), 2) + z(this.seconds(), 2) }), $('Hmm', 0, 0, function () { return '' + this.hours() + z(this.minutes(), 2) }), $('Hmmss', 0, 0, function () { return '' + this.hours() + z(this.minutes(), 2) + z(this.seconds(), 2) }), at('a', !0), at('A', !1), G('hour', 'h'), Z('hour', 13), Ye('a', st), Ye('A', st), Ye('H', _e), Ye('h', _e), Ye('k', _e), Ye('HH', _e, ie), Ye('hh', _e, ie), Ye('kk', _e, ie), Ye('hmm', le), Ye('hmmss', ce), Ye('Hmm', le), Ye('Hmmss', ce), De(['H', 'HH'], 3), De(['k', 'kk'], function (input, e, t) { const n = ee(input); e[3] = n === 24 ? 0 : n }), De(['a', 'A'], function (input, e, t) { t._isPm = t._locale.isPM(input), t._meridiem = input }), De(['h', 'hh'], function (input, e, t) { e[3] = ee(input), L(t).bigHour = !0 }), De('hmm', function (input, e, t) { const n = input.length - 2; e[3] = ee(input.substr(0, n)), e[4] = ee(input.substr(n)), L(t).bigHour = !0 }), De('hmmss', function (input, e, t) { const n = input.length - 4; const r = input.length - 2; e[3] = ee(input.substr(0, n)), e[4] = ee(input.substr(n, 2)), e[5] = ee(input.substr(r)), L(t).bigHour = !0 }), De('Hmm', function (input, e, t) { const n = input.length - 2; e[3] = ee(input.substr(0, n)), e[4] = ee(input.substr(n)) }), De('Hmmss', function (input, e, t) { const n = input.length - 4; const r = input.length - 2; e[3] = ee(input.substr(0, n)), e[4] = ee(input.substr(n, 2)), e[5] = ee(input.substr(r)) }); let it; const ot = te('Hours', !0); const ut = { calendar: { sameDay: '[Today at] LT', nextDay: '[Tomorrow at] LT', nextWeek: 'dddd [at] LT', lastDay: '[Yesterday at] LT', lastWeek: '[Last] dddd [at] LT', sameElse: 'L' }, longDateFormat: { LTS: 'h:mm:ss A', LT: 'h:mm A', L: 'MM/DD/YYYY', LL: 'MMMM D, YYYY', LLL: 'MMMM D, YYYY h:mm A', LLLL: 'dddd, MMMM D, YYYY h:mm A' }, invalidDate: 'Invalid date', ordinal: '%d', dayOfMonthOrdinalParse: /\d{1,2}/, relativeTime: { future: 'in %s', past: '%s ago', s: 'a few seconds', ss: '%d seconds', m: 'a minute', mm: '%d minutes', h: 'an hour', hh: '%d hours', d: 'a day', dd: '%d days', w: 'a week', ww: '%d weeks', M: 'a month', MM: '%d months', y: 'a year', yy: '%d years' }, months: je, monthsShort: He, week: { dow: 0, doy: 6 }, weekdays: Be, weekdaysMin: Ke, weekdaysShort: qe, meridiemParse: /[ap]\.?m?\.?/i }; const _t = {}; const lt = {}; function ct (e, t) { let i; const n = Math.min(e.length, t.length); for (i = 0; i < n; i += 1) { if (e[i] !== t[i]) { return i } } return n } function mt (e) { return e ? e.toLowerCase().replace('_', '-') : e } function ht (t) { let r = null; if (void 0 === _t[t] && void 0 !== e && e && e.exports) { try { r = it._abbr, n(335)('./' + t), ft(r) } catch (e) { _t[t] = null } } return _t[t] } function ft (e, t) { let data; return e && ((data = m(t) ? Mt(e) : pt(e, t)) ? it = data : typeof console !== 'undefined' && console.warn && console.warn('Locale ' + e + ' not found. Did you forget to load it?')), it._abbr } function pt (e, t) { if (t !== null) { let n; let r = ut; if (t.abbr = e, _t[e] != null) { P('defineLocaleOverride', 'use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info.'), r = _t[e]._config } else if (t.parentLocale != null) { if (_t[t.parentLocale] != null) { r = _t[t.parentLocale]._config } else { if ((n = ht(t.parentLocale)) == null) { return lt[t.parentLocale] || (lt[t.parentLocale] = []), lt[t.parentLocale].push({ name: e, config: t }), null } r = n._config } } return _t[e] = new A(E(r, t)), lt[e] && lt[e].forEach(function (e) { pt(e.name, e.config) }), ft(e), _t[e] } return delete _t[e], null } function Mt (e) { let t; if (e && e._locale && e._locale._abbr && (e = e._locale._abbr), !e) { return it } if (!d(e)) { if (t = ht(e)) { return t } e = [e] } return (function (e) { for (var t, n, r, o, i = 0; i < e.length;) { for (t = (o = mt(e[i]).split('-')).length, n = (n = mt(e[i + 1])) ? n.split('-') : null; t > 0;) { if (r = ht(o.slice(0, t).join('-'))) { return r } if (n && n.length >= t && ct(o, n) >= t - 1) { break } t-- }i++ } return it }(e)) } function yt (e) { let t; const a = e._a; return a && L(e).overflow === -2 && (t = a[1] < 0 || a[1] > 11 ? 1 : a[2] < 1 || a[2] > Se(a[0], a[1]) ? 2 : a[3] < 0 || a[3] > 24 || a[3] === 24 && (a[4] !== 0 || a[5] !== 0 || a[6] !== 0) ? 3 : a[4] < 0 || a[4] > 59 ? 4 : a[5] < 0 || a[5] > 59 ? 5 : a[6] < 0 || a[6] > 999 ? 6 : -1, L(e)._overflowDayOfYear && (t < 0 || t > 2) && (t = 2), L(e)._overflowWeeks && t === -1 && (t = 7), L(e)._overflowWeekday && t === -1 && (t = 8), L(e).overflow = t), e } const Lt = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/; const gt = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d|))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/; const Yt = /Z|[+-]\d\d(?::?\d\d)?/; const bt = [['YYYYYY-MM-DD', /[+-]\d{6}-\d\d-\d\d/], ['YYYY-MM-DD', /\d{4}-\d\d-\d\d/], ['GGGG-[W]WW-E', /\d{4}-W\d\d-\d/], ['GGGG-[W]WW', /\d{4}-W\d\d/, !1], ['YYYY-DDD', /\d{4}-\d{3}/], ['YYYY-MM', /\d{4}-\d\d/, !1], ['YYYYYYMMDD', /[+-]\d{10}/], ['YYYYMMDD', /\d{8}/], ['GGGG[W]WWE', /\d{4}W\d{3}/], ['GGGG[W]WW', /\d{4}W\d{2}/, !1], ['YYYYDDD', /\d{7}/], ['YYYYMM', /\d{6}/, !1], ['YYYY', /\d{4}/, !1]]; const kt = [['HH:mm:ss.SSSS', /\d\d:\d\d:\d\d\.\d+/], ['HH:mm:ss,SSSS', /\d\d:\d\d:\d\d,\d+/], ['HH:mm:ss', /\d\d:\d\d:\d\d/], ['HH:mm', /\d\d:\d\d/], ['HHmmss.SSSS', /\d\d\d\d\d\d\.\d+/], ['HHmmss,SSSS', /\d\d\d\d\d\d,\d+/], ['HHmmss', /\d\d\d\d\d\d/], ['HHmm', /\d\d\d\d/], ['HH', /\d\d/]]; const wt = /^\/?Date\((-?\d+)/i; const vt = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/; const Dt = { UT: 0, GMT: 0, EDT: -240, EST: -300, CDT: -300, CST: -360, MDT: -360, MST: -420, PDT: -420, PST: -480 }; function Tt (e) { let i; let t; let n; let r; let o; let d; const _ = e._i; const l = Lt.exec(_) || gt.exec(_); if (l) { for (L(e).iso = !0, i = 0, t = bt.length; i < t; i++) { if (bt[i][1].exec(l[1])) { r = bt[i][0], n = !1 !== bt[i][2]; break } } if (r == null) { return void (e._isValid = !1) } if (l[3]) { for (i = 0, t = kt.length; i < t; i++) { if (kt[i][1].exec(l[3])) { o = (l[2] || ' ') + kt[i][0]; break } } if (o == null) { return void (e._isValid = !1) } } if (!n && o != null) { return void (e._isValid = !1) } if (l[4]) { if (!Yt.exec(l[4])) { return void (e._isValid = !1) } d = 'Z' }e._f = r + (o || '') + (d || ''), Ot(e) } else { e._isValid = !1 } } function xt (e) { const t = parseInt(e, 10); return t <= 49 ? 2e3 + t : t <= 999 ? 1900 + t : t } function St (e) { let t; let n; let r; let o; let d; let _; let l; let c; const m = vt.exec(e._i.replace(/\([^)]*\)|[\n\t]/g, ' ').replace(/(\s\s+)/g, ' ').replace(/^\s\s*/, '').replace(/\s\s*$/, '')); if (m) { if (n = m[4], r = m[3], o = m[2], d = m[5], _ = m[6], l = m[7], c = [xt(n), He.indexOf(r), parseInt(o, 10), parseInt(d, 10), parseInt(_, 10)], l && c.push(parseInt(l, 10)), t = c, !(function (e, t, n) { return !e || qe.indexOf(e) === new Date(t[0], t[1], t[2]).getDay() || (L(n).weekdayMismatch = !0, n._isValid = !1, !1) }(m[1], t, e))) { return } e._a = t, e._tzm = (function (e, t, n) { if (e) { return Dt[e] } if (t) { return 0 } const r = parseInt(n, 10); const o = r % 100; return (r - o) / 100 * 60 + o }(m[8], m[9], m[10])), e._d = $e.apply(null, e._a), e._d.setUTCMinutes(e._d.getUTCMinutes() - e._tzm), L(e).rfc2822 = !0 } else { e._isValid = !1 } } function jt (a, b, e) { return a != null ? a : b != null ? b : e } function Ht (e) { let i; let t; let n; let r; let d; const input = []; if (!e._d) { for (n = (function (e) { const t = new Date(o.now()); return e._useUTC ? [t.getUTCFullYear(), t.getUTCMonth(), t.getUTCDate()] : [t.getFullYear(), t.getMonth(), t.getDate()] }(e)), e._w && e._a[2] == null && e._a[1] == null && (function (e) { let t, n, r, o, d, _, l, c, m; (t = e._w).GG != null || t.W != null || t.E != null ? (d = 1, _ = 4, n = jt(t.GG, e._a[0], Ue(Et(), 1, 4).year), r = jt(t.W, 1), ((o = jt(t.E, 1)) < 1 || o > 7) && (c = !0)) : (d = e._locale._week.dow, _ = e._locale._week.doy, m = Ue(Et(), d, _), n = jt(t.gg, e._a[0], m.year), r = jt(t.w, m.week), t.d != null ? ((o = t.d) < 0 || o > 6) && (c = !0) : t.e != null ? (o = t.e + d, (t.e < 0 || t.e > 6) && (c = !0)) : o = d), r < 1 || r > Ge(n, d, _) ? L(e)._overflowWeeks = !0 : c != null ? L(e)._overflowWeekday = !0 : (l = Ie(n, r, o, d, _), e._a[0] = l.year, e._dayOfYear = l.dayOfYear) }(e)), e._dayOfYear != null && (d = jt(e._a[0], n[0]), (e._dayOfYear > Ce(d) || e._dayOfYear === 0) && (L(e)._overflowDayOfYear = !0), t = $e(d, 0, e._dayOfYear), e._a[1] = t.getUTCMonth(), e._a[2] = t.getUTCDate()), i = 0; i < 3 && e._a[i] == null; ++i) { e._a[i] = input[i] = n[i] } for (;i < 7; i++) { e._a[i] = input[i] = e._a[i] == null ? i === 2 ? 1 : 0 : e._a[i] }e._a[3] === 24 && e._a[4] === 0 && e._a[5] === 0 && e._a[6] === 0 && (e._nextDay = !0, e._a[3] = 0), e._d = (e._useUTC ? $e : Ne).apply(null, input), r = e._useUTC ? e._d.getUTCDay() : e._d.getDay(), e._tzm != null && e._d.setUTCMinutes(e._d.getUTCMinutes() - e._tzm), e._nextDay && (e._a[3] = 24), e._w && void 0 !== e._w.d && e._w.d !== r && (L(e).weekdayMismatch = !0) } } function Ot (e) { if (e._f !== o.ISO_8601) { if (e._f !== o.RFC_2822) { e._a = [], L(e).empty = !0; let i; let t; let n; let r; let d; let _; let l = '' + e._i; const c = l.length; let m = 0; for (n = I(e._f, e._locale).match(F) || [], i = 0; i < n.length; i++) { r = n[i], (t = (l.match(be(r, e)) || [])[0]) && ((d = l.substr(0, l.indexOf(t))).length > 0 && L(e).unusedInput.push(d), l = l.slice(l.indexOf(t) + t.length), m += t.length), N[r] ? (t ? L(e).empty = !1 : L(e).unusedTokens.push(r), xe(r, t, e)) : e._strict && !t && L(e).unusedTokens.push(r) }L(e).charsLeftOver = c - m, l.length > 0 && L(e).unusedInput.push(l), e._a[3] <= 12 && !0 === L(e).bigHour && e._a[3] > 0 && (L(e).bigHour = void 0), L(e).parsedDateParts = e._a.slice(0), L(e).meridiem = e._meridiem, e._a[3] = (function (e, t, n) { let r; return n == null ? t : e.meridiemHour != null ? e.meridiemHour(t, n) : e.isPM != null ? ((r = e.isPM(n)) && t < 12 && (t += 12), r || t !== 12 || (t = 0), t) : t }(e._locale, e._a[3], e._meridiem)), (_ = L(e).era) !== null && (e._a[0] = e._locale.erasConvertYear(_, e._a[0])), Ht(e), yt(e) } else { St(e) } } else { Tt(e) } } function Pt (e) { let input = e._i; const t = e._f; return e._locale = e._locale || Mt(e._l), input === null || void 0 === t && input === '' ? k({ nullInput: !0 }) : (typeof input === 'string' && (e._i = input = e._locale.preparse(input)), x(input) ? new T(yt(input)) : (f(input) ? e._d = input : d(t) ? (function (e) { let t; let n; let r; let i; let o; let d; let _ = !1; if (e._f.length === 0) { return L(e).invalidFormat = !0, void (e._d = new Date(NaN)) } for (i = 0; i < e._f.length; i++) { o = 0, d = !1, t = D({}, e), e._useUTC != null && (t._useUTC = e._useUTC), t._f = e._f[i], Ot(t), Y(t) && (d = !0), o += L(t).charsLeftOver, o += 10 * L(t).unusedTokens.length, L(t).score = o, _ ? o < r && (r = o, n = t) : (r == null || o < r || d) && (r = o, n = t, d && (_ = !0)) }M(e, n || t) }(e)) : t ? Ot(e) : (function (e) { const input = e._i; m(input) ? e._d = new Date(o.now()) : f(input) ? e._d = new Date(input.valueOf()) : typeof input === 'string' ? (function (e) { const t = wt.exec(e._i); t === null ? (Tt(e), !1 === e._isValid && (delete e._isValid, St(e), !1 === e._isValid && (delete e._isValid, e._strict ? e._isValid = !1 : o.createFromInputFallback(e)))) : e._d = new Date(+t[1]) }(e)) : d(input) ? (e._a = map(input.slice(0), function (e) { return parseInt(e, 10) }), Ht(e)) : _(input) ? (function (e) { if (!e._d) { const i = B(e._i); const t = void 0 === i.day ? i.date : i.day; e._a = map([i.year, i.month, t, i.hour, i.minute, i.second, i.millisecond], function (e) { return e && parseInt(e, 10) }), Ht(e) } }(e)) : h(input) ? e._d = new Date(input) : o.createFromInputFallback(e) }(e)), Y(e) || (e._d = null), e)) } function Wt (input, e, t, n, r) { let o; const l = {}; return !0 !== e && !1 !== e || (n = e, e = void 0), !0 !== t && !1 !== t || (n = t, t = void 0), (_(input) && c(input) || d(input) && input.length === 0) && (input = void 0), l._isAMomentObject = !0, l._useUTC = l._isUTC = r, l._l = t, l._i = input, l._f = e, l._strict = n, (o = new T(yt(Pt(l))))._nextDay && (o.add(1, 'd'), o._nextDay = void 0), o } function Et (input, e, t, n) { return Wt(input, e, t, n, !1) }o.createFromInputFallback = j('value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are discouraged and will be removed in an upcoming major release. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.', function (e) { e._d = new Date(e._i + (e._useUTC ? ' UTC' : '')) }), o.ISO_8601 = function () {}, o.RFC_2822 = function () {}; const At = j('moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/', function () { const e = Et.apply(null, arguments); return this.isValid() && e.isValid() ? e < this ? this : e : k() }); const zt = j('moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/', function () { const e = Et.apply(null, arguments); return this.isValid() && e.isValid() ? e > this ? this : e : k() }); function Ft (e, t) { let n, i; if (t.length === 1 && d(t[0]) && (t = t[0]), !t.length) { return Et() } for (n = t[0], i = 1; i < t.length; ++i) { t[i].isValid() && !t[i][e](n) || (n = t[i]) } return n } const Ct = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond']; function Rt (e) { const t = B(e); const n = t.year || 0; const r = t.quarter || 0; const o = t.month || 0; const d = t.week || t.isoWeek || 0; const _ = t.day || 0; const c = t.hour || 0; const m = t.minute || 0; const h = t.second || 0; const f = t.millisecond || 0; this._isValid = (function (e) { let t; let i; let n = !1; for (t in e) { if (l(e, t) && (we.call(Ct, t) === -1 || e[t] != null && isNaN(e[t]))) { return !1 } } for (i = 0; i < Ct.length; ++i) { if (e[Ct[i]]) { if (n) { return !1 } parseFloat(e[Ct[i]]) !== ee(e[Ct[i]]) && (n = !0) } } return !0 }(t)), this._milliseconds = +f + 1e3 * h + 6e4 * m + 1e3 * c * 60 * 60, this._days = +_ + 7 * d, this._months = +o + 3 * r + 12 * n, this._data = {}, this._locale = Mt(), this._bubble() } function Nt (e) { return e instanceof Rt } function $t (e) { return e < 0 ? -1 * Math.round(-1 * e) : Math.round(e) } function Jt (e, t) { $(e, 0, 0, function () { let e = this.utcOffset(); let n = '+'; return e < 0 && (e = -e, n = '-'), n + z(~~(e / 60), 2) + t + z(~~e % 60, 2) }) }Jt('Z', ':'), Jt('ZZ', ''), Ye('Z', Le), Ye('ZZ', Le), De(['Z', 'ZZ'], function (input, e, t) { t._useUTC = !0, t._tzm = Ut(Le, input) }); const It = /([\+\-]|\d\d)/gi; function Ut (e, t) { let n; let r; const o = (t || '').match(e); return o === null ? null : (r = 60 * (n = ((o[o.length - 1] || []) + '').match(It) || ['-', 0, 0])[1] + ee(n[2])) === 0 ? 0 : n[0] === '+' ? r : -r } function Gt (input, e) { let t, n; return e._isUTC ? (t = e.clone(), n = (x(input) || f(input) ? input.valueOf() : Et(input).valueOf()) - t.valueOf(), t._d.setTime(t._d.valueOf() + n), o.updateOffset(t, !1), t) : Et(input).local() } function Vt (e) { return -Math.round(e._d.getTimezoneOffset()) } function Bt () { return !!this.isValid() && this._isUTC && this._offset === 0 }o.updateOffset = function () {}; const qt = /^(-|\+)?(?:(\d*)[. ])?(\d+):(\d+)(?::(\d+)(\.\d*)?)?$/; const Kt = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/; function Zt (input, e) { let t; let n; let r; let base; let o; let d; let _ = input; let c = null; return Nt(input) ? _ = { ms: input._milliseconds, d: input._days, M: input._months } : h(input) || !isNaN(+input) ? (_ = {}, e ? _[e] = +input : _.milliseconds = +input) : (c = qt.exec(input)) ? (t = c[1] === '-' ? -1 : 1, _ = { y: 0, d: ee(c[2]) * t, h: ee(c[3]) * t, m: ee(c[4]) * t, s: ee(c[5]) * t, ms: ee($t(1e3 * c[6])) * t }) : (c = Kt.exec(input)) ? (t = c[1] === '-' ? -1 : 1, _ = { y: Qt(c[2], t), M: Qt(c[3], t), w: Qt(c[4], t), d: Qt(c[5], t), h: Qt(c[6], t), m: Qt(c[7], t), s: Qt(c[8], t) }) : _ == null ? _ = {} : typeof _ === 'object' && ('from' in _ || 'to' in _) && (base = Et(_.from), o = Et(_.to), r = base.isValid() && o.isValid() ? (o = Gt(o, base), base.isBefore(o) ? d = Xt(base, o) : ((d = Xt(o, base)).milliseconds = -d.milliseconds, d.months = -d.months), d) : { milliseconds: 0, months: 0 }, (_ = {}).ms = r.milliseconds, _.M = r.months), n = new Rt(_), Nt(input) && l(input, '_locale') && (n._locale = input._locale), Nt(input) && l(input, '_isValid') && (n._isValid = input._isValid), n } function Qt (e, t) { const n = e && parseFloat(e.replace(',', '.')); return (isNaN(n) ? 0 : n) * t } function Xt (base, e) { const t = {}; return t.months = e.month() - base.month() + 12 * (e.year() - base.year()), base.clone().add(t.months, 'M').isAfter(e) && --t.months, t.milliseconds = +e - +base.clone().add(t.months, 'M'), t } function en (e, t) { return function (n, r) { let o; return r === null || isNaN(+r) || (P(t, 'moment().' + t + '(period, number) is deprecated. Please use moment().' + t + '(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.'), o = n, n = r, r = o), tn(this, Zt(n, r), e), this } } function tn (e, t, n, r) { const d = t._milliseconds; const _ = $t(t._days); const l = $t(t._months); e.isValid() && (r = r == null || r, l && Ae(e, ne(e, 'Month') + l * n), _ && ae(e, 'Date', ne(e, 'Date') + _ * n), d && e._d.setTime(e._d.valueOf() + d * n), r && o.updateOffset(e, _ || l)) }Zt.fn = Rt.prototype, Zt.invalid = function () { return Zt(NaN) }; const nn = en(1, 'add'); const an = en(-1, 'subtract'); function rn (input) { return typeof input === 'string' || input instanceof String } function sn (input) { return x(input) || f(input) || rn(input) || h(input) || (function (input) { const e = d(input); let t = !1; return e && (t = input.filter(function (e) { return !h(e) && rn(input) }).length === 0), e && t }(input)) || (function (input) { let i; let e; const t = _(input) && !c(input); let n = !1; const r = ['years', 'year', 'y', 'months', 'month', 'M', 'days', 'day', 'd', 'dates', 'date', 'D', 'hours', 'hour', 'h', 'minutes', 'minute', 'm', 'seconds', 'second', 's', 'milliseconds', 'millisecond', 'ms']; for (i = 0; i < r.length; i += 1) { e = r[i], n = n || l(input, e) } return t && n }(input)) || input == null } function on (input) { let i; const e = _(input) && !c(input); let t = !1; const n = ['sameDay', 'nextDay', 'lastDay', 'nextWeek', 'lastWeek', 'sameElse']; for (i = 0; i < n.length; i += 1) { t = t || l(input, n[i]) } return e && t } function dn (a, b) { if (a.date() < b.date()) { return -dn(b, a) } const e = 12 * (b.year() - a.year()) + (b.month() - a.month()); const t = a.clone().add(e, 'months'); return -(e + (b - t < 0 ? (b - t) / (t - a.clone().add(e - 1, 'months')) : (b - t) / (a.clone().add(e + 1, 'months') - t))) || 0 } function un (e) { let t; return void 0 === e ? this._locale._abbr : ((t = Mt(e)) != null && (this._locale = t), this) }o.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ', o.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]'; const _n = j('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.', function (e) { return void 0 === e ? this.localeData() : this.locale(e) }); function ln () { return this._locale } function cn (e, t) { return (e % t + t) % t } function mn (e, t, n) { return e < 100 && e >= 0 ? new Date(e + 400, t, n) - 126227808e5 : new Date(e, t, n).valueOf() } function hn (e, t, n) { return e < 100 && e >= 0 ? Date.UTC(e + 400, t, n) - 126227808e5 : Date.UTC(e, t, n) } function fn (e, t) { return t.erasAbbrRegex(e) } function pn () { let i; let e; const t = []; const n = []; const r = []; const o = []; const d = this.eras(); for (i = 0, e = d.length; i < e; ++i) { n.push(ke(d[i].name)), t.push(ke(d[i].abbr)), r.push(ke(d[i].narrow)), o.push(ke(d[i].name)), o.push(ke(d[i].abbr)), o.push(ke(d[i].narrow)) } this._erasRegex = new RegExp('^(' + o.join('|') + ')', 'i'), this._erasNameRegex = new RegExp('^(' + n.join('|') + ')', 'i'), this._erasAbbrRegex = new RegExp('^(' + t.join('|') + ')', 'i'), this._erasNarrowRegex = new RegExp('^(' + r.join('|') + ')', 'i') } function Mn (e, t) { $(0, [e, e.length], 0, t) } function yn (input, e, t, n, r) { let o; return input == null ? Ue(this, n, r).year : (e > (o = Ge(input, n, r)) && (e = o), Ln.call(this, input, e, t, n, r)) } function Ln (e, t, n, r, o) { const d = Ie(e, t, n, r, o); const _ = $e(d.year, 0, d.dayOfYear); return this.year(_.getUTCFullYear()), this.month(_.getUTCMonth()), this.date(_.getUTCDate()), this }$('N', 0, 0, 'eraAbbr'), $('NN', 0, 0, 'eraAbbr'), $('NNN', 0, 0, 'eraAbbr'), $('NNNN', 0, 0, 'eraName'), $('NNNNN', 0, 0, 'eraNarrow'), $('y', ['y', 1], 'yo', 'eraYear'), $('y', ['yy', 2], 0, 'eraYear'), $('y', ['yyy', 3], 0, 'eraYear'), $('y', ['yyyy', 4], 0, 'eraYear'), Ye('N', fn), Ye('NN', fn), Ye('NNN', fn), Ye('NNNN', function (e, t) { return t.erasNameRegex(e) }), Ye('NNNNN', function (e, t) { return t.erasNarrowRegex(e) }), De(['N', 'NN', 'NNN', 'NNNN', 'NNNNN'], function (input, e, t, n) { const r = t._locale.erasParse(input, n, t._strict); r ? L(t).era = r : L(t).invalidEra = input }), Ye('y', pe), Ye('yy', pe), Ye('yyy', pe), Ye('yyyy', pe), Ye('yo', function (e, t) { return t._eraYearOrdinalRegex || pe }), De(['y', 'yy', 'yyy', 'yyyy'], 0), De(['yo'], function (input, e, t, n) { let r; t._locale._eraYearOrdinalRegex && (r = input.match(t._locale._eraYearOrdinalRegex)), t._locale.eraYearOrdinalParse ? e[0] = t._locale.eraYearOrdinalParse(input, r) : e[0] = parseInt(input, 10) }), $(0, ['gg', 2], 0, function () { return this.weekYear() % 100 }), $(0, ['GG', 2], 0, function () { return this.isoWeekYear() % 100 }), Mn('gggg', 'weekYear'), Mn('ggggg', 'weekYear'), Mn('GGGG', 'isoWeekYear'), Mn('GGGGG', 'isoWeekYear'), G('weekYear', 'gg'), G('isoWeekYear', 'GG'), Z('weekYear', 1), Z('isoWeekYear', 1), Ye('G', Me), Ye('g', Me), Ye('GG', _e, ie), Ye('gg', _e, ie), Ye('GGGG', he, de), Ye('gggg', he, de), Ye('GGGGG', fe, ue), Ye('ggggg', fe, ue), Te(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, e, t, n) { e[n.substr(0, 2)] = ee(input) }), Te(['gg', 'GG'], function (input, e, t, n) { e[n] = o.parseTwoDigitYear(input) }), $('Q', 0, 'Qo', 'quarter'), G('quarter', 'Q'), Z('quarter', 7), Ye('Q', se), De('Q', function (input, e) { e[1] = 3 * (ee(input) - 1) }), $('D', ['DD', 2], 'Do', 'date'), G('date', 'D'), Z('date', 9), Ye('D', _e), Ye('DD', _e, ie), Ye('Do', function (e, t) { return e ? t._dayOfMonthOrdinalParse || t._ordinalParse : t._dayOfMonthOrdinalParseLenient }), De(['D', 'DD'], 2), De('Do', function (input, e) { e[2] = ee(input.match(_e)[0]) }); const gn = te('Date', !0); $('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear'), G('dayOfYear', 'DDD'), Z('dayOfYear', 4), Ye('DDD', me), Ye('DDDD', oe), De(['DDD', 'DDDD'], function (input, e, t) { t._dayOfYear = ee(input) }), $('m', ['mm', 2], 0, 'minute'), G('minute', 'm'), Z('minute', 14), Ye('m', _e), Ye('mm', _e, ie), De(['m', 'mm'], 4); const Yn = te('Minutes', !1); $('s', ['ss', 2], 0, 'second'), G('second', 's'), Z('second', 15), Ye('s', _e), Ye('ss', _e, ie), De(['s', 'ss'], 5); let bn; let kn; const wn = te('Seconds', !1); for ($('S', 0, 0, function () { return ~~(this.millisecond() / 100) }), $(0, ['SS', 2], 0, function () { return ~~(this.millisecond() / 10) }), $(0, ['SSS', 3], 0, 'millisecond'), $(0, ['SSSS', 4], 0, function () { return 10 * this.millisecond() }), $(0, ['SSSSS', 5], 0, function () { return 100 * this.millisecond() }), $(0, ['SSSSSS', 6], 0, function () { return 1e3 * this.millisecond() }), $(0, ['SSSSSSS', 7], 0, function () { return 1e4 * this.millisecond() }), $(0, ['SSSSSSSS', 8], 0, function () { return 1e5 * this.millisecond() }), $(0, ['SSSSSSSSS', 9], 0, function () { return 1e6 * this.millisecond() }), G('millisecond', 'ms'), Z('millisecond', 16), Ye('S', me, se), Ye('SS', me, ie), Ye('SSS', me, oe), bn = 'SSSS'; bn.length <= 9; bn += 'S') { Ye(bn, pe) } function vn (input, e) { e[6] = ee(1e3 * ('0.' + input)) } for (bn = 'S'; bn.length <= 9; bn += 'S') { De(bn, vn) }kn = te('Milliseconds', !1), $('z', 0, 0, 'zoneAbbr'), $('zz', 0, 0, 'zoneName'); const Dn = T.prototype; function Tn (e) { return e }Dn.add = nn, Dn.calendar = function (time, e) { arguments.length === 1 && (sn(arguments[0]) ? (time = arguments[0], e = void 0) : on(arguments[0]) && (e = arguments[0], time = void 0)); const t = time || Et(); const n = Gt(t, this).startOf('day'); const r = o.calendarFormat(this, n) || 'sameElse'; const output = e && (W(e[r]) ? e[r].call(this, t) : e[r]); return this.format(output || this.localeData().calendar(r, this, Et(t))) }, Dn.clone = function () { return new T(this) }, Dn.diff = function (input, e, t) { let n, r, output; if (!this.isValid()) { return NaN } if (!(n = Gt(input, this)).isValid()) { return NaN } switch (r = 6e4 * (n.utcOffset() - this.utcOffset()), e = V(e)) { case 'year':output = dn(this, n) / 12; break; case 'month':output = dn(this, n); break; case 'quarter':output = dn(this, n) / 3; break; case 'second':output = (this - n) / 1e3; break; case 'minute':output = (this - n) / 6e4; break; case 'hour':output = (this - n) / 36e5; break; case 'day':output = (this - n - r) / 864e5; break; case 'week':output = (this - n - r) / 6048e5; break; default:output = this - n } return t ? output : X(output) }, Dn.endOf = function (e) { let time, t; if (void 0 === (e = V(e)) || e === 'millisecond' || !this.isValid()) { return this } switch (t = this._isUTC ? hn : mn, e) { case 'year':time = t(this.year() + 1, 0, 1) - 1; break; case 'quarter':time = t(this.year(), this.month() - this.month() % 3 + 3, 1) - 1; break; case 'month':time = t(this.year(), this.month() + 1, 1) - 1; break; case 'week':time = t(this.year(), this.month(), this.date() - this.weekday() + 7) - 1; break; case 'isoWeek':time = t(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1; break; case 'day':case 'date':time = t(this.year(), this.month(), this.date() + 1) - 1; break; case 'hour':time = this._d.valueOf(), time += 36e5 - cn(time + (this._isUTC ? 0 : 6e4 * this.utcOffset()), 36e5) - 1; break; case 'minute':time = this._d.valueOf(), time += 6e4 - cn(time, 6e4) - 1; break; case 'second':time = this._d.valueOf(), time += 1e3 - cn(time, 1e3) - 1 } return this._d.setTime(time), o.updateOffset(this, !0), this }, Dn.format = function (e) { e || (e = this.isUtc() ? o.defaultFormatUtc : o.defaultFormat); const output = J(this, e); return this.localeData().postformat(output) }, Dn.from = function (time, e) { return this.isValid() && (x(time) && time.isValid() || Et(time).isValid()) ? Zt({ to: this, from: time }).locale(this.locale()).humanize(!e) : this.localeData().invalidDate() }, Dn.fromNow = function (e) { return this.from(Et(), e) }, Dn.to = function (time, e) { return this.isValid() && (x(time) && time.isValid() || Et(time).isValid()) ? Zt({ from: this, to: time }).locale(this.locale()).humanize(!e) : this.localeData().invalidDate() }, Dn.toNow = function (e) { return this.to(Et(), e) }, Dn.get = function (e) { return W(this[e = V(e)]) ? this[e]() : this }, Dn.invalidAt = function () { return L(this).overflow }, Dn.isAfter = function (input, e) { const t = x(input) ? input : Et(input); return !(!this.isValid() || !t.isValid()) && ((e = V(e) || 'millisecond') === 'millisecond' ? this.valueOf() > t.valueOf() : t.valueOf() < this.clone().startOf(e).valueOf()) }, Dn.isBefore = function (input, e) { const t = x(input) ? input : Et(input); return !(!this.isValid() || !t.isValid()) && ((e = V(e) || 'millisecond') === 'millisecond' ? this.valueOf() < t.valueOf() : this.clone().endOf(e).valueOf() < t.valueOf()) }, Dn.isBetween = function (e, t, n, r) { const o = x(e) ? e : Et(e); const d = x(t) ? t : Et(t); return !!(this.isValid() && o.isValid() && d.isValid()) && (((r = r || '()')[0] === '(' ? this.isAfter(o, n) : !this.isBefore(o, n)) && (r[1] === ')' ? this.isBefore(d, n) : !this.isAfter(d, n))) }, Dn.isSame = function (input, e) { let t; const n = x(input) ? input : Et(input); return !(!this.isValid() || !n.isValid()) && ((e = V(e) || 'millisecond') === 'millisecond' ? this.valueOf() === n.valueOf() : (t = n.valueOf(), this.clone().startOf(e).valueOf() <= t && t <= this.clone().endOf(e).valueOf())) }, Dn.isSameOrAfter = function (input, e) { return this.isSame(input, e) || this.isAfter(input, e) }, Dn.isSameOrBefore = function (input, e) { return this.isSame(input, e) || this.isBefore(input, e) }, Dn.isValid = function () { return Y(this) }, Dn.lang = _n, Dn.locale = un, Dn.localeData = ln, Dn.max = zt, Dn.min = At, Dn.parsingFlags = function () { return M({}, L(this)) }, Dn.set = function (e, t) { if (typeof e === 'object') { let i; const n = (function (e) { let u; const t = []; for (u in e) { l(e, u) && t.push({ unit: u, priority: K[u] }) } return t.sort(function (a, b) { return a.priority - b.priority }), t }(e = B(e))); for (i = 0; i < n.length; i++) { this[n[i].unit](e[n[i].unit]) } } else if (W(this[e = V(e)])) { return this[e](t) } return this }, Dn.startOf = function (e) { let time, t; if (void 0 === (e = V(e)) || e === 'millisecond' || !this.isValid()) { return this } switch (t = this._isUTC ? hn : mn, e) { case 'year':time = t(this.year(), 0, 1); break; case 'quarter':time = t(this.year(), this.month() - this.month() % 3, 1); break; case 'month':time = t(this.year(), this.month(), 1); break; case 'week':time = t(this.year(), this.month(), this.date() - this.weekday()); break; case 'isoWeek':time = t(this.year(), this.month(), this.date() - (this.isoWeekday() - 1)); break; case 'day':case 'date':time = t(this.year(), this.month(), this.date()); break; case 'hour':time = this._d.valueOf(), time -= cn(time + (this._isUTC ? 0 : 6e4 * this.utcOffset()), 36e5); break; case 'minute':time = this._d.valueOf(), time -= cn(time, 6e4); break; case 'second':time = this._d.valueOf(), time -= cn(time, 1e3) } return this._d.setTime(time), o.updateOffset(this, !0), this }, Dn.subtract = an, Dn.toArray = function () { const e = this; return [e.year(), e.month(), e.date(), e.hour(), e.minute(), e.second(), e.millisecond()] }, Dn.toObject = function () { const e = this; return { years: e.year(), months: e.month(), date: e.date(), hours: e.hours(), minutes: e.minutes(), seconds: e.seconds(), milliseconds: e.milliseconds() } }, Dn.toDate = function () { return new Date(this.valueOf()) }, Dn.toISOString = function (e) { if (!this.isValid()) { return null } const t = !0 !== e; const n = t ? this.clone().utc() : this; return n.year() < 0 || n.year() > 9999 ? J(n, t ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ') : W(Date.prototype.toISOString) ? t ? this.toDate().toISOString() : new Date(this.valueOf() + 60 * this.utcOffset() * 1e3).toISOString().replace('Z', J(n, 'Z')) : J(n, t ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ') }, Dn.inspect = function () { if (!this.isValid()) { return 'moment.invalid(/* ' + this._i + ' */)' } let e; let t; let n; let r = 'moment'; let o = ''; return this.isLocal() || (r = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone', o = 'Z'), e = '[' + r + '("]', t = this.year() >= 0 && this.year() <= 9999 ? 'YYYY' : 'YYYYYY', n = o + '[")]', this.format(e + t + '-MM-DD[T]HH:mm:ss.SSS' + n) }, typeof Symbol !== 'undefined' && Symbol.for != null && (Dn[Symbol.for('nodejs.util.inspect.custom')] = function () { return 'Moment<' + this.format() + '>' }), Dn.toJSON = function () { return this.isValid() ? this.toISOString() : null }, Dn.toString = function () { return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ') }, Dn.unix = function () { return Math.floor(this.valueOf() / 1e3) }, Dn.valueOf = function () { return this._d.valueOf() - 6e4 * (this._offset || 0) }, Dn.creationData = function () { return { input: this._i, format: this._f, locale: this._locale, isUTC: this._isUTC, strict: this._strict } }, Dn.eraName = function () { let i; let e; let t; const n = this.localeData().eras(); for (i = 0, e = n.length; i < e; ++i) { if (t = this.startOf('day').valueOf(), n[i].since <= t && t <= n[i].until) { return n[i].name } if (n[i].until <= t && t <= n[i].since) { return n[i].name } } return '' }, Dn.eraNarrow = function () { let i; let e; let t; const n = this.localeData().eras(); for (i = 0, e = n.length; i < e; ++i) { if (t = this.startOf('day').valueOf(), n[i].since <= t && t <= n[i].until) { return n[i].narrow } if (n[i].until <= t && t <= n[i].since) { return n[i].narrow } } return '' }, Dn.eraAbbr = function () { let i; let e; let t; const n = this.localeData().eras(); for (i = 0, e = n.length; i < e; ++i) { if (t = this.startOf('day').valueOf(), n[i].since <= t && t <= n[i].until) { return n[i].abbr } if (n[i].until <= t && t <= n[i].since) { return n[i].abbr } } return '' }, Dn.eraYear = function () { let i; let e; let t; let n; const r = this.localeData().eras(); for (i = 0, e = r.length; i < e; ++i) { if (t = r[i].since <= r[i].until ? 1 : -1, n = this.startOf('day').valueOf(), r[i].since <= n && n <= r[i].until || r[i].until <= n && n <= r[i].since) { return (this.year() - o(r[i].since).year()) * t + r[i].offset } } return this.year() }, Dn.year = Re, Dn.isLeapYear = function () { return Q(this.year()) }, Dn.weekYear = function (input) { return yn.call(this, input, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy) }, Dn.isoWeekYear = function (input) { return yn.call(this, input, this.isoWeek(), this.isoWeekday(), 1, 4) }, Dn.quarter = Dn.quarters = function (input) { return input == null ? Math.ceil((this.month() + 1) / 3) : this.month(3 * (input - 1) + this.month() % 3) }, Dn.month = ze, Dn.daysInMonth = function () { return Se(this.year(), this.month()) }, Dn.week = Dn.weeks = function (input) { const e = this.localeData().week(this); return input == null ? e : this.add(7 * (input - e), 'd') }, Dn.isoWeek = Dn.isoWeeks = function (input) { const e = Ue(this, 1, 4).week; return input == null ? e : this.add(7 * (input - e), 'd') }, Dn.weeksInYear = function () { const e = this.localeData()._week; return Ge(this.year(), e.dow, e.doy) }, Dn.weeksInWeekYear = function () { const e = this.localeData()._week; return Ge(this.weekYear(), e.dow, e.doy) }, Dn.isoWeeksInYear = function () { return Ge(this.year(), 1, 4) }, Dn.isoWeeksInISOWeekYear = function () { return Ge(this.isoWeekYear(), 1, 4) }, Dn.date = gn, Dn.day = Dn.days = function (input) { if (!this.isValid()) { return input != null ? this : NaN } const e = this._isUTC ? this._d.getUTCDay() : this._d.getDay(); return input != null ? (input = (function (input, e) { return typeof input !== 'string' ? input : isNaN(input) ? typeof (input = e.weekdaysParse(input)) === 'number' ? input : null : parseInt(input, 10) }(input, this.localeData())), this.add(input - e, 'd')) : e }, Dn.weekday = function (input) { if (!this.isValid()) { return input != null ? this : NaN } const e = (this.day() + 7 - this.localeData()._week.dow) % 7; return input == null ? e : this.add(input - e, 'd') }, Dn.isoWeekday = function (input) { if (!this.isValid()) { return input != null ? this : NaN } if (input != null) { const e = (function (input, e) { return typeof input === 'string' ? e.weekdaysParse(input) % 7 || 7 : isNaN(input) ? null : input }(input, this.localeData())); return this.day(this.day() % 7 ? e : e - 7) } return this.day() || 7 }, Dn.dayOfYear = function (input) { const e = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1; return input == null ? e : this.add(input - e, 'd') }, Dn.hour = Dn.hours = ot, Dn.minute = Dn.minutes = Yn, Dn.second = Dn.seconds = wn, Dn.millisecond = Dn.milliseconds = kn, Dn.utcOffset = function (input, e, t) { let n; const r = this._offset || 0; if (!this.isValid()) { return input != null ? this : NaN } if (input != null) { if (typeof input === 'string') { if ((input = Ut(Le, input)) === null) { return this } } else { Math.abs(input) < 16 && !t && (input *= 60) } return !this._isUTC && e && (n = Vt(this)), this._offset = input, this._isUTC = !0, n != null && this.add(n, 'm'), r !== input && (!e || this._changeInProgress ? tn(this, Zt(input - r, 'm'), 1, !1) : this._changeInProgress || (this._changeInProgress = !0, o.updateOffset(this, !0), this._changeInProgress = null)), this } return this._isUTC ? r : Vt(this) }, Dn.utc = function (e) { return this.utcOffset(0, e) }, Dn.local = function (e) { return this._isUTC && (this.utcOffset(0, e), this._isUTC = !1, e && this.subtract(Vt(this), 'm')), this }, Dn.parseZone = function () { if (this._tzm != null) { this.utcOffset(this._tzm, !1, !0) } else if (typeof this._i === 'string') { const e = Ut(ye, this._i); e != null ? this.utcOffset(e) : this.utcOffset(0, !0) } return this }, Dn.hasAlignedHourOffset = function (input) { return !!this.isValid() && (input = input ? Et(input).utcOffset() : 0, (this.utcOffset() - input) % 60 == 0) }, Dn.isDST = function () { return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset() }, Dn.isLocal = function () { return !!this.isValid() && !this._isUTC }, Dn.isUtcOffset = function () { return !!this.isValid() && this._isUTC }, Dn.isUtc = Bt, Dn.isUTC = Bt, Dn.zoneAbbr = function () { return this._isUTC ? 'UTC' : '' }, Dn.zoneName = function () { return this._isUTC ? 'Coordinated Universal Time' : '' }, Dn.dates = j('dates accessor is deprecated. Use date instead.', gn), Dn.months = j('months accessor is deprecated. Use month instead', ze), Dn.years = j('years accessor is deprecated. Use year instead', Re), Dn.zone = j('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', function (input, e) { return input != null ? (typeof input !== 'string' && (input = -input), this.utcOffset(input, e), this) : -this.utcOffset() }), Dn.isDSTShifted = j('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', function () { if (!m(this._isDSTShifted)) { return this._isDSTShifted } let e; let t = {}; return D(t, this), (t = Pt(t))._a ? (e = t._isUTC ? y(t._a) : Et(t._a), this._isDSTShifted = this.isValid() && (function (e, t, n) { let i; const r = Math.min(e.length, t.length); const o = Math.abs(e.length - t.length); let d = 0; for (i = 0; i < r; i++) { (n && e[i] !== t[i] || !n && ee(e[i]) !== ee(t[i])) && d++ } return d + o }(t._a, e.toArray())) > 0) : this._isDSTShifted = !1, this._isDSTShifted }); const xn = A.prototype; function Sn (e, t, n, r) { const o = Mt(); const d = y().set(r, t); return o[n](d, e) } function jn (e, t, n) { if (h(e) && (t = e, e = void 0), e = e || '', t != null) { return Sn(e, t, n, 'month') } let i; const r = []; for (i = 0; i < 12; i++) { r[i] = Sn(e, i, n, 'month') } return r } function Hn (e, t, n, r) { typeof e === 'boolean' ? (h(t) && (n = t, t = void 0), t = t || '') : (n = t = e, e = !1, h(t) && (n = t, t = void 0), t = t || ''); let i; const o = Mt(); const d = e ? o._week.dow : 0; const _ = []; if (n != null) { return Sn(t, (n + d) % 7, r, 'day') } for (i = 0; i < 7; i++) { _[i] = Sn(t, (i + d) % 7, r, 'day') } return _ }xn.calendar = function (e, t, n) { const output = this._calendar[e] || this._calendar.sameElse; return W(output) ? output.call(t, n) : output }, xn.longDateFormat = function (e) { const t = this._longDateFormat[e]; const n = this._longDateFormat[e.toUpperCase()]; return t || !n ? t : (this._longDateFormat[e] = n.match(F).map(function (e) { return e === 'MMMM' || e === 'MM' || e === 'DD' || e === 'dddd' ? e.slice(1) : e }).join(''), this._longDateFormat[e]) }, xn.invalidDate = function () { return this._invalidDate }, xn.ordinal = function (e) { return this._ordinal.replace('%d', e) }, xn.preparse = Tn, xn.postformat = Tn, xn.relativeTime = function (e, t, n, r) { const output = this._relativeTime[n]; return W(output) ? output(e, t, n, r) : output.replace(/%d/i, e) }, xn.pastFuture = function (e, output) { const t = this._relativeTime[e > 0 ? 'future' : 'past']; return W(t) ? t(output) : t.replace(/%s/i, output) }, xn.set = function (e) { let t, i; for (i in e) { l(e, i) && (W(t = e[i]) ? this[i] = t : this['_' + i] = t) } this._config = e, this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + '|' + /\d{1,2}/.source) }, xn.eras = function (e, t) { let i; let n; let r; const d = this._eras || Mt('en')._eras; for (i = 0, n = d.length; i < n; ++i) { switch (typeof d[i].since) { case 'string':r = o(d[i].since).startOf('day'), d[i].since = r.valueOf() } switch (typeof d[i].until) { case 'undefined':d[i].until = 1 / 0; break; case 'string':r = o(d[i].until).startOf('day').valueOf(), d[i].until = r.valueOf() } } return d }, xn.erasParse = function (e, t, n) { let i; let r; let o; let abbr; let d; const _ = this.eras(); for (e = e.toUpperCase(), i = 0, r = _.length; i < r; ++i) { if (o = _[i].name.toUpperCase(), abbr = _[i].abbr.toUpperCase(), d = _[i].narrow.toUpperCase(), n) { switch (t) { case 'N':case 'NN':case 'NNN':if (abbr === e) { return _[i] } break; case 'NNNN':if (o === e) { return _[i] } break; case 'NNNNN':if (d === e) { return _[i] } } } else if ([o, abbr, d].includes(e)) { return _[i] } } }, xn.erasConvertYear = function (e, t) { const n = e.since <= e.until ? 1 : -1; return void 0 === t ? o(e.since).year() : o(e.since).year() + (t - e.offset) * n }, xn.erasAbbrRegex = function (e) { return l(this, '_erasAbbrRegex') || pn.call(this), e ? this._erasAbbrRegex : this._erasRegex }, xn.erasNameRegex = function (e) { return l(this, '_erasNameRegex') || pn.call(this), e ? this._erasNameRegex : this._erasRegex }, xn.erasNarrowRegex = function (e) { return l(this, '_erasNarrowRegex') || pn.call(this), e ? this._erasNarrowRegex : this._erasRegex }, xn.months = function (e, t) { return e ? d(this._months) ? this._months[e.month()] : this._months[(this._months.isFormat || Oe).test(t) ? 'format' : 'standalone'][e.month()] : d(this._months) ? this._months : this._months.standalone }, xn.monthsShort = function (e, t) { return e ? d(this._monthsShort) ? this._monthsShort[e.month()] : this._monthsShort[Oe.test(t) ? 'format' : 'standalone'][e.month()] : d(this._monthsShort) ? this._monthsShort : this._monthsShort.standalone }, xn.monthsParse = function (e, t, n) { let i, r, o; if (this._monthsParseExact) { return Ee.call(this, e, t, n) } for (this._monthsParse || (this._monthsParse = [], this._longMonthsParse = [], this._shortMonthsParse = []), i = 0; i < 12; i++) { if (r = y([2e3, i]), n && !this._longMonthsParse[i] && (this._longMonthsParse[i] = new RegExp('^' + this.months(r, '').replace('.', '') + '$', 'i'), this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(r, '').replace('.', '') + '$', 'i')), n || this._monthsParse[i] || (o = '^' + this.months(r, '') + '|^' + this.monthsShort(r, ''), this._monthsParse[i] = new RegExp(o.replace('.', ''), 'i')), n && t === 'MMMM' && this._longMonthsParse[i].test(e)) { return i } if (n && t === 'MMM' && this._shortMonthsParse[i].test(e)) { return i } if (!n && this._monthsParse[i].test(e)) { return i } } }, xn.monthsRegex = function (e) { return this._monthsParseExact ? (l(this, '_monthsRegex') || Fe.call(this), e ? this._monthsStrictRegex : this._monthsRegex) : (l(this, '_monthsRegex') || (this._monthsRegex = We), this._monthsStrictRegex && e ? this._monthsStrictRegex : this._monthsRegex) }, xn.monthsShortRegex = function (e) { return this._monthsParseExact ? (l(this, '_monthsRegex') || Fe.call(this), e ? this._monthsShortStrictRegex : this._monthsShortRegex) : (l(this, '_monthsShortRegex') || (this._monthsShortRegex = Pe), this._monthsShortStrictRegex && e ? this._monthsShortStrictRegex : this._monthsShortRegex) }, xn.week = function (e) { return Ue(e, this._week.dow, this._week.doy).week }, xn.firstDayOfYear = function () { return this._week.doy }, xn.firstDayOfWeek = function () { return this._week.dow }, xn.weekdays = function (e, t) { const n = d(this._weekdays) ? this._weekdays : this._weekdays[e && !0 !== e && this._weekdays.isFormat.test(t) ? 'format' : 'standalone']; return !0 === e ? Ve(n, this._week.dow) : e ? n[e.day()] : n }, xn.weekdaysMin = function (e) { return !0 === e ? Ve(this._weekdaysMin, this._week.dow) : e ? this._weekdaysMin[e.day()] : this._weekdaysMin }, xn.weekdaysShort = function (e) { return !0 === e ? Ve(this._weekdaysShort, this._week.dow) : e ? this._weekdaysShort[e.day()] : this._weekdaysShort }, xn.weekdaysParse = function (e, t, n) { let i, r, o; if (this._weekdaysParseExact) { return et.call(this, e, t, n) } for (this._weekdaysParse || (this._weekdaysParse = [], this._minWeekdaysParse = [], this._shortWeekdaysParse = [], this._fullWeekdaysParse = []), i = 0; i < 7; i++) { if (r = y([2e3, 1]).day(i), n && !this._fullWeekdaysParse[i] && (this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(r, '').replace('.', '\\.?') + '$', 'i'), this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(r, '').replace('.', '\\.?') + '$', 'i'), this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(r, '').replace('.', '\\.?') + '$', 'i')), this._weekdaysParse[i] || (o = '^' + this.weekdays(r, '') + '|^' + this.weekdaysShort(r, '') + '|^' + this.weekdaysMin(r, ''), this._weekdaysParse[i] = new RegExp(o.replace('.', ''), 'i')), n && t === 'dddd' && this._fullWeekdaysParse[i].test(e)) { return i } if (n && t === 'ddd' && this._shortWeekdaysParse[i].test(e)) { return i } if (n && t === 'dd' && this._minWeekdaysParse[i].test(e)) { return i } if (!n && this._weekdaysParse[i].test(e)) { return i } } }, xn.weekdaysRegex = function (e) { return this._weekdaysParseExact ? (l(this, '_weekdaysRegex') || tt.call(this), e ? this._weekdaysStrictRegex : this._weekdaysRegex) : (l(this, '_weekdaysRegex') || (this._weekdaysRegex = Ze), this._weekdaysStrictRegex && e ? this._weekdaysStrictRegex : this._weekdaysRegex) }, xn.weekdaysShortRegex = function (e) { return this._weekdaysParseExact ? (l(this, '_weekdaysRegex') || tt.call(this), e ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex) : (l(this, '_weekdaysShortRegex') || (this._weekdaysShortRegex = Qe), this._weekdaysShortStrictRegex && e ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex) }, xn.weekdaysMinRegex = function (e) { return this._weekdaysParseExact ? (l(this, '_weekdaysRegex') || tt.call(this), e ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex) : (l(this, '_weekdaysMinRegex') || (this._weekdaysMinRegex = Xe), this._weekdaysMinStrictRegex && e ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex) }, xn.isPM = function (input) { return (input + '').toLowerCase().charAt(0) === 'p' }, xn.meridiem = function (e, t, n) { return e > 11 ? n ? 'pm' : 'PM' : n ? 'am' : 'AM' }, ft('en', { eras: [{ since: '0001-01-01', until: 1 / 0, offset: 1, name: 'Anno Domini', narrow: 'AD', abbr: 'AD' }, { since: '0000-12-31', until: -1 / 0, offset: 1, name: 'Before Christ', narrow: 'BC', abbr: 'BC' }], dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/, ordinal (e) { const b = e % 10; return e + (ee(e % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th') } }), o.lang = j('moment.lang is deprecated. Use moment.locale instead.', ft), o.langData = j('moment.langData is deprecated. Use moment.localeData instead.', Mt); const On = Math.abs; function Pn (e, input, t, n) { const r = Zt(input, t); return e._milliseconds += n * r._milliseconds, e._days += n * r._days, e._months += n * r._months, e._bubble() } function Wn (e) { return e < 0 ? Math.floor(e) : Math.ceil(e) } function En (e) { return 4800 * e / 146097 } function An (e) { return 146097 * e / 4800 } function zn (e) { return function () { return this.as(e) } } const Fn = zn('ms'); const Cn = zn('s'); const Rn = zn('m'); const Nn = zn('h'); const $n = zn('d'); const Jn = zn('w'); const In = zn('M'); const Un = zn('Q'); const Gn = zn('y'); function Vn (e) { return function () { return this.isValid() ? this._data[e] : NaN } } const Bn = Vn('milliseconds'); const qn = Vn('seconds'); const Kn = Vn('minutes'); const Zn = Vn('hours'); const Qn = Vn('days'); const Xn = Vn('months'); const ea = Vn('years'); let ta = Math.round; const na = { ss: 44, s: 45, m: 45, h: 22, d: 26, w: null, M: 11 }; function aa (e, t, n, r, o) { return o.relativeTime(t || 1, !!n, e, r) } const ra = Math.abs; function sa (e) { return (e > 0) - (e < 0) || +e } function ia () { if (!this.isValid()) { return this.localeData().invalidDate() } let e; let t; let n; let s; let r; let o; let d; let _; let l = ra(this._milliseconds) / 1e3; const c = ra(this._days); let m = ra(this._months); const h = this.asSeconds(); return h ? (e = X(l / 60), t = X(e / 60), l %= 60, e %= 60, n = X(m / 12), m %= 12, s = l ? l.toFixed(3).replace(/\.?0+$/, '') : '', r = h < 0 ? '-' : '', o = sa(this._months) !== sa(h) ? '-' : '', d = sa(this._days) !== sa(h) ? '-' : '', _ = sa(this._milliseconds) !== sa(h) ? '-' : '', r + 'P' + (n ? o + n + 'Y' : '') + (m ? o + m + 'M' : '') + (c ? d + c + 'D' : '') + (t || e || l ? 'T' : '') + (t ? _ + t + 'H' : '') + (e ? _ + e + 'M' : '') + (l ? _ + s + 'S' : '')) : 'P0D' } const oa = Rt.prototype; return oa.isValid = function () { return this._isValid }, oa.abs = function () { const data = this._data; return this._milliseconds = On(this._milliseconds), this._days = On(this._days), this._months = On(this._months), data.milliseconds = On(data.milliseconds), data.seconds = On(data.seconds), data.minutes = On(data.minutes), data.hours = On(data.hours), data.months = On(data.months), data.years = On(data.years), this }, oa.add = function (input, e) { return Pn(this, input, e, 1) }, oa.subtract = function (input, e) { return Pn(this, input, e, -1) }, oa.as = function (e) { if (!this.isValid()) { return NaN } let t; let n; const r = this._milliseconds; if ((e = V(e)) === 'month' || e === 'quarter' || e === 'year') { switch (t = this._days + r / 864e5, n = this._months + En(t), e) { case 'month':return n; case 'quarter':return n / 3; case 'year':return n / 12 } } else { switch (t = this._days + Math.round(An(this._months)), e) { case 'week':return t / 7 + r / 6048e5; case 'day':return t + r / 864e5; case 'hour':return 24 * t + r / 36e5; case 'minute':return 1440 * t + r / 6e4; case 'second':return 86400 * t + r / 1e3; case 'millisecond':return Math.floor(864e5 * t) + r; default:throw new Error('Unknown unit ' + e) } } }, oa.asMilliseconds = Fn, oa.asSeconds = Cn, oa.asMinutes = Rn, oa.asHours = Nn, oa.asDays = $n, oa.asWeeks = Jn, oa.asMonths = In, oa.asQuarters = Un, oa.asYears = Gn, oa.valueOf = function () { return this.isValid() ? this._milliseconds + 864e5 * this._days + this._months % 12 * 2592e6 + 31536e6 * ee(this._months / 12) : NaN }, oa._bubble = function () { let e; let t; let n; let r; let o; let d = this._milliseconds; let _ = this._days; let l = this._months; const data = this._data; return d >= 0 && _ >= 0 && l >= 0 || d <= 0 && _ <= 0 && l <= 0 || (d += 864e5 * Wn(An(l) + _), _ = 0, l = 0), data.milliseconds = d % 1e3, e = X(d / 1e3), data.seconds = e % 60, t = X(e / 60), data.minutes = t % 60, n = X(t / 60), data.hours = n % 24, _ += X(n / 24), o = X(En(_)), l += o, _ -= Wn(An(o)), r = X(l / 12), l %= 12, data.days = _, data.months = l, data.years = r, this }, oa.clone = function () { return Zt(this) }, oa.get = function (e) { return e = V(e), this.isValid() ? this[e + 's']() : NaN }, oa.milliseconds = Bn, oa.seconds = qn, oa.minutes = Kn, oa.hours = Zn, oa.days = Qn, oa.weeks = function () { return X(this.days() / 7) }, oa.months = Xn, oa.years = ea, oa.humanize = function (e, t) { if (!this.isValid()) { return this.localeData().invalidDate() } let n; let output; let r = !1; let th = na; return typeof e === 'object' && (t = e, e = !1), typeof e === 'boolean' && (r = e), typeof t === 'object' && (th = Object.assign({}, na, t), t.s != null && t.ss == null && (th.ss = t.s - 1)), n = this.localeData(), output = (function (e, t, n, r) { const o = Zt(e).abs(); const d = ta(o.as('s')); const _ = ta(o.as('m')); const l = ta(o.as('h')); const c = ta(o.as('d')); const m = ta(o.as('M')); const h = ta(o.as('w')); const f = ta(o.as('y')); let a = d <= n.ss && ['s', d] || d < n.s && ['ss', d] || _ <= 1 && ['m'] || _ < n.m && ['mm', _] || l <= 1 && ['h'] || l < n.h && ['hh', l] || c <= 1 && ['d'] || c < n.d && ['dd', c]; return n.w != null && (a = a || h <= 1 && ['w'] || h < n.w && ['ww', h]), (a = a || m <= 1 && ['M'] || m < n.M && ['MM', m] || f <= 1 && ['y'] || ['yy', f])[2] = t, a[3] = +e > 0, a[4] = r, aa.apply(null, a) }(this, !r, th, n)), r && (output = n.pastFuture(+this, output)), n.postformat(output) }, oa.toISOString = ia, oa.toString = ia, oa.toJSON = ia, oa.locale = un, oa.localeData = ln, oa.toIsoString = j('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', ia), oa.lang = _n, $('X', 0, 0, 'unix'), $('x', 0, 0, 'valueOf'), Ye('x', Me), Ye('X', /[+-]?\d+(\.\d{1,3})?/), De('X', function (input, e, t) { t._d = new Date(1e3 * parseFloat(input)) }), De('x', function (input, e, t) { t._d = new Date(ee(input)) }), o.version = '2.27.0', t = Et, o.fn = Dn, o.min = function () { const e = [].slice.call(arguments, 0); return Ft('isBefore', e) }, o.max = function () { const e = [].slice.call(arguments, 0); return Ft('isAfter', e) }, o.now = function () { return Date.now ? Date.now() : +new Date() }, o.utc = y, o.unix = function (input) { return Et(1e3 * input) }, o.months = function (e, t) { return jn(e, t, 'months') }, o.isDate = f, o.locale = ft, o.invalid = k, o.duration = Zt, o.isMoment = x, o.weekdays = function (e, t, n) { return Hn(e, t, n, 'weekdays') }, o.parseZone = function () { return Et.apply(null, arguments).parseZone() }, o.localeData = Mt, o.isDuration = Nt, o.monthsShort = function (e, t) { return jn(e, t, 'monthsShort') }, o.weekdaysMin = function (e, t, n) { return Hn(e, t, n, 'weekdaysMin') }, o.defineLocale = pt, o.updateLocale = function (e, t) { if (t != null) { let n; let r; let o = ut; _t[e] != null && _t[e].parentLocale != null ? _t[e].set(E(_t[e]._config, t)) : ((r = ht(e)) != null && (o = r._config), t = E(o, t), r == null && (t.abbr = e), (n = new A(t)).parentLocale = _t[e], _t[e] = n), ft(e) } else { _t[e] != null && (_t[e].parentLocale != null ? (_t[e] = _t[e].parentLocale, e === ft() && ft(e)) : _t[e] != null && delete _t[e]) } return _t[e] }, o.locales = function () { return H(_t) }, o.weekdaysShort = function (e, t, n) { return Hn(e, t, n, 'weekdaysShort') }, o.normalizeUnits = V, o.relativeTimeRounding = function (e) { return void 0 === e ? ta : typeof e === 'function' && (ta = e, !0) }, o.relativeTimeThreshold = function (e, t) { return void 0 !== na[e] && (void 0 === t ? na[e] : (na[e] = t, e === 's' && (na.ss = t - 1), !0)) }, o.calendarFormat = function (e, t) { const n = e.diff(t, 'days', !0); return n < -6 ? 'sameElse' : n < -1 ? 'lastWeek' : n < 0 ? 'lastDay' : n < 1 ? 'sameDay' : n < 2 ? 'nextDay' : n < 7 ? 'nextWeek' : 'sameElse' }, o.prototype = Dn, o.HTML5_FMT = { DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm', DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss', DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS', DATE: 'YYYY-MM-DD', TIME: 'HH:mm', TIME_SECONDS: 'HH:mm:ss', TIME_MS: 'HH:mm:ss.SSS', WEEK: 'GGGG-[W]WW', MONTH: 'YYYY-MM' }, o }()) }).call(this, n(334)(e)) },, function (e, t, n) { 'use strict'; n.d(t, 'k', function () { return M }), n.d(t, 'm', function () { return y }), n.d(t, 'l', function () { return L }), n.d(t, 'e', function () { return Y }), n.d(t, 'b', function () { return k }), n.d(t, 'r', function () { return w }), n.d(t, 'g', function () { return v }), n.d(t, 'h', function () { return D }), n.d(t, 'd', function () { return T }), n.d(t, 'q', function () { return x }), n.d(t, 'j', function () { return S }), n.d(t, 's', function () { return H }), n.d(t, 'n', function () { return P }), n.d(t, 'p', function () { return W }), n.d(t, 'f', function () { return E }), n.d(t, 'c', function () { return A }), n.d(t, 'i', function () { return z }), n.d(t, 'o', function () { return F }), n.d(t, 'a', function () { return U }), n.d(t, 't', function () { return G }); n(86), n(41), n(30), n(46), n(80), n(81); const r = n(49); const o = (n(115), n(293), n(39)); const d = (n(35), n(36), n(295), n(298), n(300), n(116), n(28), n(18), n(3)); const _ = (n(48), n(37), n(16), n(61), n(22), n(38)); const l = n(1); function c (object, e) { const t = Object.keys(object); if (Object.getOwnPropertySymbols) { let n = Object.getOwnPropertySymbols(object); e && (n = n.filter(function (e) { return Object.getOwnPropertyDescriptor(object, e).enumerable })), t.push.apply(t, n) } return t } function m (e) { for (let i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; i % 2 ? c(Object(source), !0).forEach(function (t) { Object(_.a)(e, t, source[t]) }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(source)) : c(Object(source)).forEach(function (t) { Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(source, t)) }) } return e } function h (e, t) { let n; if (typeof Symbol === 'undefined' || e[Symbol.iterator] == null) { if (Array.isArray(e) || (n = (function (e, t) { if (!e) { return } if (typeof e === 'string') { return f(e, t) } let n = Object.prototype.toString.call(e).slice(8, -1); n === 'Object' && e.constructor && (n = e.constructor.name); if (n === 'Map' || n === 'Set') { return Array.from(e) } if (n === 'Arguments' || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) { return f(e, t) } }(e))) || t && e && typeof e.length === 'number') { n && (e = n); let i = 0; const r = function () {}; return { s: r, n () { return i >= e.length ? { done: !0 } : { done: !1, value: e[i++] } }, e (e) { throw e }, f: r } } throw new TypeError('Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.') } let o; let d = !0; let _ = !1; return { s () { n = e[Symbol.iterator]() }, n () { const e = n.next(); return d = e.done, e }, e (e) { _ = !0, o = e }, f () { try { d || n.return == null || n.return() } finally { if (_) { throw o } } } } } function f (e, t) { (t == null || t > e.length) && (t = e.length); for (var i = 0, n = new Array(t); i < t; i++) { n[i] = e[i] } return n } function M (e) { l.a.config.errorHandler && l.a.config.errorHandler(e) } function y (e) { return e.then(function (e) { return e.default || e }) } function L (e) { return e.$options && typeof e.$options.fetch === 'function' && !e.$options.fetch.length } function Y (e) { let t; const n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : []; const r = e.$children || []; const o = h(r); try { for (o.s(); !(t = o.n()).done;) { const d = t.value; d.$fetch ? n.push(d) : d.$children && Y(d, n) } } catch (e) { o.e(e) } finally { o.f() } return n } function k (e, t) { if (t || !e.options.__hasNuxtData) { const n = e.options._originDataFn || e.options.data || function () { return {} }; e.options._originDataFn = n, e.options.data = function () { const data = n.call(this, this); return this.$ssrContext && (t = this.$ssrContext.asyncData[e.cid]), m(m({}, data), t) }, e.options.__hasNuxtData = !0, e._Ctor && e._Ctor.options && (e._Ctor.options.data = e.options.data) } } function w (e) { return e.options && e._Ctor === e || (e.options ? (e._Ctor = e, e.extendOptions = e.options) : (e = l.a.extend(e))._Ctor = e, !e.options.name && e.options.__file && (e.options.name = e.options.__file)), e } function v (e) { const t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1]; const n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 'components'; return Array.prototype.concat.apply([], e.matched.map(function (e, r) { return Object.keys(e[n]).map(function (o) { return t && t.push(r), e[n][o] }) })) } function D (e) { const t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1]; return v(e, t, 'instances') } function T (e, t) { return Array.prototype.concat.apply([], e.matched.map(function (e, n) { return Object.keys(e.components).reduce(function (r, o) { return e.components[o] ? r.push(t(e.components[o], e.instances[o], e, o, n)) : delete e.components[o], r }, []) })) } function x (e, t) { return Promise.all(T(e, (function () { const e = Object(d.a)(regeneratorRuntime.mark(function e (n, r, o, d) { return regeneratorRuntime.wrap(function (e) { for (;;) { switch (e.prev = e.next) { case 0:if (typeof n !== 'function' || n.options) { e.next = 4; break } return e.next = 3, n(); case 3:n = e.sent; case 4:return o.components[d] = n = w(n), e.abrupt('return', typeof t === 'function' ? t(n, r, o, d) : n); case 6:case 'end':return e.stop() } } }, e) })); return function (t, n, r, o) { return e.apply(this, arguments) } }()))) } function S (e) { return j.apply(this, arguments) } function j () { return (j = Object(d.a)(regeneratorRuntime.mark(function e (t) { return regeneratorRuntime.wrap(function (e) { for (;;) { switch (e.prev = e.next) { case 0:if (t) { e.next = 2; break } return e.abrupt('return'); case 2:return e.next = 4, x(t); case 4:return e.abrupt('return', m(m({}, t), {}, { meta: v(t).map(function (e, n) { return m(m({}, e.options.meta), (t.matched[n] || {}).meta) }) })); case 5:case 'end':return e.stop() } } }, e) }))).apply(this, arguments) } function H (e, t) { return O.apply(this, arguments) } function O () { return (O = Object(d.a)(regeneratorRuntime.mark(function e (t, n) { let d, _, l, c; return regeneratorRuntime.wrap(function (e) { for (;;) { switch (e.prev = e.next) { case 0:return t.context || (t.context = { isStatic: !0, isDev: !1, isHMR: !1, app: t, payload: n.payload, error: n.error, base: '/', env: { WORDPRESS_BASE_URL: 'https://www.komugirice.com', WORDPRESS_REST_API_ENDPOINT: 'https://www.komugirice.com/wp-json/wp/v2' } }, n.ssrContext && (t.context.ssrContext = n.ssrContext), t.context.redirect = function (e, path, n) { if (e) { t.context._redirected = !0; let r = Object(o.a)(path); if (typeof e === 'number' || r !== 'undefined' && r !== 'object' || (n = path || {}, path = e, r = Object(o.a)(path), e = 302), r === 'object' && (path = t.router.resolve(path).route.fullPath), !/(^[.]{1,2}\/)|(^\/(?!\/))/.test(path)) { throw path = I(path, n), window.location.replace(path), new Error('ERR_REDIRECT') } t.context.next({ path, query: n, status: e }) } }, t.context.nuxtState = window.__NUXT__), e.next = 3, Promise.all([S(n.route), S(n.from)]); case 3:d = e.sent, _ = Object(r.a)(d, 2), l = _[0], c = _[1], n.route && (t.context.route = l), n.from && (t.context.from = c), t.context.next = n.next, t.context._redirected = !1, t.context._errored = !1, t.context.isHMR = !1, t.context.params = t.context.route.params || {}, t.context.query = t.context.route.query || {}; case 15:case 'end':return e.stop() } } }, e) }))).apply(this, arguments) } function P (e, t) { return !e.length || t._redirected || t._errored ? Promise.resolve() : W(e[0], t).then(function () { return P(e.slice(1), t) }) } function W (e, t) { let n; return (n = e.length === 2 ? new Promise(function (n) { e(t, function (e, data) { e && t.error(e), n(data = data || {}) }) }) : e(t)) && n instanceof Promise && typeof n.then === 'function' ? n : Promise.resolve(n) } function E (base, e) { let path = decodeURI(window.location.pathname); return e === 'hash' ? window.location.hash.replace(/^#\//, '') : (base && (path.endsWith('/') ? path : path + '/').startsWith(base) && (path = path.slice(base.length)), (path || '/') + window.location.search + window.location.hash) } function A (e, t) { return (function (e, t) { for (var n = new Array(e.length), i = 0; i < e.length; i++) { Object(o.a)(e[i]) === 'object' && (n[i] = new RegExp('^(?:' + e[i].pattern + ')$', J(t))) } return function (t, r) { for (var path = '', data = t || {}, o = (r || {}).pretty ? R : encodeURIComponent, d = 0; d < e.length; d++) { const _ = e[d]; if (typeof _ !== 'string') { const l = data[_.name || 'pathMatch']; let c = void 0; if (l == null) { if (_.optional) { _.partial && (path += _.prefix); continue } throw new TypeError('Expected "' + _.name + '" to be defined') } if (Array.isArray(l)) { if (!_.repeat) { throw new TypeError('Expected "' + _.name + '" to not repeat, but received `' + JSON.stringify(l) + '`') } if (l.length === 0) { if (_.optional) { continue } throw new TypeError('Expected "' + _.name + '" to not be empty') } for (let m = 0; m < l.length; m++) { if (c = o(l[m]), !n[d].test(c)) { throw new TypeError('Expected all "' + _.name + '" to match "' + _.pattern + '", but received `' + JSON.stringify(c) + '`') } path += (m === 0 ? _.prefix : _.delimiter) + c } } else { if (c = _.asterisk ? R(l, !0) : o(l), !n[d].test(c)) { throw new TypeError('Expected "' + _.name + '" to match "' + _.pattern + '", but received "' + c + '"') } path += _.prefix + c } } else { path += _ } } return path } }((function (e, t) { let n; const r = []; let o = 0; let d = 0; let path = ''; const _ = t && t.delimiter || '/'; for (;(n = C.exec(e)) != null;) { const l = n[0]; const c = n[1]; const m = n.index; if (path += e.slice(d, m), d = m + l.length, c) { path += c[1] } else { const h = e[d]; const f = n[2]; const M = n[3]; const y = n[4]; const L = n[5]; const Y = n[6]; const k = n[7]; path && (r.push(path), path = ''); const w = f != null && h != null && h !== f; const v = Y === '+' || Y === '*'; const D = Y === '?' || Y === '*'; const T = n[2] || _; const pattern = y || L; r.push({ name: M || o++, prefix: f || '', delimiter: T, optional: D, repeat: v, partial: w, asterisk: Boolean(k), pattern: pattern ? $(pattern) : k ? '.*' : '[^' + N(T) + ']+?' }) } }d < e.length && (path += e.substr(d)); path && r.push(path); return r }(e, t)), t)) } function z (e, t) { const n = {}; const r = m(m({}, e), t); for (const o in r) { String(e[o]) !== String(t[o]) && (n[o] = !0) } return n } function F (e) { let t; if (e.message || typeof e === 'string') { t = e.message || e } else { try { t = JSON.stringify(e, null, 2) } catch (n) { t = '['.concat(e.constructor.name, ']') } } return m(m({}, e), {}, { message: t, statusCode: e.statusCode || e.status || e.response && e.response.status || 500 }) }window.onNuxtReadyCbs = [], window.onNuxtReady = function (e) { window.onNuxtReadyCbs.push(e) }; var C = new RegExp(['(\\\\.)', '([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))'].join('|'), 'g'); function R (e, t) { const n = t ? /[?#]/g : /[/?#]/g; return encodeURI(e).replace(n, function (e) { return '%' + e.charCodeAt(0).toString(16).toUpperCase() }) } function N (e) { return e.replace(/([.+*?=^!:${}()[\]|/\\])/g, '\\$1') } function $ (e) { return e.replace(/([=!:$/()])/g, '\\$1') } function J (e) { return e && e.sensitive ? '' : 'i' } function I (e, t) { let n; const o = e.indexOf('://'); o !== -1 ? (n = e.substring(0, o), e = e.substring(o + 3)) : e.startsWith('//') && (e = e.substring(2)); let d; let _ = e.split('/'); let l = (n ? n + '://' : '//') + _.shift(); let path = _.join('/'); if (path === '' && _.length === 1 && (l += '/'), (_ = path.split('#')).length === 2) { const c = _; const m = Object(r.a)(c, 2); path = m[0], d = m[1] } return l += path ? '/' + path : '', t && JSON.stringify(t) !== '{}' && (l += (e.split('?').length === 2 ? '&' : '?') + (function (e) { return Object.keys(e).sort().map(function (t) { const n = e[t]; return n == null ? '' : Array.isArray(n) ? n.slice().map(function (e) { return [t, '=', e].join('') }).join('&') : t + '=' + n }).filter(Boolean).join('&') }(t))), l += d ? '#' + d : '' } function U (e, t, n) { e.$options[t] || (e.$options[t] = []), e.$options[t].includes(n) || e.$options[t].push(n) } function G () { return [].slice.call(arguments).join('/').replace(/\/+/g, '/').replace(':/', '://') } },,,,,,,,,,,,,,, function (e, t, n) { 'use strict'; n.d(t, 'b', function () { return ce }), n.d(t, 'a', function () { return S }); n(18), n(86), n(30), n(37), n(16), n(61); const r = n(3); const o = n(38); const d = (n(22), n(1)); const _ = n(260); const l = n(92); const c = n.n(l); const m = n(40); const h = n.n(m); const f = n(50); const M = n(2); 'scrollRestoration' in window.history && (window.history.scrollRestoration = 'manual', window.addEventListener('beforeunload', function () { window.history.scrollRestoration = 'auto' }), window.addEventListener('load', function () { window.history.scrollRestoration = 'manual' })); const y = function () {}; const L = f.a.prototype.push; f.a.prototype.push = function (e) { const t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : y; const n = arguments.length > 2 ? arguments[2] : void 0; return L.call(this, e, t, n) }, d.a.use(f.a); const Y = { mode: 'history', base: decodeURI('/'), linkActiveClass: 'nuxt-link-active', linkExactActiveClass: 'nuxt-link-exact-active', scrollBehavior (e, t, n) { let r = !1; const o = Object(M.g)(e); (o.some(function (e) { return e.options.scrollToTop }) || o.length < 2 && o.every(function (e) { return !1 !== e.options.scrollToTop })) && (r = { x: 0, y: 0 }), n && (r = n); const d = window.$nuxt; return (e.path === t.path && e.hash !== t.hash || e === t) && d.$nextTick(function () { return d.$emit('triggerScroll') }), new Promise(function (t) { d.$once('triggerScroll', function () { if (e.hash) { let n = e.hash; void 0 !== window.CSS && void 0 !== window.CSS.escape && (n = '#' + window.CSS.escape(n.substr(1))); try { document.querySelector(n) && (r = { selector: n }) } catch (e) { console.warn('Failed to save scroll position. Please add CSS.escape() polyfill (https://github.com/mathiasbynens/CSS.escape).') } }t(r) }) }) }, routes: [{ path: '/category/:slug?', component () { return Object(M.m)(n.e(2).then(n.bind(null, 346))) }, name: 'category-slug' }, { path: '/tag/:slug?', component () { return Object(M.m)(n.e(4).then(n.bind(null, 347))) }, name: 'tag-slug' }, { path: '/', component () { return Object(M.m)(n.e(3).then(n.bind(null, 348))) }, name: 'index' }, { path: '/:slug/:id?', component () { return Object(M.m)(n.e(1).then(n.bind(null, 349))) }, name: 'slug-id' }], fallback: !1 }; function k () { return new f.a(Y) } const w = { name: 'NuxtChild', functional: !0, props: { nuxtChildKey: { type: String, default: '' }, keepAlive: Boolean, keepAliveProps: { type: Object, default: void 0 } }, render (e, t) { let n = t.parent; const data = t.data; const r = t.props; const o = n.$createElement; data.nuxtChild = !0; for (var d = n, _ = n.$nuxt.nuxt.transitions, l = n.$nuxt.nuxt.defaultTransition, c = 0; n;) { n.$vnode && n.$vnode.data.nuxtChild && c++, n = n.$parent }data.nuxtChildDepth = c; const m = _[c] || l; const h = {}; v.forEach(function (e) { void 0 !== m[e] && (h[e] = m[e]) }); const f = {}; D.forEach(function (e) { typeof m[e] === 'function' && (f[e] = m[e].bind(d)) }); const M = f.beforeEnter; if (f.beforeEnter = function (e) { if (window.$nuxt.$nextTick(function () { window.$nuxt.$emit('triggerScroll') }), M) { return M.call(d, e) } }, !1 === m.css) { const y = f.leave; (!y || y.length < 2) && (f.leave = function (e, t) { y && y.call(d, e), d.$nextTick(t) }) } let L = o('routerView', data); return r.keepAlive && (L = o('keep-alive', { props: r.keepAliveProps }, [L])), o('transition', { props: h, on: f }, [L]) } }; var v = ['name', 'mode', 'appear', 'css', 'type', 'duration', 'enterClass', 'leaveClass', 'appearClass', 'enterActiveClass', 'enterActiveClass', 'leaveActiveClass', 'appearActiveClass', 'enterToClass', 'leaveToClass', 'appearToClass']; var D = ['beforeEnter', 'enter', 'afterEnter', 'enterCancelled', 'beforeLeave', 'leave', 'afterLeave', 'leaveCancelled', 'beforeAppear', 'appear', 'afterAppear', 'appearCancelled']; const T = { name: 'NuxtError', props: { error: { type: Object, default: null } }, computed: { statusCode () { return this.error && this.error.statusCode || 500 }, message () { return this.error.message || 'Error' } }, head () { return { title: this.message, meta: [{ name: 'viewport', content: 'width=device-width,initial-scale=1.0,minimum-scale=1.0' }] } } }; const x = (n(303), n(8)); var S = Object(x.a)(T, function () { const e = this; const t = e.$createElement; const n = e._self._c || t; return n('div', { staticClass: '__nuxt-error-page' }, [n('div', { staticClass: 'error' }, [n('svg', { attrs: { xmlns: 'http://www.w3.org/2000/svg', width: '90', height: '90', fill: '#DBE1EC', viewBox: '0 0 48 48' } }, [n('path', { attrs: { d: 'M22 30h4v4h-4zm0-16h4v12h-4zm1.99-10C12.94 4 4 12.95 4 24s8.94 20 19.99 20S44 35.05 44 24 35.04 4 23.99 4zM24 40c-8.84 0-16-7.16-16-16S15.16 8 24 8s16 7.16 16 16-7.16 16-16 16z' } })]), e._v(' '), n('div', { staticClass: 'title' }, [e._v(e._s(e.message))]), e._v(' '), e.statusCode === 404 ? n('p', { staticClass: 'description' }, [void 0 === e.$route ? n('a', { staticClass: 'error-link', attrs: { href: '/' } }) : n('NuxtLink', { staticClass: 'error-link', attrs: { to: '/' } }, [e._v('Back to the home page')])], 1) : e._e(), e._v(' '), e._m(0)])]) }, [function () { const e = this.$createElement; const t = this._self._c || e; return t('div', { staticClass: 'logo' }, [t('a', { attrs: { href: 'https://nuxtjs.org', target: '_blank', rel: 'noopener' } }, [this._v('Nuxt.js')])]) }], !1, null, null, null).exports; const j = (n(35), n(36), n(28), n(49)); const H = { name: 'Nuxt', components: { NuxtChild: w, NuxtError: S }, props: { nuxtChildKey: { type: String, default: void 0 }, keepAlive: Boolean, keepAliveProps: { type: Object, default: void 0 }, name: { type: String, default: 'default' } }, errorCaptured (e) { this.displayingNuxtError && (this.errorFromNuxtError = e, this.$forceUpdate()) }, computed: { routerViewKey () { if (void 0 !== this.nuxtChildKey || this.$route.matched.length > 1) { return this.nuxtChildKey || Object(M.c)(this.$route.matched[0].path)(this.$route.params) } const e = Object(j.a)(this.$route.matched, 1)[0]; if (!e) { return this.$route.path } const t = e.components.default; if (t && t.options) { const n = t.options; if (n.key) { return typeof n.key === 'function' ? n.key(this.$route) : n.key } } return /\/$/.test(e.path) ? this.$route.path : this.$route.path.replace(/\/$/, '') } }, beforeCreate () { d.a.util.defineReactive(this, 'nuxt', this.$root.$options.nuxt) }, render (e) { const t = this; return this.nuxt.err ? this.errorFromNuxtError ? (this.$nextTick(function () { return t.errorFromNuxtError = !1 }), e('div', {}, [e('h2', 'An error occurred while showing the error page'), e('p', 'Unfortunately an error occurred and while showing the error page another error occurred'), e('p', 'Error details: '.concat(this.errorFromNuxtError.toString())), e('nuxt-link', { props: { to: '/' } }, 'Go back to home')])) : (this.displayingNuxtError = !0, this.$nextTick(function () { return t.displayingNuxtError = !1 }), e(S, { props: { error: this.nuxt.err } })) : e('NuxtChild', { key: this.routerViewKey, props: this.$props }) } }; const O = (n(41), n(46), n(115), n(116), n(48), { name: 'NuxtLoading', data () { return { percent: 0, show: !1, canSucceed: !0, reversed: !1, skipTimerCount: 0, rtl: !1, throttle: 200, duration: 5e3, continuous: !1 } }, computed: { left () { return !(!this.continuous && !this.rtl) && (this.rtl ? this.reversed ? '0px' : 'auto' : this.reversed ? 'auto' : '0px') } }, beforeDestroy () { this.clear() }, methods: { clear () { clearInterval(this._timer), clearTimeout(this._throttle), this._timer = null }, start () { const e = this; return this.clear(), this.percent = 0, this.reversed = !1, this.skipTimerCount = 0, this.canSucceed = !0, this.throttle ? this._throttle = setTimeout(function () { return e.startTimer() }, this.throttle) : this.startTimer(), this }, set (e) { return this.show = !0, this.canSucceed = !0, this.percent = Math.min(100, Math.max(0, Math.floor(e))), this }, get () { return this.percent }, increase (e) { return this.percent = Math.min(100, Math.floor(this.percent + e)), this }, decrease (e) { return this.percent = Math.max(0, Math.floor(this.percent - e)), this }, pause () { return clearInterval(this._timer), this }, resume () { return this.startTimer(), this }, finish () { return this.percent = this.reversed ? 0 : 100, this.hide(), this }, hide () { const e = this; return this.clear(), setTimeout(function () { e.show = !1, e.$nextTick(function () { e.percent = 0, e.reversed = !1 }) }, 500), this }, fail (e) { return this.canSucceed = !1, this }, startTimer () { const e = this; this.show || (this.show = !0), void 0 === this._cut && (this._cut = 1e4 / Math.floor(this.duration)), this._timer = setInterval(function () { e.skipTimerCount > 0 ? e.skipTimerCount-- : (e.reversed ? e.decrease(e._cut) : e.increase(e._cut), e.continuous && (e.percent >= 100 || e.percent <= 0) && (e.skipTimerCount = 1, e.reversed = !e.reversed)) }, 100) } }, render (e) { let t = e(!1); return this.show && (t = e('div', { staticClass: 'nuxt-progress', class: { 'nuxt-progress-notransition': this.skipTimerCount > 0, 'nuxt-progress-failed': !this.canSucceed }, style: { width: this.percent + '%', left: this.left } })), t } }); const P = (n(305), Object(x.a)(O, void 0, void 0, !1, null, null, null).exports); const W = n(88); const E = n(89); const A = n(90); const z = n(87); const F = { components: { TheHeader: W.default, TheNavigation: E.default, TheSidebar: A.default, TheFooter: z.default } }; const C = (n(316), Object(x.a)(F, function () { const e = this.$createElement; const t = this._self._c || e; return t('div', { staticClass: 'container cf', attrs: { id: 'container', 'data-barba': 'container', 'data-barba-namespace': 'home' } }, [t('TheHeader'), this._v(' '), t('TheNavigation'), this._v(' '), t('div', { staticClass: 'content cf', attrs: { id: 'content' } }, [t('div', { staticClass: 'content-in wrap', attrs: { id: 'content-in' } }, [t('main', { staticClass: 'main', attrs: { id: 'main', itemtype: 'https://schema.org/Blog' } }, [t('Nuxt')], 1), this._v(' '), t('TheSidebar')], 1)]), this._v(' '), t('TheFooter')], 1) }, [], !1, null, null, null)); const R = C.exports; function N (e, t) { let n; if (typeof Symbol === 'undefined' || e[Symbol.iterator] == null) { if (Array.isArray(e) || (n = (function (e, t) { if (!e) { return } if (typeof e === 'string') { return $(e, t) } let n = Object.prototype.toString.call(e).slice(8, -1); n === 'Object' && e.constructor && (n = e.constructor.name); if (n === 'Map' || n === 'Set') { return Array.from(e) } if (n === 'Arguments' || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) { return $(e, t) } }(e))) || t && e && typeof e.length === 'number') { n && (e = n); let i = 0; const r = function () {}; return { s: r, n () { return i >= e.length ? { done: !0 } : { done: !1, value: e[i++] } }, e (e) { throw e }, f: r } } throw new TypeError('Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.') } let o; let d = !0; let _ = !1; return { s () { n = e[Symbol.iterator]() }, n () { const e = n.next(); return d = e.done, e }, e (e) { _ = !0, o = e }, f () { try { d || n.return == null || n.return() } finally { if (_) { throw o } } } } } function $ (e, t) { (t == null || t > e.length) && (t = e.length); for (var i = 0, n = new Array(t); i < t; i++) { n[i] = e[i] } return n }installComponents(C, { TheHeader: n(88).default, TheNavigation: n(89).default, TheSidebar: n(90).default, TheFooter: n(87).default }); const J = { _default: Object(M.r)(R) }; const I = { render (e, t) { const n = e('NuxtLoading', { ref: 'loading' }); const r = e(this.layout || 'nuxt'); const o = e('div', { domProps: { id: '__layout' }, key: this.layoutName }, [r]); const d = e('transition', { props: { name: 'layout', mode: 'out-in' }, on: { beforeEnter (e) { window.$nuxt.$nextTick(function () { window.$nuxt.$emit('triggerScroll') }) } } }, [o]); return e('div', { domProps: { id: '__nuxt' } }, [n, d]) }, data () { return { isOnline: !0, layout: null, layoutName: '', nbFetching: 0 } }, beforeCreate () { d.a.util.defineReactive(this, 'nuxt', this.$options.nuxt) }, created () { d.a.prototype.$nuxt = this, window.$nuxt = this, this.refreshOnlineStatus(), window.addEventListener('online', this.refreshOnlineStatus), window.addEventListener('offline', this.refreshOnlineStatus), this.error = this.nuxt.error, this.context = this.$options.context }, mounted () { const e = this; return Object(r.a)(regeneratorRuntime.mark(function t () { return regeneratorRuntime.wrap(function (t) { for (;;) { switch (t.prev = t.next) { case 0:if (e.$loading = e.$refs.loading, !e.isPreview) { t.next = 9; break } if (!e.$store || !e.$store._actions.nuxtServerInit) { t.next = 6; break } return e.$loading.start(), t.next = 6, e.$store.dispatch('nuxtServerInit', e.context); case 6:return t.next = 8, e.refresh(); case 8:e.$loading.finish(); case 9:case 'end':return t.stop() } } }, t) }))() }, watch: { 'nuxt.err': 'errorChanged' }, computed: { isOffline () { return !this.isOnline }, isFetching () { return this.nbFetching > 0 }, isPreview () { return Boolean(this.$options.previewData) } }, methods: { refreshOnlineStatus () { void 0 === window.navigator.onLine ? this.isOnline = !0 : this.isOnline = window.navigator.onLine }, refresh () { const e = this; return Object(r.a)(regeneratorRuntime.mark(function t () { let n, r; return regeneratorRuntime.wrap(function (t) { for (;;) { switch (t.prev = t.next) { case 0:if ((n = Object(M.h)(e.$route)).length) { t.next = 3; break } return t.abrupt('return'); case 3:return e.$loading.start(), r = n.map(function (t) { const p = []; if (t.$options.fetch && t.$options.fetch.length && p.push(Object(M.p)(t.$options.fetch, e.context)), t.$fetch) { p.push(t.$fetch()) } else { let n; const r = N(Object(M.e)(t.$vnode.componentInstance)); try { for (r.s(); !(n = r.n()).done;) { const component = n.value; p.push(component.$fetch()) } } catch (e) { r.e(e) } finally { r.f() } } return t.$options.asyncData && p.push(Object(M.p)(t.$options.asyncData, e.context).then(function (e) { for (const n in e) { d.a.set(t.$data, n, e[n]) } })), Promise.all(p) }), t.prev = 5, t.next = 8, Promise.all(r); case 8:t.next = 15; break; case 10:t.prev = 10, t.t0 = t.catch(5), e.$loading.fail(t.t0), Object(M.k)(t.t0), e.error(t.t0); case 15:e.$loading.finish(); case 16:case 'end':return t.stop() } } }, t, null, [[5, 10]]) }))() }, errorChanged () { this.nuxt.err && this.$loading && (this.$loading.fail && this.$loading.fail(this.nuxt.err), this.$loading.finish && this.$loading.finish()) }, setLayout (e) { return e && J['_' + e] || (e = 'default'), this.layoutName = e, this.layout = J['_' + e], this.layout }, loadLayout (e) { return e && J['_' + e] || (e = 'default'), Promise.resolve(J['_' + e]) }, setPagePayload (e) { this._pagePayload = e, this._payloadFetchIndex = 0 }, fetchPayload (e) { const t = this; return Object(r.a)(regeneratorRuntime.mark(function n () { let r, base, o, d; return regeneratorRuntime.wrap(function (n) { for (;;) { switch (n.prev = n.next) { case 0:return r = window.__NUXT__.staticAssetsBase, (base = (t.$router.options.base || '').replace(/\/+$/, '')) && e.startsWith(base) && (e = e.substr(base.length)), e = (e.replace(/\/+$/, '') || '/').split('?')[0].split('#')[0], o = Object(M.t)(base, r, e, 'payload.js'), n.prev = 5, n.next = 8, window.__NUXT_IMPORT__(decodeURI(e), encodeURI(o)); case 8:return d = n.sent, t.setPagePayload(d), n.abrupt('return', d); case 13:throw n.prev = 13, n.t0 = n.catch(5), t.setPagePayload(!1), n.t0; case 17:case 'end':return n.stop() } } }, n, null, [[5, 13]]) }))() } }, components: { NuxtLoading: P } }; const U = {}; for (const G in U) { d.a.component(G, U[G]) } const V = n(13); const B = n.n(V); const K = n(262); const Z = n.n(K); function Q (e, t) { let n; if (typeof Symbol === 'undefined' || e[Symbol.iterator] == null) { if (Array.isArray(e) || (n = (function (e, t) { if (!e) { return } if (typeof e === 'string') { return X(e, t) } let n = Object.prototype.toString.call(e).slice(8, -1); n === 'Object' && e.constructor && (n = e.constructor.name); if (n === 'Map' || n === 'Set') { return Array.from(e) } if (n === 'Arguments' || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) { return X(e, t) } }(e))) || t && e && typeof e.length === 'number') { n && (e = n); let i = 0; const r = function () {}; return { s: r, n () { return i >= e.length ? { done: !0 } : { done: !1, value: e[i++] } }, e (e) { throw e }, f: r } } throw new TypeError('Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.') } let o; let d = !0; let _ = !1; return { s () { n = e[Symbol.iterator]() }, n () { const e = n.next(); return d = e.done, e }, e (e) { _ = !0, o = e }, f () { try { d || n.return == null || n.return() } finally { if (_) { throw o } } } } } function X (e, t) { (t == null || t > e.length) && (t = e.length); for (var i = 0, n = new Array(t); i < t; i++) { n[i] = e[i] } return n } for (var ee = { setBaseURL (e) { this.defaults.baseURL = e }, setHeader (e, t) { let n; const r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 'common'; const o = Q(Array.isArray(r) ? r : [r]); try { for (o.s(); !(n = o.n()).done;) { const d = n.value; if (!t) { return void delete this.defaults.headers[d][e] } this.defaults.headers[d][e] = t } } catch (e) { o.e(e) } finally { o.f() } }, setToken (e, t) { const n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 'common'; const r = e ? (t ? t + ' ' : '') + e : null; this.setHeader('Authorization', r, n) }, onRequest (e) { this.interceptors.request.use(function (t) { return e(t) || t }) }, onResponse (e) { this.interceptors.response.use(function (t) { return e(t) || t }) }, onRequestError (e) { this.interceptors.request.use(void 0, function (t) { return e(t) || Promise.reject(t) }) }, onResponseError (e) { this.interceptors.response.use(void 0, function (t) { return e(t) || Promise.reject(t) }) }, onError (e) { this.onRequestError(e), this.onResponseError(e) }, create (e) { return re(Z()(e, this.defaults)) } }, te = function () { const e = ae[ne]; ee['$' + e] = function () { return this[e].apply(this, arguments).then(function (e) { return e && e.data }) } }, ne = 0, ae = ['request', 'delete', 'get', 'head', 'options', 'post', 'put', 'patch']; ne < ae.length; ne++) { te() } var re = function (e) { const t = B.a.create(e); return t.CancelToken = B.a.CancelToken, t.isCancel = B.a.isCancel, (function (e) { for (const t in ee) { e[t] = ee[t].bind(e) } }(t)), se(t), t }; var se = function (e) { const t = { finish () {}, start () {}, fail () {}, set () {} }; const n = function () { const e = typeof window !== 'undefined' && window.$nuxt; return e && e.$loading && e.$loading.set ? e.$loading : t }; let r = 0; e.onRequest(function (e) { e && !1 === e.progress || r++ }), e.onResponse(function (e) { e && e.config && !1 === e.config.progress || --r <= 0 && (r = 0, n().finish()) }), e.onError(function (e) { e && e.config && !1 === e.config.progress || (r--, B.a.isCancel(e) ? r <= 0 && (r = 0, n().finish()) : (n().fail(), n().finish())) }); const o = function (e) { if (r) { const progress = 100 * e.loaded / (e.total * r); n().set(Math.min(100, progress)) } }; e.defaults.onUploadProgress = o, e.defaults.onDownloadProgress = o }; const ie = function (e, t) { const n = e.$config && e.$config.axios || {}; const r = n.browserBaseURL || n.baseURL || 'http://localhost:3000/'; const o = re({ baseURL: r, headers: { common: { Accept: 'application/json, text/plain, */*' }, delete: {}, get: {}, head: {}, post: {}, put: {}, patch: {} } }); e.$axios = o, t('axios', o) }; const oe = (n(62), n(0)); const de = n.n(oe); function ue (object, e) { const t = Object.keys(object); if (Object.getOwnPropertySymbols) { let n = Object.getOwnPropertySymbols(object); e && (n = n.filter(function (e) { return Object.getOwnPropertyDescriptor(object, e).enumerable })), t.push.apply(t, n) } return t } function _e (e) { for (let i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; i % 2 ? ue(Object(source), !0).forEach(function (t) { Object(o.a)(e, t, source[t]) }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(source)) : ue(Object(source)).forEach(function (t) { Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(source, t)) }) } return e }d.a.filter('formatDate', function (e) { return e ? (de.a.locale('ja'), de()(e).format('LLL')) : '' }), d.a.filter('postLink', function (e) { const t = e.link.replace('https://www.komugirice.com', ''); const link = ''.concat(t); return encodeURI(link) }), d.a.prototype.$fetchPostsByCategories = (function () { const e = Object(r.a)(regeneratorRuntime.mark(function e (t, n) { let r, o, d, _, l, i, c, m, h, f, M, y, L; return regeneratorRuntime.wrap(function (e) { for (;;) { switch (e.prev = e.next) { case 0:return e.next = 2, B.a.get('https://www.komugirice.com/wp-json/wp/v2/posts', { params: t }); case 2:return r = e.sent, o = r.data, e.next = 6, B.a.get('https://www.komugirice.com/wp-json/wp/v2/categories', { params: n }); case 6:for (d = e.sent, _ = d.data, l = [], i = 0; i < o.length; i++) { for (c = o[i], m = 0; m < c.categories.length; m++) { for (h = c.categories[m], f = 0; f < _.length; f++) { if (M = _[f], h === M.id) { for (y = !1, L = 0; L < l.length; L++) { l[L].id === h && (y = !0, l[L].posts.push(c)) }y || l.push({ id: M.id, name: M.name, link: M.link, posts: [c] }) } } } } return e.abrupt('return', l); case 11:case 'end':return e.stop() } } }, e) })); return function (t, n) { return e.apply(this, arguments) } }()), d.a.prototype.$fetchTags = (function () { const e = Object(r.a)(regeneratorRuntime.mark(function e (t) { let n, r; return regeneratorRuntime.wrap(function (e) { for (;;) { switch (e.prev = e.next) { case 0:return e.next = 2, B.a.get('https://www.komugirice.com/wp-json/wp/v2/tags', { params: t }); case 2:return n = e.sent, r = n.data, e.abrupt('return', r); case 5:case 'end':return e.stop() } } }, e) })); return function (t) { return e.apply(this, arguments) } }()), d.a.prototype.$fetchPostsByTag = (function () { const e = Object(r.a)(regeneratorRuntime.mark(function e (t, n) { let r, o, d, _, l, i, c, m; return regeneratorRuntime.wrap(function (e) { for (;;) { switch (e.prev = e.next) { case 0:return e.next = 2, B.a.get('https://www.komugirice.com/wp-json/wp/v2/posts', { params: t }); case 2:return r = e.sent, o = r.data, e.next = 6, B.a.get('https://www.komugirice.com/wp-json/wp/v2/tags', { params: n }); case 6:for (d = e.sent, _ = d.data[0], l = {}, i = 0; i < o.length; i++) { for (c = o[i], m = 0; m < c.tags.length; m++) { c.tags[m] === _.id && (void 0 === l.posts ? l = { id: _.id, name: _.name, posts: [c] } : l.posts.push(c)) } } return console.log(l), e.abrupt('return', l); case 12:case 'end':return e.stop() } } }, e) })); return function (t, n) { return e.apply(this, arguments) } }()), d.a.component(c.a.name, c.a), d.a.component(h.a.name, _e(_e({}, h.a), {}, { render (e, t) { return h.a._warned || (h.a._warned = !0, console.warn('<no-ssr> has been deprecated and will be removed in Nuxt 3, please use <client-only> instead')), h.a.render(e, t) } })), d.a.component(w.name, w), d.a.component('NChild', w), d.a.component(H.name, H), d.a.use(_.a, { keyName: 'head', attribute: 'data-n-head', ssrAttribute: 'data-n-head-ssr', tagIDKeyName: 'hid' }); const le = { name: 'page', mode: 'out-in', appear: !1, appearClass: 'appear', appearActiveClass: 'appear-active', appearToClass: 'appear-to' }; function ce (e) { return me.apply(this, arguments) } function me () { return (me = Object(r.a)(regeneratorRuntime.mark(function e (t) { let n; let r; let o; let _; let l; let path; let c; const m = arguments; return regeneratorRuntime.wrap(function (e) { for (;;) { switch (e.prev = e.next) { case 0:return c = function (e, t) { if (!e) { throw new Error('inject(key, value) has no key provided') } if (void 0 === t) { throw new Error("inject('".concat(e, "', value) has no value provided")) } o[e = '$' + e] = t, o.context[e] || (o.context[e] = t); const n = '__nuxt_' + e + '_installed__'; d.a[n] || (d.a[n] = !0, d.a.use(function () { Object.prototype.hasOwnProperty.call(d.a.prototype, e) || Object.defineProperty(d.a.prototype, e, { get () { return this.$root.$options[e] } }) })) }, n = m.length > 1 && void 0 !== m[1] ? m[1] : {}, e.next = 4, k(); case 4:return r = e.sent, o = _e({ head: { title: 'nuxtjsAndWp', meta: [{ charset: 'utf-8' }, { name: 'viewport', content: 'width=device-width, initial-scale=1' }, { hid: 'description', name: 'description', content: '## Build Setup' }], link: [{ rel: 'icon', type: 'image/x-icon', href: '/favicon.ico' }, { rel: 'stylesheet', href: 'https://use.fontawesome.com/releases/v5.6.1/css/all.css' }], bodyAttrs: { class: 'fz-18px fw-400' }, style: [], script: [] }, router: r, nuxt: { defaultTransition: le, transitions: [le], setTransitions (e) { return Array.isArray(e) || (e = [e]), e = e.map(function (e) { return e = e ? typeof e === 'string' ? Object.assign({}, le, { name: e }) : Object.assign({}, le, e) : le }), this.$options.nuxt.transitions = e, e }, err: null, dateErr: null, error (e) { e = e || null, o.context._errored = Boolean(e), e = e ? Object(M.o)(e) : null; let n = o.nuxt; return this && (n = this.nuxt || this.$options.nuxt), n.dateErr = Date.now(), n.err = e, t && (t.nuxt.error = e), e } } }, I), _ = t ? t.next : function (e) { return o.router.push(e) }, t ? l = r.resolve(t.url).route : (path = Object(M.f)(r.options.base, r.options.mode), l = r.resolve(path).route), e.next = 10, Object(M.s)(o, { route: l, next: _, error: o.nuxt.error.bind(o), payload: t ? t.payload : void 0, req: t ? t.req : void 0, res: t ? t.res : void 0, beforeRenderFns: t ? t.beforeRenderFns : void 0, ssrContext: t }); case 10:c('config', n), o.context.enablePreview = function () { const e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}; o.previewData = Object.assign({}, e), c('preview', e) }, e.next = 15; break; case 15:return e.next = 18, ie(o.context, c); case 18:e.next = 21; break; case 21:e.next = 24; break; case 24:o.context.enablePreview = function () { console.warn('You cannot call enablePreview() outside a plugin.') }, e.next = 28; break; case 28:return e.abrupt('return', { app: o, router: r }); case 29:case 'end':return e.stop() } } }, e) }))).apply(this, arguments) } },,,,,, function (e, t, n) { 'use strict'; e.exports = function (e) { const t = []; return t.toString = function () { return this.map(function (t) { const content = (function (e, t) { const content = e[1] || ''; const n = e[3]; if (!n) { return content } if (t && typeof btoa === 'function') { const r = (d = n, _ = btoa(unescape(encodeURIComponent(JSON.stringify(d)))), data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,'.concat(_), '/*# '.concat(data, ' */')); const o = n.sources.map(function (source) { return '/*# sourceURL='.concat(n.sourceRoot || '').concat(source, ' */') }); return [content].concat(o).concat([r]).join('\n') } let d, _, data; return [content].join('\n') }(t, e)); return t[2] ? '@media '.concat(t[2], ' {').concat(content, '}') : content }).join('') }, t.i = function (e, n, r) { typeof e === 'string' && (e = [[null, e, '']]); const o = {}; if (r) { for (let i = 0; i < this.length; i++) { const d = this[i][0]; d != null && (o[d] = !0) } } for (let _ = 0; _ < e.length; _++) { const l = [].concat(e[_]); r && o[l[0]] || (n && (l[2] ? l[2] = ''.concat(n, ' and ').concat(l[2]) : l[2] = n), t.push(l)) } }, t } }, function (e, t, n) { 'use strict'; function r (e, t) { for (var n = [], r = {}, i = 0; i < t.length; i++) { const o = t[i]; const d = o[0]; const _ = { id: e + ':' + i, css: o[1], media: o[2], sourceMap: o[3] }; r[d] ? r[d].parts.push(_) : n.push(r[d] = { id: d, parts: [_] }) } return n }n.r(t), n.d(t, 'default', function () { return M }); const o = typeof document !== 'undefined'; if (typeof DEBUG !== 'undefined' && DEBUG && !o) { throw new Error("vue-style-loader cannot be used in a non-browser environment. Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.") } const d = {}; const head = o && (document.head || document.getElementsByTagName('head')[0]); let _ = null; let l = 0; let c = !1; const m = function () {}; let h = null; const f = typeof navigator !== 'undefined' && /msie [6-9]\b/.test(navigator.userAgent.toLowerCase()); function M (e, t, n, o) { c = n, h = o || {}; let _ = r(e, t); return y(_), function (t) { for (var n = [], i = 0; i < _.length; i++) { const o = _[i]; (l = d[o.id]).refs--, n.push(l) }t ? y(_ = r(e, t)) : _ = []; for (i = 0; i < n.length; i++) { var l; if ((l = n[i]).refs === 0) { for (let c = 0; c < l.parts.length; c++) { l.parts[c]() } delete d[l.id] } } } } function y (e) { for (let i = 0; i < e.length; i++) { const t = e[i]; const n = d[t.id]; if (n) { n.refs++; for (var r = 0; r < n.parts.length; r++) { n.parts[r](t.parts[r]) } for (;r < t.parts.length; r++) { n.parts.push(Y(t.parts[r])) }n.parts.length > t.parts.length && (n.parts.length = t.parts.length) } else { const o = []; for (r = 0; r < t.parts.length; r++) { o.push(Y(t.parts[r])) }d[t.id] = { id: t.id, refs: 1, parts: o } } } } function L () { const e = document.createElement('style'); return e.type = 'text/css', head.appendChild(e), e } function Y (e) { let t; let n; let r = document.querySelector('style[data-vue-ssr-id~="' + e.id + '"]'); if (r) { if (c) { return m } r.parentNode.removeChild(r) } if (f) { const o = l++; r = _ || (_ = L()), t = v.bind(null, r, o, !1), n = v.bind(null, r, o, !0) } else { r = L(), t = D.bind(null, r), n = function () { r.parentNode.removeChild(r) } } return t(e), function (r) { if (r) { if (r.css === e.css && r.media === e.media && r.sourceMap === e.sourceMap) { return } t(e = r) } else { n() } } } let k; const w = (k = [], function (e, t) { return k[e] = t, k.filter(Boolean).join('\n') }); function v (e, t, n, r) { const o = n ? '' : r.css; if (e.styleSheet) { e.styleSheet.cssText = w(t, o) } else { const d = document.createTextNode(o); const _ = e.childNodes; _[t] && e.removeChild(_[t]), _.length ? e.insertBefore(d, _[t]) : e.appendChild(d) } } function D (e, t) { let n = t.css; const r = t.media; const o = t.sourceMap; if (r && e.setAttribute('media', r), h.ssrId && e.setAttribute('data-vue-ssr-id', t.id), o && (n += '\n/*# sourceURL=' + o.sources[0] + ' */', n += '\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(o)))) + ' */'), e.styleSheet) { e.styleSheet.cssText = n } else { for (;e.firstChild;) { e.removeChild(e.firstChild) }e.appendChild(document.createTextNode(n)) } } },,,,,,,,,,,,,,,, function (e, t, n) { 'use strict'; const r = { name: 'NoSsr', functional: !0, props: { placeholder: String, placeholderTag: { type: String, default: 'div' } }, render (e, t) { const n = t.parent; const r = t.slots; const o = t.props; const d = r(); let _ = d.default; void 0 === _ && (_ = []); const l = d.placeholder; return n._isMounted ? _ : (n.$once('hook:mounted', function () { n.$forceUpdate() }), o.placeholderTag && (o.placeholder || l) ? e(o.placeholderTag, { class: ['no-ssr-placeholder'] }, o.placeholder || l) : _.length > 0 ? _.map(function () { return e(!1) }) : e(!1)) } }; e.exports = r },,,,,,,,,,,,,,,,,,,,,,, function (e, t, n) { let content = n(304); typeof content === 'string' && (content = [[e.i, content, '']]), content.locals && (e.exports = content.locals); (0, n(24).default)('4a1cbb1a', content, !0, { sourceMap: !1 }) }, function (e, t, n) { let content = n(306); typeof content === 'string' && (content = [[e.i, content, '']]), content.locals && (e.exports = content.locals); (0, n(24).default)('fa7ff0ca', content, !0, { sourceMap: !1 }) }, function (e, t, n) { let content = n(308); typeof content === 'string' && (content = [[e.i, content, '']]), content.locals && (e.exports = content.locals); (0, n(24).default)('5ec37782', content, !0, { sourceMap: !1 }) }, function (e, t, n) { let content = n(311); typeof content === 'string' && (content = [[e.i, content, '']]), content.locals && (e.exports = content.locals); (0, n(24).default)('ee56aff6', content, !0, { sourceMap: !1 }) }, function (e, t, n) { let content = n(313); typeof content === 'string' && (content = [[e.i, content, '']]), content.locals && (e.exports = content.locals); (0, n(24).default)('684e0fa2', content, !0, { sourceMap: !1 }) }, function (e, t, n) { 'use strict'; n.r(t); const r = n(69); const o = n.n(r); for (const d in r) { !['default'].includes(d) && (function (e) { n.d(t, e, function () { return r[e] }) }(d)) } t.default = o.a }, function (e, t) {}, function (e, t, n) { let content = n(315); typeof content === 'string' && (content = [[e.i, content, '']]), content.locals && (e.exports = content.locals); (0, n(24).default)('36d1c916', content, !0, { sourceMap: !1 }) }, function (e, t, n) { let content = n(317); typeof content === 'string' && (content = [[e.i, content, '']]), content.locals && (e.exports = content.locals); (0, n(24).default)('56b15182', content, !0, { sourceMap: !1 }) }, function (e, t, n) { 'use strict'; n(37), n(41), n(30), n(48), n(46), n(22), n(35), n(36), n(16), n(80), n(81); const r = n(1); function o (e, t) { let n; if (typeof Symbol === 'undefined' || e[Symbol.iterator] == null) { if (Array.isArray(e) || (n = (function (e, t) { if (!e) { return } if (typeof e === 'string') { return d(e, t) } let n = Object.prototype.toString.call(e).slice(8, -1); n === 'Object' && e.constructor && (n = e.constructor.name); if (n === 'Map' || n === 'Set') { return Array.from(e) } if (n === 'Arguments' || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) { return d(e, t) } }(e))) || t && e && typeof e.length === 'number') { n && (e = n); let i = 0; const r = function () {}; return { s: r, n () { return i >= e.length ? { done: !0 } : { done: !1, value: e[i++] } }, e (e) { throw e }, f: r } } throw new TypeError('Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.') } let o; let _ = !0; let l = !1; return { s () { n = e[Symbol.iterator]() }, n () { const e = n.next(); return _ = e.done, e }, e (e) { l = !0, o = e }, f () { try { _ || n.return == null || n.return() } finally { if (l) { throw o } } } } } function d (e, t) { (t == null || t > e.length) && (t = e.length); for (var i = 0, n = new Array(t); i < t; i++) { n[i] = e[i] } return n } const _ = window.requestIdleCallback || function (e) { const t = Date.now(); return setTimeout(function () { e({ didTimeout: !1, timeRemaining () { return Math.max(0, 50 - (Date.now() - t)) } }) }, 1) }; const l = window.cancelIdleCallback || function (e) { clearTimeout(e) }; const c = window.IntersectionObserver && new window.IntersectionObserver(function (e) { e.forEach(function (e) { const t = e.intersectionRatio; const link = e.target; t <= 0 || link.__prefetch() }) }); t.a = { name: 'NuxtLink', extends: r.a.component('RouterLink'), props: { prefetch: { type: Boolean, default: !0 }, noPrefetch: { type: Boolean, default: !1 } }, mounted () { this.prefetch && !this.noPrefetch && (this.handleId = _(this.observe, { timeout: 2e3 })) }, beforeDestroy () { l(this.handleId), this.__observed && (c.unobserve(this.$el), delete this.$el.__prefetch) }, methods: { observe () { c && this.shouldPrefetch() && (this.$el.__prefetch = this.prefetchLink.bind(this), c.observe(this.$el), this.__observed = !0) }, shouldPrefetch () { const e = this.$router.resolve(this.to, this.$route, this.append); return e.resolved.matched.map(function (e) { return e.components.default }).filter(function (t) { return e.href || typeof t === 'function' && !t.options && !t.__prefetched }).length }, canPrefetch () { const e = navigator.connection; return !(this.$nuxt.isOffline || e && ((e.effectiveType || '').includes('2g') || e.saveData)) }, getPrefetchComponents () { return this.$router.resolve(this.to, this.$route, this.append).resolved.matched.map(function (e) { return e.components.default }).filter(function (e) { return typeof e === 'function' && !e.options && !e.__prefetched }) }, prefetchLink () { if (this.canPrefetch()) { c.unobserve(this.$el); let e; const t = o(this.getPrefetchComponents()); try { for (t.s(); !(e = t.n()).done;) { const n = e.value; const r = n(); r instanceof Promise && r.catch(function () {}), n.__prefetched = !0 } } catch (e) { t.e(e) } finally { t.f() } if (!this.$root.isPreview) { const d = this.$router.resolve(this.to, this.$route, this.append).href; this.$nuxt && this.$nuxt.fetchPayload(d).catch(function () {}) } } } } } },,,,,,,,,,,,,,, function (e, t, n) { 'use strict'; n.r(t); const r = n(93); const o = n(68); for (const d in o) { !['default'].includes(d) && (function (e) { n.d(t, e, function () { return o[e] }) }(d)) } n(314); const _ = n(8); const component = Object(_.a)(o.default, r.a, r.b, !1, null, '35559f0e', null); t.default = component.exports }, function (e, t, n) { 'use strict'; n.r(t); n(28); const r = { filters: { postLink (e) { const t = e.replace('https://www.komugirice.com/', ''); const link = ''.concat(t); return encodeURI(link) } } }; const o = (n(307), n(8)); const component = Object(o.a)(r, function () { const e = this.$createElement; const t = this._self._c || e; return t('div', { staticClass: 'header-container', attrs: { id: 'header-container' } }, [t('div', { staticClass: 'header-container-in hlt-center-logo', attrs: { id: 'header-container-in' } }, [t('header', { staticClass: 'header cf', attrs: { id: 'header', itemscope: '', itemtype: 'https://schema.org/WPHeader' } }, [t('div', { staticClass: 'header-in wrap cf', attrs: { id: 'header-in', itemscope: '', itemtype: 'https://schema.org/WebSite' } }, [t('h1', { staticClass: 'logo logo-header logo-text' }, [t('a', { staticClass: 'site-name site-name-text-link', attrs: { href: '/', itemprop: 'url' } }, [t('span', { staticClass: 'site-name-text', attrs: { itemprop: 'name about' } }, [this._v('KomugiriceのBlog')])])]), this._v(' '), t('div', { staticClass: 'tagline', attrs: { itemprop: 'alternativeHeadline' } }, [this._v('\n          Android等のプログラミングや趣味のブログです\n        ')])])])])]) }, [], !1, null, 'f430662e', null); t.default = component.exports }, function (e, t, n) { 'use strict'; n.r(t); n(18); const r = n(3); const o = (n(62), n(28), { filters: { postLink (e) { const t = e.link.replace('https://www.komugirice.com/', ''); const link = ''.concat(t); return encodeURI(link) } }, data () { return { categories: [] } }, created () { this.asyncData({ hide_empty: !0 }) }, methods: { asyncData (e) { const t = this; return Object(r.a)(regeneratorRuntime.mark(function n () { let r; return regeneratorRuntime.wrap(function (n) { for (;;) { switch (n.prev = n.next) { case 0:return n.next = 2, t.$axios.get(''.concat('https://www.komugirice.com/wp-json/wp/v2', '/categories'), { params: e }); case 2:r = n.sent, t.categories = r.data; case 4:case 'end':return n.stop() } } }, n) }))() } } }); const d = (n(310), n(8)); const component = Object(d.a)(o, function () { const e = this; const t = e.$createElement; const n = e._self._c || t; return n('nav', { staticClass: 'navi cf', attrs: { id: 'navi', itemscope: '', itemtype: 'https://schema.org/SiteNavigationElement' } }, [n('div', { staticClass: 'navi-in wrap cf', attrs: { id: 'navi-in' } }, [n('ul', { staticClass: 'menu-top menu-header menu-pc', attrs: { id: 'menu-navigation' } }, e._l(e.categories, function (t) { return n('li', { key: t.name, staticClass: 'menu-item menu-item-type-taxonomy menu-item-object-category menu-item-has-no-description' }, [n('a', { attrs: { href: '/category/' + t.slug } }, [n('div', { staticClass: 'caption-wrap' }, [n('div', { staticClass: 'item-label' }, [e._v(e._s(t.name))])])])]) }), 0)])]) }, [], !1, null, '9280cc0e', null); t.default = component.exports }, function (e, t, n) { 'use strict'; n.r(t); n(18); const r = n(3); const o = (n(62), n(28), { filters: { postLink (e) { const t = e.link.replace('https://www.komugirice.com', ''); const link = ''.concat(t); return encodeURI(link) } }, data () { return { postsByCategories: [], tags: [] } }, created () { this.fetchData({}) }, methods: { fetchData (e) { const t = this; return Object(r.a)(regeneratorRuntime.mark(function e () { return regeneratorRuntime.wrap(function (e) { for (;;) { switch (e.prev = e.next) { case 0:return e.next = 2, t.$fetchPostsByCategories({}, {}); case 2:return t.postsByCategories = e.sent, e.next = 5, t.$fetchTags({}); case 5:t.tags = e.sent; case 6:case 'end':return e.stop() } } }, e) }))() } } }); const d = (n(312), n(8)); const component = Object(d.a)(o, function () { const e = this; const t = e.$createElement; const n = e._self._c || t; return n('div', { staticClass: 'sidebar nwa cf', attrs: { id: 'sidebar', role: 'complementary' } }, [n('aside', { staticClass: 'widget widget-sidebar widget_categories', attrs: { id: 'categories' } }, [n('h3', { staticClass: 'widget-sidebar-title widget-title' }, [e._v('カテゴリー')]), e._v(' '), n('ul', e._l(e.postsByCategories, function (t) { return n('li', { key: t.id, staticClass: 'cat-item' }, [n('a', { staticClass: 'cf', attrs: { href: e._f('postLink')(t) } }, [e._v(e._s(t.name) + '\n          '), n('span', { staticClass: 'post-count' }, [e._v(e._s(t.posts.length))])])]) }), 0)]), e._v(' '), n('aside', { staticClass: 'widget widget-sidebar widgert_tag_cloud', attrs: { id: 'tag_cloud' } }, [n('h3', { staticClass: 'widget-sidebar-title widget-title' }, [e._v('タグ')]), e._v(' '), n('ul', { staticClass: 'tagcloud' }, e._l(e.tags, function (t) { return n('li', { key: t.id, staticClass: 'tag-item' }, [n('a', { staticClass: 'tag-cloud-link', attrs: { href: e._f('postLink')(t) } }, [n('span', { staticClass: 'tag-caption' }, [n('span', { staticClass: 'fa fa-tag', attrs: { 'aria-hidden': 'true' } }), e._v('\n              ' + e._s(t.name) + '\n            ')]), e._v(' '), n('span', { staticClass: 'tag-link-count' }, [e._v(e._s(t.count))])])]) }), 0)])]) }, [], !1, null, '15b08b0e', null); t.default = component.exports }, function (e, t, n) { 'use strict'; t.a = {} }, function (e, t, n) { 'use strict'; const r = { name: 'ClientOnly', functional: !0, props: { placeholder: String, placeholderTag: { type: String, default: 'div' } }, render (e, t) { const n = t.parent; const r = t.slots; const o = t.props; const d = r(); let _ = d.default; void 0 === _ && (_ = []); const l = d.placeholder; return n._isMounted ? _ : (n.$once('hook:mounted', function () { n.$forceUpdate() }), o.placeholderTag && (o.placeholder || l) ? e(o.placeholderTag, { class: ['client-only-placeholder'] }, o.placeholder || l) : _.length > 0 ? _.map(function () { return e(!1) }) : e(!1)) } }; e.exports = r }, function (e, t, n) { 'use strict'; n.d(t, 'a', function () { return r }), n.d(t, 'b', function () { return o }); var r = function () { const e = this.$createElement; this._self._c; return this._m(0) }; var o = [function () { const e = this.$createElement; const t = this._self._c || e; return t('footer', { staticClass: 'footer footer-container nwa', attrs: { id: 'footer', itemscope: '', itemtype: 'https://schema.org/WPFooter' } }, [t('div', { staticClass: 'footer-in wrap cf', attrs: { id: 'footer-in' } }, [t('div', { staticClass: 'footer-bottom fdt-up-and-down fnm-text-width cf' }, [t('div', { staticClass: 'footer-bottom-content' }, [t('nav', { staticClass: 'navi-footer', attrs: { id: 'navi-footer' } }, [t('div', { staticClass: 'navi-footer-in', attrs: { id: 'navi-footer-in' } })]), this._v(' '), t('div', { staticClass: 'source-org copyright' }, [this._v('Copyright © 2020 komugiriceのBlog All Rights Reserved.')])])])])]) }] },,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,, function (e, t, n) { !(function (e) { 'use strict'; e.defineLocale('af', { months: 'Januarie_Februarie_Maart_April_Mei_Junie_Julie_Augustus_September_Oktober_November_Desember'.split('_'), monthsShort: 'Jan_Feb_Mrt_Apr_Mei_Jun_Jul_Aug_Sep_Okt_Nov_Des'.split('_'), weekdays: 'Sondag_Maandag_Dinsdag_Woensdag_Donderdag_Vrydag_Saterdag'.split('_'), weekdaysShort: 'Son_Maa_Din_Woe_Don_Vry_Sat'.split('_'), weekdaysMin: 'So_Ma_Di_Wo_Do_Vr_Sa'.split('_'), meridiemParse: /vm|nm/i, isPM (input) { return /^nm$/i.test(input) }, meridiem (e, t, n) { return e < 12 ? n ? 'vm' : 'VM' : n ? 'nm' : 'NM' }, longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'DD/MM/YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY HH:mm', LLLL: 'dddd, D MMMM YYYY HH:mm' }, calendar: { sameDay: '[Vandag om] LT', nextDay: '[Môre om] LT', nextWeek: 'dddd [om] LT', lastDay: '[Gister om] LT', lastWeek: '[Laas] dddd [om] LT', sameElse: 'L' }, relativeTime: { future: 'oor %s', past: '%s gelede', s: "'n paar sekondes", ss: '%d sekondes', m: "'n minuut", mm: '%d minute', h: "'n uur", hh: '%d ure', d: "'n dag", dd: '%d dae', M: "'n maand", MM: '%d maande', y: "'n jaar", yy: '%d jaar' }, dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/, ordinal (e) { return e + (e === 1 || e === 8 || e >= 20 ? 'ste' : 'de') }, week: { dow: 1, doy: 4 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; const t = { 1: '١', 2: '٢', 3: '٣', 4: '٤', 5: '٥', 6: '٦', 7: '٧', 8: '٨', 9: '٩', 0: '٠' }; const n = { '١': '1', '٢': '2', '٣': '3', '٤': '4', '٥': '5', '٦': '6', '٧': '7', '٨': '8', '٩': '9', '٠': '0' }; const r = function (e) { return e === 0 ? 0 : e === 1 ? 1 : e === 2 ? 2 : e % 100 >= 3 && e % 100 <= 10 ? 3 : e % 100 >= 11 ? 4 : 5 }; const o = { s: ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'], m: ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'], h: ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'], d: ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'], M: ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'], y: ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام'] }; const d = function (u) { return function (e, t, n, d) { const _ = r(e); let l = o[u][r(e)]; return _ === 2 && (l = l[t ? 0 : 1]), l.replace(/%d/i, e) } }; const _ = ['يناير', 'فبراير', 'مارس', 'أبريل', 'مايو', 'يونيو', 'يوليو', 'أغسطس', 'سبتمبر', 'أكتوبر', 'نوفمبر', 'ديسمبر']; e.defineLocale('ar', { months: _, monthsShort: _, weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'), weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'), weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'), weekdaysParseExact: !0, longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'D/‏M/‏YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY HH:mm', LLLL: 'dddd D MMMM YYYY HH:mm' }, meridiemParse: /ص|م/, isPM (input) { return input === 'م' }, meridiem (e, t, n) { return e < 12 ? 'ص' : 'م' }, calendar: { sameDay: '[اليوم عند الساعة] LT', nextDay: '[غدًا عند الساعة] LT', nextWeek: 'dddd [عند الساعة] LT', lastDay: '[أمس عند الساعة] LT', lastWeek: 'dddd [عند الساعة] LT', sameElse: 'L' }, relativeTime: { future: 'بعد %s', past: 'منذ %s', s: d('s'), ss: d('s'), m: d('m'), mm: d('m'), h: d('h'), hh: d('h'), d: d('d'), dd: d('d'), M: d('M'), MM: d('M'), y: d('y'), yy: d('y') }, preparse (e) { return e.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (e) { return n[e] }).replace(/،/g, ',') }, postformat (e) { return e.replace(/\d/g, function (e) { return t[e] }).replace(/,/g, '،') }, week: { dow: 6, doy: 12 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; const t = function (e) { return e === 0 ? 0 : e === 1 ? 1 : e === 2 ? 2 : e % 100 >= 3 && e % 100 <= 10 ? 3 : e % 100 >= 11 ? 4 : 5 }; const n = { s: ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'], m: ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'], h: ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'], d: ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'], M: ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'], y: ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام'] }; const r = function (u) { return function (e, r, o, d) { const _ = t(e); let l = n[u][t(e)]; return _ === 2 && (l = l[r ? 0 : 1]), l.replace(/%d/i, e) } }; const o = ['جانفي', 'فيفري', 'مارس', 'أفريل', 'ماي', 'جوان', 'جويلية', 'أوت', 'سبتمبر', 'أكتوبر', 'نوفمبر', 'ديسمبر']; e.defineLocale('ar-dz', { months: o, monthsShort: o, weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'), weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'), weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'), weekdaysParseExact: !0, longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'D/‏M/‏YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY HH:mm', LLLL: 'dddd D MMMM YYYY HH:mm' }, meridiemParse: /ص|م/, isPM (input) { return input === 'م' }, meridiem (e, t, n) { return e < 12 ? 'ص' : 'م' }, calendar: { sameDay: '[اليوم عند الساعة] LT', nextDay: '[غدًا عند الساعة] LT', nextWeek: 'dddd [عند الساعة] LT', lastDay: '[أمس عند الساعة] LT', lastWeek: 'dddd [عند الساعة] LT', sameElse: 'L' }, relativeTime: { future: 'بعد %s', past: 'منذ %s', s: r('s'), ss: r('s'), m: r('m'), mm: r('m'), h: r('h'), hh: r('h'), d: r('d'), dd: r('d'), M: r('M'), MM: r('M'), y: r('y'), yy: r('y') }, postformat (e) { return e.replace(/,/g, '،') }, week: { dow: 0, doy: 4 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; e.defineLocale('ar-kw', { months: 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'), monthsShort: 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'), weekdays: 'الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'), weekdaysShort: 'احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'), weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'), weekdaysParseExact: !0, longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'DD/MM/YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY HH:mm', LLLL: 'dddd D MMMM YYYY HH:mm' }, calendar: { sameDay: '[اليوم على الساعة] LT', nextDay: '[غدا على الساعة] LT', nextWeek: 'dddd [على الساعة] LT', lastDay: '[أمس على الساعة] LT', lastWeek: 'dddd [على الساعة] LT', sameElse: 'L' }, relativeTime: { future: 'في %s', past: 'منذ %s', s: 'ثوان', ss: '%d ثانية', m: 'دقيقة', mm: '%d دقائق', h: 'ساعة', hh: '%d ساعات', d: 'يوم', dd: '%d أيام', M: 'شهر', MM: '%d أشهر', y: 'سنة', yy: '%d سنوات' }, week: { dow: 0, doy: 12 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; const t = { 1: '1', 2: '2', 3: '3', 4: '4', 5: '5', 6: '6', 7: '7', 8: '8', 9: '9', 0: '0' }; const n = function (e) { return e === 0 ? 0 : e === 1 ? 1 : e === 2 ? 2 : e % 100 >= 3 && e % 100 <= 10 ? 3 : e % 100 >= 11 ? 4 : 5 }; const r = { s: ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'], m: ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'], h: ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'], d: ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'], M: ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'], y: ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام'] }; const o = function (u) { return function (e, t, o, d) { const _ = n(e); let l = r[u][n(e)]; return _ === 2 && (l = l[t ? 0 : 1]), l.replace(/%d/i, e) } }; const d = ['يناير', 'فبراير', 'مارس', 'أبريل', 'مايو', 'يونيو', 'يوليو', 'أغسطس', 'سبتمبر', 'أكتوبر', 'نوفمبر', 'ديسمبر']; e.defineLocale('ar-ly', { months: d, monthsShort: d, weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'), weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'), weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'), weekdaysParseExact: !0, longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'D/‏M/‏YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY HH:mm', LLLL: 'dddd D MMMM YYYY HH:mm' }, meridiemParse: /ص|م/, isPM (input) { return input === 'م' }, meridiem (e, t, n) { return e < 12 ? 'ص' : 'م' }, calendar: { sameDay: '[اليوم عند الساعة] LT', nextDay: '[غدًا عند الساعة] LT', nextWeek: 'dddd [عند الساعة] LT', lastDay: '[أمس عند الساعة] LT', lastWeek: 'dddd [عند الساعة] LT', sameElse: 'L' }, relativeTime: { future: 'بعد %s', past: 'منذ %s', s: o('s'), ss: o('s'), m: o('m'), mm: o('m'), h: o('h'), hh: o('h'), d: o('d'), dd: o('d'), M: o('M'), MM: o('M'), y: o('y'), yy: o('y') }, preparse (e) { return e.replace(/،/g, ',') }, postformat (e) { return e.replace(/\d/g, function (e) { return t[e] }).replace(/,/g, '،') }, week: { dow: 6, doy: 12 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; e.defineLocale('ar-ma', { months: 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'), monthsShort: 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'), weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'), weekdaysShort: 'احد_اثنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'), weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'), weekdaysParseExact: !0, longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'DD/MM/YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY HH:mm', LLLL: 'dddd D MMMM YYYY HH:mm' }, calendar: { sameDay: '[اليوم على الساعة] LT', nextDay: '[غدا على الساعة] LT', nextWeek: 'dddd [على الساعة] LT', lastDay: '[أمس على الساعة] LT', lastWeek: 'dddd [على الساعة] LT', sameElse: 'L' }, relativeTime: { future: 'في %s', past: 'منذ %s', s: 'ثوان', ss: '%d ثانية', m: 'دقيقة', mm: '%d دقائق', h: 'ساعة', hh: '%d ساعات', d: 'يوم', dd: '%d أيام', M: 'شهر', MM: '%d أشهر', y: 'سنة', yy: '%d سنوات' }, week: { dow: 6, doy: 12 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; const t = { 1: '١', 2: '٢', 3: '٣', 4: '٤', 5: '٥', 6: '٦', 7: '٧', 8: '٨', 9: '٩', 0: '٠' }; const n = { '١': '1', '٢': '2', '٣': '3', '٤': '4', '٥': '5', '٦': '6', '٧': '7', '٨': '8', '٩': '9', '٠': '0' }; e.defineLocale('ar-sa', { months: 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'), monthsShort: 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'), weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'), weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'), weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'), weekdaysParseExact: !0, longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'DD/MM/YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY HH:mm', LLLL: 'dddd D MMMM YYYY HH:mm' }, meridiemParse: /ص|م/, isPM (input) { return input === 'م' }, meridiem (e, t, n) { return e < 12 ? 'ص' : 'م' }, calendar: { sameDay: '[اليوم على الساعة] LT', nextDay: '[غدا على الساعة] LT', nextWeek: 'dddd [على الساعة] LT', lastDay: '[أمس على الساعة] LT', lastWeek: 'dddd [على الساعة] LT', sameElse: 'L' }, relativeTime: { future: 'في %s', past: 'منذ %s', s: 'ثوان', ss: '%d ثانية', m: 'دقيقة', mm: '%d دقائق', h: 'ساعة', hh: '%d ساعات', d: 'يوم', dd: '%d أيام', M: 'شهر', MM: '%d أشهر', y: 'سنة', yy: '%d سنوات' }, preparse (e) { return e.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (e) { return n[e] }).replace(/،/g, ',') }, postformat (e) { return e.replace(/\d/g, function (e) { return t[e] }).replace(/,/g, '،') }, week: { dow: 0, doy: 6 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; e.defineLocale('ar-tn', { months: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'), monthsShort: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'), weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'), weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'), weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'), weekdaysParseExact: !0, longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'DD/MM/YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY HH:mm', LLLL: 'dddd D MMMM YYYY HH:mm' }, calendar: { sameDay: '[اليوم على الساعة] LT', nextDay: '[غدا على الساعة] LT', nextWeek: 'dddd [على الساعة] LT', lastDay: '[أمس على الساعة] LT', lastWeek: 'dddd [على الساعة] LT', sameElse: 'L' }, relativeTime: { future: 'في %s', past: 'منذ %s', s: 'ثوان', ss: '%d ثانية', m: 'دقيقة', mm: '%d دقائق', h: 'ساعة', hh: '%d ساعات', d: 'يوم', dd: '%d أيام', M: 'شهر', MM: '%d أشهر', y: 'سنة', yy: '%d سنوات' }, week: { dow: 1, doy: 4 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; const t = { 1: '-inci', 5: '-inci', 8: '-inci', 70: '-inci', 80: '-inci', 2: '-nci', 7: '-nci', 20: '-nci', 50: '-nci', 3: '-üncü', 4: '-üncü', 100: '-üncü', 6: '-ncı', 9: '-uncu', 10: '-uncu', 30: '-uncu', 60: '-ıncı', 90: '-ıncı' }; e.defineLocale('az', { months: 'yanvar_fevral_mart_aprel_may_iyun_iyul_avqust_sentyabr_oktyabr_noyabr_dekabr'.split('_'), monthsShort: 'yan_fev_mar_apr_may_iyn_iyl_avq_sen_okt_noy_dek'.split('_'), weekdays: 'Bazar_Bazar ertəsi_Çərşənbə axşamı_Çərşənbə_Cümə axşamı_Cümə_Şənbə'.split('_'), weekdaysShort: 'Baz_BzE_ÇAx_Çər_CAx_Cüm_Şən'.split('_'), weekdaysMin: 'Bz_BE_ÇA_Çə_CA_Cü_Şə'.split('_'), weekdaysParseExact: !0, longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'DD.MM.YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY HH:mm', LLLL: 'dddd, D MMMM YYYY HH:mm' }, calendar: { sameDay: '[bugün saat] LT', nextDay: '[sabah saat] LT', nextWeek: '[gələn həftə] dddd [saat] LT', lastDay: '[dünən] LT', lastWeek: '[keçən həftə] dddd [saat] LT', sameElse: 'L' }, relativeTime: { future: '%s sonra', past: '%s əvvəl', s: 'birneçə saniyə', ss: '%d saniyə', m: 'bir dəqiqə', mm: '%d dəqiqə', h: 'bir saat', hh: '%d saat', d: 'bir gün', dd: '%d gün', M: 'bir ay', MM: '%d ay', y: 'bir il', yy: '%d il' }, meridiemParse: /gecə|səhər|gündüz|axşam/, isPM (input) { return /^(gündüz|axşam)$/.test(input) }, meridiem (e, t, n) { return e < 4 ? 'gecə' : e < 12 ? 'səhər' : e < 17 ? 'gündüz' : 'axşam' }, dayOfMonthOrdinalParse: /\d{1,2}-(ıncı|inci|nci|üncü|ncı|uncu)/, ordinal (e) { if (e === 0) { return e + '-ıncı' } const a = e % 10; return e + (t[a] || t[e % 100 - a] || t[e >= 100 ? 100 : null]) }, week: { dow: 1, doy: 7 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; function t (e, t, n) { let r, o; return n === 'm' ? t ? 'хвіліна' : 'хвіліну' : n === 'h' ? t ? 'гадзіна' : 'гадзіну' : e + ' ' + (r = +e, o = { ss: t ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд', mm: t ? 'хвіліна_хвіліны_хвілін' : 'хвіліну_хвіліны_хвілін', hh: t ? 'гадзіна_гадзіны_гадзін' : 'гадзіну_гадзіны_гадзін', dd: 'дзень_дні_дзён', MM: 'месяц_месяцы_месяцаў', yy: 'год_гады_гадоў' }[n].split('_'), r % 10 == 1 && r % 100 != 11 ? o[0] : r % 10 >= 2 && r % 10 <= 4 && (r % 100 < 10 || r % 100 >= 20) ? o[1] : o[2]) }e.defineLocale('be', { months: { format: 'студзеня_лютага_сакавіка_красавіка_траўня_чэрвеня_ліпеня_жніўня_верасня_кастрычніка_лістапада_снежня'.split('_'), standalone: 'студзень_люты_сакавік_красавік_травень_чэрвень_ліпень_жнівень_верасень_кастрычнік_лістапад_снежань'.split('_') }, monthsShort: 'студ_лют_сак_крас_трав_чэрв_ліп_жнів_вер_каст_ліст_снеж'.split('_'), weekdays: { format: 'нядзелю_панядзелак_аўторак_сераду_чацвер_пятніцу_суботу'.split('_'), standalone: 'нядзеля_панядзелак_аўторак_серада_чацвер_пятніца_субота'.split('_'), isFormat: /\[ ?[Ууў] ?(?:мінулую|наступную)? ?\] ?dddd/ }, weekdaysShort: 'нд_пн_ат_ср_чц_пт_сб'.split('_'), weekdaysMin: 'нд_пн_ат_ср_чц_пт_сб'.split('_'), longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'DD.MM.YYYY', LL: 'D MMMM YYYY г.', LLL: 'D MMMM YYYY г., HH:mm', LLLL: 'dddd, D MMMM YYYY г., HH:mm' }, calendar: { sameDay: '[Сёння ў] LT', nextDay: '[Заўтра ў] LT', lastDay: '[Учора ў] LT', nextWeek () { return '[У] dddd [ў] LT' }, lastWeek () { switch (this.day()) { case 0:case 3:case 5:case 6:return '[У мінулую] dddd [ў] LT'; case 1:case 2:case 4:return '[У мінулы] dddd [ў] LT' } }, sameElse: 'L' }, relativeTime: { future: 'праз %s', past: '%s таму', s: 'некалькі секунд', m: t, mm: t, h: t, hh: t, d: 'дзень', dd: t, M: 'месяц', MM: t, y: 'год', yy: t }, meridiemParse: /ночы|раніцы|дня|вечара/, isPM (input) { return /^(дня|вечара)$/.test(input) }, meridiem (e, t, n) { return e < 4 ? 'ночы' : e < 12 ? 'раніцы' : e < 17 ? 'дня' : 'вечара' }, dayOfMonthOrdinalParse: /\d{1,2}-(і|ы|га)/, ordinal (e, t) { switch (t) { case 'M':case 'd':case 'DDD':case 'w':case 'W':return e % 10 != 2 && e % 10 != 3 || e % 100 == 12 || e % 100 == 13 ? e + '-ы' : e + '-і'; case 'D':return e + '-га'; default:return e } }, week: { dow: 1, doy: 7 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; e.defineLocale('bg', { months: 'януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември'.split('_'), monthsShort: 'яну_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек'.split('_'), weekdays: 'неделя_понеделник_вторник_сряда_четвъртък_петък_събота'.split('_'), weekdaysShort: 'нед_пон_вто_сря_чет_пет_съб'.split('_'), weekdaysMin: 'нд_пн_вт_ср_чт_пт_сб'.split('_'), longDateFormat: { LT: 'H:mm', LTS: 'H:mm:ss', L: 'D.MM.YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY H:mm', LLLL: 'dddd, D MMMM YYYY H:mm' }, calendar: { sameDay: '[Днес в] LT', nextDay: '[Утре в] LT', nextWeek: 'dddd [в] LT', lastDay: '[Вчера в] LT', lastWeek () { switch (this.day()) { case 0:case 3:case 6:return '[Миналата] dddd [в] LT'; case 1:case 2:case 4:case 5:return '[Миналия] dddd [в] LT' } }, sameElse: 'L' }, relativeTime: { future: 'след %s', past: 'преди %s', s: 'няколко секунди', ss: '%d секунди', m: 'минута', mm: '%d минути', h: 'час', hh: '%d часа', d: 'ден', dd: '%d дена', M: 'месец', MM: '%d месеца', y: 'година', yy: '%d години' }, dayOfMonthOrdinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/, ordinal (e) { const t = e % 10; const n = e % 100; return e === 0 ? e + '-ев' : n === 0 ? e + '-ен' : n > 10 && n < 20 ? e + '-ти' : t === 1 ? e + '-ви' : t === 2 ? e + '-ри' : t === 7 || t === 8 ? e + '-ми' : e + '-ти' }, week: { dow: 1, doy: 7 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; e.defineLocale('bm', { months: 'Zanwuyekalo_Fewuruyekalo_Marisikalo_Awirilikalo_Mɛkalo_Zuwɛnkalo_Zuluyekalo_Utikalo_Sɛtanburukalo_ɔkutɔburukalo_Nowanburukalo_Desanburukalo'.split('_'), monthsShort: 'Zan_Few_Mar_Awi_Mɛ_Zuw_Zul_Uti_Sɛt_ɔku_Now_Des'.split('_'), weekdays: 'Kari_Ntɛnɛn_Tarata_Araba_Alamisa_Juma_Sibiri'.split('_'), weekdaysShort: 'Kar_Ntɛ_Tar_Ara_Ala_Jum_Sib'.split('_'), weekdaysMin: 'Ka_Nt_Ta_Ar_Al_Ju_Si'.split('_'), longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'DD/MM/YYYY', LL: 'MMMM [tile] D [san] YYYY', LLL: 'MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm', LLLL: 'dddd MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm' }, calendar: { sameDay: '[Bi lɛrɛ] LT', nextDay: '[Sini lɛrɛ] LT', nextWeek: 'dddd [don lɛrɛ] LT', lastDay: '[Kunu lɛrɛ] LT', lastWeek: 'dddd [tɛmɛnen lɛrɛ] LT', sameElse: 'L' }, relativeTime: { future: '%s kɔnɔ', past: 'a bɛ %s bɔ', s: 'sanga dama dama', ss: 'sekondi %d', m: 'miniti kelen', mm: 'miniti %d', h: 'lɛrɛ kelen', hh: 'lɛrɛ %d', d: 'tile kelen', dd: 'tile %d', M: 'kalo kelen', MM: 'kalo %d', y: 'san kelen', yy: 'san %d' }, week: { dow: 1, doy: 4 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; const t = { 1: '১', 2: '২', 3: '৩', 4: '৪', 5: '৫', 6: '৬', 7: '৭', 8: '৮', 9: '৯', 0: '০' }; const n = { '১': '1', '২': '2', '৩': '3', '৪': '4', '৫': '5', '৬': '6', '৭': '7', '৮': '8', '৯': '9', '০': '0' }; e.defineLocale('bn', { months: 'জানুয়ারি_ফেব্রুয়ারি_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর'.split('_'), monthsShort: 'জানু_ফেব্রু_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্ট_অক্টো_নভে_ডিসে'.split('_'), weekdays: 'রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পতিবার_শুক্রবার_শনিবার'.split('_'), weekdaysShort: 'রবি_সোম_মঙ্গল_বুধ_বৃহস্পতি_শুক্র_শনি'.split('_'), weekdaysMin: 'রবি_সোম_মঙ্গল_বুধ_বৃহ_শুক্র_শনি'.split('_'), longDateFormat: { LT: 'A h:mm সময়', LTS: 'A h:mm:ss সময়', L: 'DD/MM/YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY, A h:mm সময়', LLLL: 'dddd, D MMMM YYYY, A h:mm সময়' }, calendar: { sameDay: '[আজ] LT', nextDay: '[আগামীকাল] LT', nextWeek: 'dddd, LT', lastDay: '[গতকাল] LT', lastWeek: '[গত] dddd, LT', sameElse: 'L' }, relativeTime: { future: '%s পরে', past: '%s আগে', s: 'কয়েক সেকেন্ড', ss: '%d সেকেন্ড', m: 'এক মিনিট', mm: '%d মিনিট', h: 'এক ঘন্টা', hh: '%d ঘন্টা', d: 'এক দিন', dd: '%d দিন', M: 'এক মাস', MM: '%d মাস', y: 'এক বছর', yy: '%d বছর' }, preparse (e) { return e.replace(/[১২৩৪৫৬৭৮৯০]/g, function (e) { return n[e] }) }, postformat (e) { return e.replace(/\d/g, function (e) { return t[e] }) }, meridiemParse: /রাত|সকাল|দুপুর|বিকাল|রাত/, meridiemHour (e, t) { return e === 12 && (e = 0), t === 'রাত' && e >= 4 || t === 'দুপুর' && e < 5 || t === 'বিকাল' ? e + 12 : e }, meridiem (e, t, n) { return e < 4 ? 'রাত' : e < 10 ? 'সকাল' : e < 17 ? 'দুপুর' : e < 20 ? 'বিকাল' : 'রাত' }, week: { dow: 0, doy: 6 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; const t = { 1: '༡', 2: '༢', 3: '༣', 4: '༤', 5: '༥', 6: '༦', 7: '༧', 8: '༨', 9: '༩', 0: '༠' }; const n = { '༡': '1', '༢': '2', '༣': '3', '༤': '4', '༥': '5', '༦': '6', '༧': '7', '༨': '8', '༩': '9', '༠': '0' }; e.defineLocale('bo', { months: 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'), monthsShort: 'ཟླ་1_ཟླ་2_ཟླ་3_ཟླ་4_ཟླ་5_ཟླ་6_ཟླ་7_ཟླ་8_ཟླ་9_ཟླ་10_ཟླ་11_ཟླ་12'.split('_'), monthsShortRegex: /^(ཟླ་\d{1,2})/, monthsParseExact: !0, weekdays: 'གཟའ་ཉི་མ་_གཟའ་ཟླ་བ་_གཟའ་མིག་དམར་_གཟའ་ལྷག་པ་_གཟའ་ཕུར་བུ_གཟའ་པ་སངས་_གཟའ་སྤེན་པ་'.split('_'), weekdaysShort: 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'), weekdaysMin: 'ཉི_ཟླ_མིག_ལྷག_ཕུར_སངས_སྤེན'.split('_'), longDateFormat: { LT: 'A h:mm', LTS: 'A h:mm:ss', L: 'DD/MM/YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY, A h:mm', LLLL: 'dddd, D MMMM YYYY, A h:mm' }, calendar: { sameDay: '[དི་རིང] LT', nextDay: '[སང་ཉིན] LT', nextWeek: '[བདུན་ཕྲག་རྗེས་མ], LT', lastDay: '[ཁ་སང] LT', lastWeek: '[བདུན་ཕྲག་མཐའ་མ] dddd, LT', sameElse: 'L' }, relativeTime: { future: '%s ལ་', past: '%s སྔན་ལ', s: 'ལམ་སང', ss: '%d སྐར་ཆ།', m: 'སྐར་མ་གཅིག', mm: '%d སྐར་མ', h: 'ཆུ་ཚོད་གཅིག', hh: '%d ཆུ་ཚོད', d: 'ཉིན་གཅིག', dd: '%d ཉིན་', M: 'ཟླ་བ་གཅིག', MM: '%d ཟླ་བ', y: 'ལོ་གཅིག', yy: '%d ལོ' }, preparse (e) { return e.replace(/[༡༢༣༤༥༦༧༨༩༠]/g, function (e) { return n[e] }) }, postformat (e) { return e.replace(/\d/g, function (e) { return t[e] }) }, meridiemParse: /མཚན་མོ|ཞོགས་ཀས|ཉིན་གུང|དགོང་དག|མཚན་མོ/, meridiemHour (e, t) { return e === 12 && (e = 0), t === 'མཚན་མོ' && e >= 4 || t === 'ཉིན་གུང' && e < 5 || t === 'དགོང་དག' ? e + 12 : e }, meridiem (e, t, n) { return e < 4 ? 'མཚན་མོ' : e < 10 ? 'ཞོགས་ཀས' : e < 17 ? 'ཉིན་གུང' : e < 20 ? 'དགོང་དག' : 'མཚན་མོ' }, week: { dow: 0, doy: 6 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; function t (e, t, n) { return e + ' ' + (function (text, e) { return e === 2 ? (function (text) { const e = { m: 'v', b: 'v', d: 'z' }; return void 0 === e[text.charAt(0)] ? text : e[text.charAt(0)] + text.substring(1) }(text)) : text }({ mm: 'munutenn', MM: 'miz', dd: 'devezh' }[n], e)) } const n = [/^gen/i, /^c[ʼ\']hwe/i, /^meu/i, /^ebr/i, /^mae/i, /^(mez|eve)/i, /^gou/i, /^eos/i, /^gwe/i, /^her/i, /^du/i, /^ker/i]; const r = /^(genver|c[ʼ\']hwevrer|meurzh|ebrel|mae|mezheven|gouere|eost|gwengolo|here|du|kerzu|gen|c[ʼ\']hwe|meu|ebr|mae|eve|gou|eos|gwe|her|du|ker)/i; const o = [/^Su/i, /^Lu/i, /^Me([^r]|$)/i, /^Mer/i, /^Ya/i, /^Gw/i, /^Sa/i]; e.defineLocale('br', { months: 'Genver_Cʼhwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu'.split('_'), monthsShort: 'Gen_Cʼhwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker'.split('_'), weekdays: 'Sul_Lun_Meurzh_Mercʼher_Yaou_Gwener_Sadorn'.split('_'), weekdaysShort: 'Sul_Lun_Meu_Mer_Yao_Gwe_Sad'.split('_'), weekdaysMin: 'Su_Lu_Me_Mer_Ya_Gw_Sa'.split('_'), weekdaysParse: o, fullWeekdaysParse: [/^sul/i, /^lun/i, /^meurzh/i, /^merc[ʼ\']her/i, /^yaou/i, /^gwener/i, /^sadorn/i], shortWeekdaysParse: [/^Sul/i, /^Lun/i, /^Meu/i, /^Mer/i, /^Yao/i, /^Gwe/i, /^Sad/i], minWeekdaysParse: o, monthsRegex: r, monthsShortRegex: r, monthsStrictRegex: /^(genver|c[ʼ\']hwevrer|meurzh|ebrel|mae|mezheven|gouere|eost|gwengolo|here|du|kerzu)/i, monthsShortStrictRegex: /^(gen|c[ʼ\']hwe|meu|ebr|mae|eve|gou|eos|gwe|her|du|ker)/i, monthsParse: n, longMonthsParse: n, shortMonthsParse: n, longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'DD/MM/YYYY', LL: 'D [a viz] MMMM YYYY', LLL: 'D [a viz] MMMM YYYY HH:mm', LLLL: 'dddd, D [a viz] MMMM YYYY HH:mm' }, calendar: { sameDay: '[Hiziv da] LT', nextDay: '[Warcʼhoazh da] LT', nextWeek: 'dddd [da] LT', lastDay: '[Decʼh da] LT', lastWeek: 'dddd [paset da] LT', sameElse: 'L' }, relativeTime: { future: 'a-benn %s', past: '%s ʼzo', s: 'un nebeud segondennoù', ss: '%d eilenn', m: 'ur vunutenn', mm: t, h: 'un eur', hh: '%d eur', d: 'un devezh', dd: t, M: 'ur miz', MM: t, y: 'ur bloaz', yy (e) { switch (function e (t) { return t > 9 ? e(t % 10) : t }(e)) { case 1:case 3:case 4:case 5:case 9:return e + ' bloaz'; default:return e + ' vloaz' } } }, dayOfMonthOrdinalParse: /\d{1,2}(añ|vet)/, ordinal (e) { return e + (e === 1 ? 'añ' : 'vet') }, week: { dow: 1, doy: 4 }, meridiemParse: /a.m.|g.m./, isPM (e) { return e === 'g.m.' }, meridiem (e, t, n) { return e < 12 ? 'a.m.' : 'g.m.' } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; function t (e, t, n) { let r = e + ' '; switch (n) { case 'ss':return r += e === 1 ? 'sekunda' : e === 2 || e === 3 || e === 4 ? 'sekunde' : 'sekundi'; case 'm':return t ? 'jedna minuta' : 'jedne minute'; case 'mm':return r += e === 1 ? 'minuta' : e === 2 || e === 3 || e === 4 ? 'minute' : 'minuta'; case 'h':return t ? 'jedan sat' : 'jednog sata'; case 'hh':return r += e === 1 ? 'sat' : e === 2 || e === 3 || e === 4 ? 'sata' : 'sati'; case 'dd':return r += e === 1 ? 'dan' : 'dana'; case 'MM':return r += e === 1 ? 'mjesec' : e === 2 || e === 3 || e === 4 ? 'mjeseca' : 'mjeseci'; case 'yy':return r += e === 1 ? 'godina' : e === 2 || e === 3 || e === 4 ? 'godine' : 'godina' } }e.defineLocale('bs', { months: 'januar_februar_mart_april_maj_juni_juli_august_septembar_oktobar_novembar_decembar'.split('_'), monthsShort: 'jan._feb._mar._apr._maj._jun._jul._aug._sep._okt._nov._dec.'.split('_'), monthsParseExact: !0, weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'), weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'), weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'), weekdaysParseExact: !0, longDateFormat: { LT: 'H:mm', LTS: 'H:mm:ss', L: 'DD.MM.YYYY', LL: 'D. MMMM YYYY', LLL: 'D. MMMM YYYY H:mm', LLLL: 'dddd, D. MMMM YYYY H:mm' }, calendar: { sameDay: '[danas u] LT', nextDay: '[sutra u] LT', nextWeek () { switch (this.day()) { case 0:return '[u] [nedjelju] [u] LT'; case 3:return '[u] [srijedu] [u] LT'; case 6:return '[u] [subotu] [u] LT'; case 1:case 2:case 4:case 5:return '[u] dddd [u] LT' } }, lastDay: '[jučer u] LT', lastWeek () { switch (this.day()) { case 0:case 3:return '[prošlu] dddd [u] LT'; case 6:return '[prošle] [subote] [u] LT'; case 1:case 2:case 4:case 5:return '[prošli] dddd [u] LT' } }, sameElse: 'L' }, relativeTime: { future: 'za %s', past: 'prije %s', s: 'par sekundi', ss: t, m: t, mm: t, h: t, hh: t, d: 'dan', dd: t, M: 'mjesec', MM: t, y: 'godinu', yy: t }, dayOfMonthOrdinalParse: /\d{1,2}\./, ordinal: '%d.', week: { dow: 1, doy: 7 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; e.defineLocale('ca', { months: { standalone: 'gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre'.split('_'), format: "de gener_de febrer_de març_d'abril_de maig_de juny_de juliol_d'agost_de setembre_d'octubre_de novembre_de desembre".split('_'), isFormat: /D[oD]?(\s)+MMMM/ }, monthsShort: 'gen._febr._març_abr._maig_juny_jul._ag._set._oct._nov._des.'.split('_'), monthsParseExact: !0, weekdays: 'diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte'.split('_'), weekdaysShort: 'dg._dl._dt._dc._dj._dv._ds.'.split('_'), weekdaysMin: 'dg_dl_dt_dc_dj_dv_ds'.split('_'), weekdaysParseExact: !0, longDateFormat: { LT: 'H:mm', LTS: 'H:mm:ss', L: 'DD/MM/YYYY', LL: 'D MMMM [de] YYYY', ll: 'D MMM YYYY', LLL: 'D MMMM [de] YYYY [a les] H:mm', lll: 'D MMM YYYY, H:mm', LLLL: 'dddd D MMMM [de] YYYY [a les] H:mm', llll: 'ddd D MMM YYYY, H:mm' }, calendar: { sameDay () { return '[avui a ' + (this.hours() !== 1 ? 'les' : 'la') + '] LT' }, nextDay () { return '[demà a ' + (this.hours() !== 1 ? 'les' : 'la') + '] LT' }, nextWeek () { return 'dddd [a ' + (this.hours() !== 1 ? 'les' : 'la') + '] LT' }, lastDay () { return '[ahir a ' + (this.hours() !== 1 ? 'les' : 'la') + '] LT' }, lastWeek () { return '[el] dddd [passat a ' + (this.hours() !== 1 ? 'les' : 'la') + '] LT' }, sameElse: 'L' }, relativeTime: { future: "d'aquí %s", past: 'fa %s', s: 'uns segons', ss: '%d segons', m: 'un minut', mm: '%d minuts', h: 'una hora', hh: '%d hores', d: 'un dia', dd: '%d dies', M: 'un mes', MM: '%d mesos', y: 'un any', yy: '%d anys' }, dayOfMonthOrdinalParse: /\d{1,2}(r|n|t|è|a)/, ordinal (e, t) { let output = e === 1 ? 'r' : e === 2 ? 'n' : e === 3 ? 'r' : e === 4 ? 't' : 'è'; return t !== 'w' && t !== 'W' || (output = 'a'), e + output }, week: { dow: 1, doy: 4 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; const t = 'leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec'.split('_'); const n = 'led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro'.split('_'); const r = [/^led/i, /^úno/i, /^bře/i, /^dub/i, /^kvě/i, /^(čvn|červen$|června)/i, /^(čvc|červenec|července)/i, /^srp/i, /^zář/i, /^říj/i, /^lis/i, /^pro/i]; const o = /^(leden|únor|březen|duben|květen|červenec|července|červen|června|srpen|září|říjen|listopad|prosinec|led|úno|bře|dub|kvě|čvn|čvc|srp|zář|říj|lis|pro)/i; function d (e) { return e > 1 && e < 5 && ~~(e / 10) != 1 } function _ (e, t, n, r) { const o = e + ' '; switch (n) { case 's':return t || r ? 'pár sekund' : 'pár sekundami'; case 'ss':return t || r ? o + (d(e) ? 'sekundy' : 'sekund') : o + 'sekundami'; case 'm':return t ? 'minuta' : r ? 'minutu' : 'minutou'; case 'mm':return t || r ? o + (d(e) ? 'minuty' : 'minut') : o + 'minutami'; case 'h':return t ? 'hodina' : r ? 'hodinu' : 'hodinou'; case 'hh':return t || r ? o + (d(e) ? 'hodiny' : 'hodin') : o + 'hodinami'; case 'd':return t || r ? 'den' : 'dnem'; case 'dd':return t || r ? o + (d(e) ? 'dny' : 'dní') : o + 'dny'; case 'M':return t || r ? 'měsíc' : 'měsícem'; case 'MM':return t || r ? o + (d(e) ? 'měsíce' : 'měsíců') : o + 'měsíci'; case 'y':return t || r ? 'rok' : 'rokem'; case 'yy':return t || r ? o + (d(e) ? 'roky' : 'let') : o + 'lety' } }e.defineLocale('cs', { months: t, monthsShort: n, monthsRegex: o, monthsShortRegex: o, monthsStrictRegex: /^(leden|ledna|února|únor|březen|března|duben|dubna|květen|května|červenec|července|červen|června|srpen|srpna|září|říjen|října|listopadu|listopad|prosinec|prosince)/i, monthsShortStrictRegex: /^(led|úno|bře|dub|kvě|čvn|čvc|srp|zář|říj|lis|pro)/i, monthsParse: r, longMonthsParse: r, shortMonthsParse: r, weekdays: 'neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota'.split('_'), weekdaysShort: 'ne_po_út_st_čt_pá_so'.split('_'), weekdaysMin: 'ne_po_út_st_čt_pá_so'.split('_'), longDateFormat: { LT: 'H:mm', LTS: 'H:mm:ss', L: 'DD.MM.YYYY', LL: 'D. MMMM YYYY', LLL: 'D. MMMM YYYY H:mm', LLLL: 'dddd D. MMMM YYYY H:mm', l: 'D. M. YYYY' }, calendar: { sameDay: '[dnes v] LT', nextDay: '[zítra v] LT', nextWeek () { switch (this.day()) { case 0:return '[v neděli v] LT'; case 1:case 2:return '[v] dddd [v] LT'; case 3:return '[ve středu v] LT'; case 4:return '[ve čtvrtek v] LT'; case 5:return '[v pátek v] LT'; case 6:return '[v sobotu v] LT' } }, lastDay: '[včera v] LT', lastWeek () { switch (this.day()) { case 0:return '[minulou neděli v] LT'; case 1:case 2:return '[minulé] dddd [v] LT'; case 3:return '[minulou středu v] LT'; case 4:case 5:return '[minulý] dddd [v] LT'; case 6:return '[minulou sobotu v] LT' } }, sameElse: 'L' }, relativeTime: { future: 'za %s', past: 'před %s', s: _, ss: _, m: _, mm: _, h: _, hh: _, d: _, dd: _, M: _, MM: _, y: _, yy: _ }, dayOfMonthOrdinalParse: /\d{1,2}\./, ordinal: '%d.', week: { dow: 1, doy: 4 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; e.defineLocale('cv', { months: 'кӑрлач_нарӑс_пуш_ака_май_ҫӗртме_утӑ_ҫурла_авӑн_юпа_чӳк_раштав'.split('_'), monthsShort: 'кӑр_нар_пуш_ака_май_ҫӗр_утӑ_ҫур_авн_юпа_чӳк_раш'.split('_'), weekdays: 'вырсарникун_тунтикун_ытларикун_юнкун_кӗҫнерникун_эрнекун_шӑматкун'.split('_'), weekdaysShort: 'выр_тун_ытл_юн_кӗҫ_эрн_шӑм'.split('_'), weekdaysMin: 'вр_тн_ыт_юн_кҫ_эр_шм'.split('_'), longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'DD-MM-YYYY', LL: 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ]', LLL: 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm', LLLL: 'dddd, YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm' }, calendar: { sameDay: '[Паян] LT [сехетре]', nextDay: '[Ыран] LT [сехетре]', lastDay: '[Ӗнер] LT [сехетре]', nextWeek: '[Ҫитес] dddd LT [сехетре]', lastWeek: '[Иртнӗ] dddd LT [сехетре]', sameElse: 'L' }, relativeTime: { future (output) { return output + (/сехет$/i.exec(output) ? 'рен' : /ҫул$/i.exec(output) ? 'тан' : 'ран') }, past: '%s каялла', s: 'пӗр-ик ҫеккунт', ss: '%d ҫеккунт', m: 'пӗр минут', mm: '%d минут', h: 'пӗр сехет', hh: '%d сехет', d: 'пӗр кун', dd: '%d кун', M: 'пӗр уйӑх', MM: '%d уйӑх', y: 'пӗр ҫул', yy: '%d ҫул' }, dayOfMonthOrdinalParse: /\d{1,2}-мӗш/, ordinal: '%d-мӗш', week: { dow: 1, doy: 7 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; e.defineLocale('cy', { months: 'Ionawr_Chwefror_Mawrth_Ebrill_Mai_Mehefin_Gorffennaf_Awst_Medi_Hydref_Tachwedd_Rhagfyr'.split('_'), monthsShort: 'Ion_Chwe_Maw_Ebr_Mai_Meh_Gor_Aws_Med_Hyd_Tach_Rhag'.split('_'), weekdays: 'Dydd Sul_Dydd Llun_Dydd Mawrth_Dydd Mercher_Dydd Iau_Dydd Gwener_Dydd Sadwrn'.split('_'), weekdaysShort: 'Sul_Llun_Maw_Mer_Iau_Gwe_Sad'.split('_'), weekdaysMin: 'Su_Ll_Ma_Me_Ia_Gw_Sa'.split('_'), weekdaysParseExact: !0, longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'DD/MM/YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY HH:mm', LLLL: 'dddd, D MMMM YYYY HH:mm' }, calendar: { sameDay: '[Heddiw am] LT', nextDay: '[Yfory am] LT', nextWeek: 'dddd [am] LT', lastDay: '[Ddoe am] LT', lastWeek: 'dddd [diwethaf am] LT', sameElse: 'L' }, relativeTime: { future: 'mewn %s', past: '%s yn ôl', s: 'ychydig eiliadau', ss: '%d eiliad', m: 'munud', mm: '%d munud', h: 'awr', hh: '%d awr', d: 'diwrnod', dd: '%d diwrnod', M: 'mis', MM: '%d mis', y: 'blwyddyn', yy: '%d flynedd' }, dayOfMonthOrdinalParse: /\d{1,2}(fed|ain|af|il|ydd|ed|eg)/, ordinal (e) { let output = ''; return e > 20 ? output = e === 40 || e === 50 || e === 60 || e === 80 || e === 100 ? 'fed' : 'ain' : e > 0 && (output = ['', 'af', 'il', 'ydd', 'ydd', 'ed', 'ed', 'ed', 'fed', 'fed', 'fed', 'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'fed'][e]), e + output }, week: { dow: 1, doy: 4 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; e.defineLocale('da', { months: 'januar_februar_marts_april_maj_juni_juli_august_september_oktober_november_december'.split('_'), monthsShort: 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'), weekdays: 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'), weekdaysShort: 'søn_man_tir_ons_tor_fre_lør'.split('_'), weekdaysMin: 'sø_ma_ti_on_to_fr_lø'.split('_'), longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'DD.MM.YYYY', LL: 'D. MMMM YYYY', LLL: 'D. MMMM YYYY HH:mm', LLLL: 'dddd [d.] D. MMMM YYYY [kl.] HH:mm' }, calendar: { sameDay: '[i dag kl.] LT', nextDay: '[i morgen kl.] LT', nextWeek: 'på dddd [kl.] LT', lastDay: '[i går kl.] LT', lastWeek: '[i] dddd[s kl.] LT', sameElse: 'L' }, relativeTime: { future: 'om %s', past: '%s siden', s: 'få sekunder', ss: '%d sekunder', m: 'et minut', mm: '%d minutter', h: 'en time', hh: '%d timer', d: 'en dag', dd: '%d dage', M: 'en måned', MM: '%d måneder', y: 'et år', yy: '%d år' }, dayOfMonthOrdinalParse: /\d{1,2}\./, ordinal: '%d.', week: { dow: 1, doy: 4 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; function t (e, t, n, r) { const o = { m: ['eine Minute', 'einer Minute'], h: ['eine Stunde', 'einer Stunde'], d: ['ein Tag', 'einem Tag'], dd: [e + ' Tage', e + ' Tagen'], w: ['eine Woche', 'einer Woche'], M: ['ein Monat', 'einem Monat'], MM: [e + ' Monate', e + ' Monaten'], y: ['ein Jahr', 'einem Jahr'], yy: [e + ' Jahre', e + ' Jahren'] }; return t ? o[n][0] : o[n][1] }e.defineLocale('de', { months: 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'), monthsShort: 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'), monthsParseExact: !0, weekdays: 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'), weekdaysShort: 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'), weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'), weekdaysParseExact: !0, longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'DD.MM.YYYY', LL: 'D. MMMM YYYY', LLL: 'D. MMMM YYYY HH:mm', LLLL: 'dddd, D. MMMM YYYY HH:mm' }, calendar: { sameDay: '[heute um] LT [Uhr]', sameElse: 'L', nextDay: '[morgen um] LT [Uhr]', nextWeek: 'dddd [um] LT [Uhr]', lastDay: '[gestern um] LT [Uhr]', lastWeek: '[letzten] dddd [um] LT [Uhr]' }, relativeTime: { future: 'in %s', past: 'vor %s', s: 'ein paar Sekunden', ss: '%d Sekunden', m: t, mm: '%d Minuten', h: t, hh: '%d Stunden', d: t, dd: t, w: t, ww: '%d Wochen', M: t, MM: t, y: t, yy: t }, dayOfMonthOrdinalParse: /\d{1,2}\./, ordinal: '%d.', week: { dow: 1, doy: 4 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; function t (e, t, n, r) { const o = { m: ['eine Minute', 'einer Minute'], h: ['eine Stunde', 'einer Stunde'], d: ['ein Tag', 'einem Tag'], dd: [e + ' Tage', e + ' Tagen'], w: ['eine Woche', 'einer Woche'], M: ['ein Monat', 'einem Monat'], MM: [e + ' Monate', e + ' Monaten'], y: ['ein Jahr', 'einem Jahr'], yy: [e + ' Jahre', e + ' Jahren'] }; return t ? o[n][0] : o[n][1] }e.defineLocale('de-at', { months: 'Jänner_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'), monthsShort: 'Jän._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'), monthsParseExact: !0, weekdays: 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'), weekdaysShort: 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'), weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'), weekdaysParseExact: !0, longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'DD.MM.YYYY', LL: 'D. MMMM YYYY', LLL: 'D. MMMM YYYY HH:mm', LLLL: 'dddd, D. MMMM YYYY HH:mm' }, calendar: { sameDay: '[heute um] LT [Uhr]', sameElse: 'L', nextDay: '[morgen um] LT [Uhr]', nextWeek: 'dddd [um] LT [Uhr]', lastDay: '[gestern um] LT [Uhr]', lastWeek: '[letzten] dddd [um] LT [Uhr]' }, relativeTime: { future: 'in %s', past: 'vor %s', s: 'ein paar Sekunden', ss: '%d Sekunden', m: t, mm: '%d Minuten', h: t, hh: '%d Stunden', d: t, dd: t, w: t, ww: '%d Wochen', M: t, MM: t, y: t, yy: t }, dayOfMonthOrdinalParse: /\d{1,2}\./, ordinal: '%d.', week: { dow: 1, doy: 4 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; function t (e, t, n, r) { const o = { m: ['eine Minute', 'einer Minute'], h: ['eine Stunde', 'einer Stunde'], d: ['ein Tag', 'einem Tag'], dd: [e + ' Tage', e + ' Tagen'], w: ['eine Woche', 'einer Woche'], M: ['ein Monat', 'einem Monat'], MM: [e + ' Monate', e + ' Monaten'], y: ['ein Jahr', 'einem Jahr'], yy: [e + ' Jahre', e + ' Jahren'] }; return t ? o[n][0] : o[n][1] }e.defineLocale('de-ch', { months: 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'), monthsShort: 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'), monthsParseExact: !0, weekdays: 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'), weekdaysShort: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'), weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'), weekdaysParseExact: !0, longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'DD.MM.YYYY', LL: 'D. MMMM YYYY', LLL: 'D. MMMM YYYY HH:mm', LLLL: 'dddd, D. MMMM YYYY HH:mm' }, calendar: { sameDay: '[heute um] LT [Uhr]', sameElse: 'L', nextDay: '[morgen um] LT [Uhr]', nextWeek: 'dddd [um] LT [Uhr]', lastDay: '[gestern um] LT [Uhr]', lastWeek: '[letzten] dddd [um] LT [Uhr]' }, relativeTime: { future: 'in %s', past: 'vor %s', s: 'ein paar Sekunden', ss: '%d Sekunden', m: t, mm: '%d Minuten', h: t, hh: '%d Stunden', d: t, dd: t, w: t, ww: '%d Wochen', M: t, MM: t, y: t, yy: t }, dayOfMonthOrdinalParse: /\d{1,2}\./, ordinal: '%d.', week: { dow: 1, doy: 4 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; const t = ['ޖެނުއަރީ', 'ފެބްރުއަރީ', 'މާރިޗު', 'އޭޕްރީލު', 'މޭ', 'ޖޫން', 'ޖުލައި', 'އޯގަސްޓު', 'ސެޕްޓެމްބަރު', 'އޮކްޓޯބަރު', 'ނޮވެމްބަރު', 'ޑިސެމްބަރު']; const n = ['އާދިއްތަ', 'ހޯމަ', 'އަންގާރަ', 'ބުދަ', 'ބުރާސްފަތި', 'ހުކުރު', 'ހޮނިހިރު']; e.defineLocale('dv', { months: t, monthsShort: t, weekdays: n, weekdaysShort: n, weekdaysMin: 'އާދި_ހޯމަ_އަން_ބުދަ_ބުރާ_ހުކު_ހޮނި'.split('_'), longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'D/M/YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY HH:mm', LLLL: 'dddd D MMMM YYYY HH:mm' }, meridiemParse: /މކ|މފ/, isPM (input) { return input === 'މފ' }, meridiem (e, t, n) { return e < 12 ? 'މކ' : 'މފ' }, calendar: { sameDay: '[މިއަދު] LT', nextDay: '[މާދަމާ] LT', nextWeek: 'dddd LT', lastDay: '[އިއްޔެ] LT', lastWeek: '[ފާއިތުވި] dddd LT', sameElse: 'L' }, relativeTime: { future: 'ތެރޭގައި %s', past: 'ކުރިން %s', s: 'ސިކުންތުކޮޅެއް', ss: 'd% ސިކުންތު', m: 'މިނިޓެއް', mm: 'މިނިޓު %d', h: 'ގަޑިއިރެއް', hh: 'ގަޑިއިރު %d', d: 'ދުވަހެއް', dd: 'ދުވަސް %d', M: 'މަހެއް', MM: 'މަސް %d', y: 'އަހަރެއް', yy: 'އަހަރު %d' }, preparse (e) { return e.replace(/،/g, ',') }, postformat (e) { return e.replace(/,/g, '،') }, week: { dow: 7, doy: 12 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; e.defineLocale('el', { monthsNominativeEl: 'Ιανουάριος_Φεβρουάριος_Μάρτιος_Απρίλιος_Μάιος_Ιούνιος_Ιούλιος_Αύγουστος_Σεπτέμβριος_Οκτώβριος_Νοέμβριος_Δεκέμβριος'.split('_'), monthsGenitiveEl: 'Ιανουαρίου_Φεβρουαρίου_Μαρτίου_Απριλίου_Μαΐου_Ιουνίου_Ιουλίου_Αυγούστου_Σεπτεμβρίου_Οκτωβρίου_Νοεμβρίου_Δεκεμβρίου'.split('_'), months (e, t) { return e ? typeof t === 'string' && /D/.test(t.substring(0, t.indexOf('MMMM'))) ? this._monthsGenitiveEl[e.month()] : this._monthsNominativeEl[e.month()] : this._monthsNominativeEl }, monthsShort: 'Ιαν_Φεβ_Μαρ_Απρ_Μαϊ_Ιουν_Ιουλ_Αυγ_Σεπ_Οκτ_Νοε_Δεκ'.split('_'), weekdays: 'Κυριακή_Δευτέρα_Τρίτη_Τετάρτη_Πέμπτη_Παρασκευή_Σάββατο'.split('_'), weekdaysShort: 'Κυρ_Δευ_Τρι_Τετ_Πεμ_Παρ_Σαβ'.split('_'), weekdaysMin: 'Κυ_Δε_Τρ_Τε_Πε_Πα_Σα'.split('_'), meridiem (e, t, n) { return e > 11 ? n ? 'μμ' : 'ΜΜ' : n ? 'πμ' : 'ΠΜ' }, isPM (input) { return (input + '').toLowerCase()[0] === 'μ' }, meridiemParse: /[ΠΜ]\.?Μ?\.?/i, longDateFormat: { LT: 'h:mm A', LTS: 'h:mm:ss A', L: 'DD/MM/YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY h:mm A', LLLL: 'dddd, D MMMM YYYY h:mm A' }, calendarEl: { sameDay: '[Σήμερα {}] LT', nextDay: '[Αύριο {}] LT', nextWeek: 'dddd [{}] LT', lastDay: '[Χθες {}] LT', lastWeek () { switch (this.day()) { case 6:return '[το προηγούμενο] dddd [{}] LT'; default:return '[την προηγούμενη] dddd [{}] LT' } }, sameElse: 'L' }, calendar (e, t) { let input; let output = this._calendarEl[e]; const n = t && t.hours(); return input = output, (typeof Function !== 'undefined' && input instanceof Function || Object.prototype.toString.call(input) === '[object Function]') && (output = output.apply(t)), output.replace('{}', n % 12 == 1 ? 'στη' : 'στις') }, relativeTime: { future: 'σε %s', past: '%s πριν', s: 'λίγα δευτερόλεπτα', ss: '%d δευτερόλεπτα', m: 'ένα λεπτό', mm: '%d λεπτά', h: 'μία ώρα', hh: '%d ώρες', d: 'μία μέρα', dd: '%d μέρες', M: 'ένας μήνας', MM: '%d μήνες', y: 'ένας χρόνος', yy: '%d χρόνια' }, dayOfMonthOrdinalParse: /\d{1,2}η/, ordinal: '%dη', week: { dow: 1, doy: 4 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; e.defineLocale('en-au', { months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'), monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'), weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'), weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'), weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'), longDateFormat: { LT: 'h:mm A', LTS: 'h:mm:ss A', L: 'DD/MM/YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY h:mm A', LLLL: 'dddd, D MMMM YYYY h:mm A' }, calendar: { sameDay: '[Today at] LT', nextDay: '[Tomorrow at] LT', nextWeek: 'dddd [at] LT', lastDay: '[Yesterday at] LT', lastWeek: '[Last] dddd [at] LT', sameElse: 'L' }, relativeTime: { future: 'in %s', past: '%s ago', s: 'a few seconds', ss: '%d seconds', m: 'a minute', mm: '%d minutes', h: 'an hour', hh: '%d hours', d: 'a day', dd: '%d days', M: 'a month', MM: '%d months', y: 'a year', yy: '%d years' }, dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/, ordinal (e) { const b = e % 10; return e + (~~(e % 100 / 10) == 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th') }, week: { dow: 0, doy: 4 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; e.defineLocale('en-ca', { months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'), monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'), weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'), weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'), weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'), longDateFormat: { LT: 'h:mm A', LTS: 'h:mm:ss A', L: 'YYYY-MM-DD', LL: 'MMMM D, YYYY', LLL: 'MMMM D, YYYY h:mm A', LLLL: 'dddd, MMMM D, YYYY h:mm A' }, calendar: { sameDay: '[Today at] LT', nextDay: '[Tomorrow at] LT', nextWeek: 'dddd [at] LT', lastDay: '[Yesterday at] LT', lastWeek: '[Last] dddd [at] LT', sameElse: 'L' }, relativeTime: { future: 'in %s', past: '%s ago', s: 'a few seconds', ss: '%d seconds', m: 'a minute', mm: '%d minutes', h: 'an hour', hh: '%d hours', d: 'a day', dd: '%d days', M: 'a month', MM: '%d months', y: 'a year', yy: '%d years' }, dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/, ordinal (e) { const b = e % 10; return e + (~~(e % 100 / 10) == 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th') } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; e.defineLocale('en-gb', { months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'), monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'), weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'), weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'), weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'), longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'DD/MM/YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY HH:mm', LLLL: 'dddd, D MMMM YYYY HH:mm' }, calendar: { sameDay: '[Today at] LT', nextDay: '[Tomorrow at] LT', nextWeek: 'dddd [at] LT', lastDay: '[Yesterday at] LT', lastWeek: '[Last] dddd [at] LT', sameElse: 'L' }, relativeTime: { future: 'in %s', past: '%s ago', s: 'a few seconds', ss: '%d seconds', m: 'a minute', mm: '%d minutes', h: 'an hour', hh: '%d hours', d: 'a day', dd: '%d days', M: 'a month', MM: '%d months', y: 'a year', yy: '%d years' }, dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/, ordinal (e) { const b = e % 10; return e + (~~(e % 100 / 10) == 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th') }, week: { dow: 1, doy: 4 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; e.defineLocale('en-ie', { months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'), monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'), weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'), weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'), weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'), longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'DD/MM/YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY HH:mm', LLLL: 'dddd D MMMM YYYY HH:mm' }, calendar: { sameDay: '[Today at] LT', nextDay: '[Tomorrow at] LT', nextWeek: 'dddd [at] LT', lastDay: '[Yesterday at] LT', lastWeek: '[Last] dddd [at] LT', sameElse: 'L' }, relativeTime: { future: 'in %s', past: '%s ago', s: 'a few seconds', ss: '%d seconds', m: 'a minute', mm: '%d minutes', h: 'an hour', hh: '%d hours', d: 'a day', dd: '%d days', M: 'a month', MM: '%d months', y: 'a year', yy: '%d years' }, dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/, ordinal (e) { const b = e % 10; return e + (~~(e % 100 / 10) == 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th') }, week: { dow: 1, doy: 4 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; e.defineLocale('en-il', { months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'), monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'), weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'), weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'), weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'), longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'DD/MM/YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY HH:mm', LLLL: 'dddd, D MMMM YYYY HH:mm' }, calendar: { sameDay: '[Today at] LT', nextDay: '[Tomorrow at] LT', nextWeek: 'dddd [at] LT', lastDay: '[Yesterday at] LT', lastWeek: '[Last] dddd [at] LT', sameElse: 'L' }, relativeTime: { future: 'in %s', past: '%s ago', s: 'a few seconds', ss: '%d seconds', m: 'a minute', mm: '%d minutes', h: 'an hour', hh: '%d hours', d: 'a day', dd: '%d days', M: 'a month', MM: '%d months', y: 'a year', yy: '%d years' }, dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/, ordinal (e) { const b = e % 10; return e + (~~(e % 100 / 10) == 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th') } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; e.defineLocale('en-in', { months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'), monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'), weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'), weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'), weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'), longDateFormat: { LT: 'h:mm A', LTS: 'h:mm:ss A', L: 'DD/MM/YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY h:mm A', LLLL: 'dddd, D MMMM YYYY h:mm A' }, calendar: { sameDay: '[Today at] LT', nextDay: '[Tomorrow at] LT', nextWeek: 'dddd [at] LT', lastDay: '[Yesterday at] LT', lastWeek: '[Last] dddd [at] LT', sameElse: 'L' }, relativeTime: { future: 'in %s', past: '%s ago', s: 'a few seconds', ss: '%d seconds', m: 'a minute', mm: '%d minutes', h: 'an hour', hh: '%d hours', d: 'a day', dd: '%d days', M: 'a month', MM: '%d months', y: 'a year', yy: '%d years' }, dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/, ordinal (e) { const b = e % 10; return e + (~~(e % 100 / 10) == 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th') }, week: { dow: 0, doy: 6 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; e.defineLocale('en-nz', { months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'), monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'), weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'), weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'), weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'), longDateFormat: { LT: 'h:mm A', LTS: 'h:mm:ss A', L: 'DD/MM/YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY h:mm A', LLLL: 'dddd, D MMMM YYYY h:mm A' }, calendar: { sameDay: '[Today at] LT', nextDay: '[Tomorrow at] LT', nextWeek: 'dddd [at] LT', lastDay: '[Yesterday at] LT', lastWeek: '[Last] dddd [at] LT', sameElse: 'L' }, relativeTime: { future: 'in %s', past: '%s ago', s: 'a few seconds', ss: '%d seconds', m: 'a minute', mm: '%d minutes', h: 'an hour', hh: '%d hours', d: 'a day', dd: '%d days', M: 'a month', MM: '%d months', y: 'a year', yy: '%d years' }, dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/, ordinal (e) { const b = e % 10; return e + (~~(e % 100 / 10) == 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th') }, week: { dow: 1, doy: 4 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; e.defineLocale('en-sg', { months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'), monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'), weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'), weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'), weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'), longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'DD/MM/YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY HH:mm', LLLL: 'dddd, D MMMM YYYY HH:mm' }, calendar: { sameDay: '[Today at] LT', nextDay: '[Tomorrow at] LT', nextWeek: 'dddd [at] LT', lastDay: '[Yesterday at] LT', lastWeek: '[Last] dddd [at] LT', sameElse: 'L' }, relativeTime: { future: 'in %s', past: '%s ago', s: 'a few seconds', ss: '%d seconds', m: 'a minute', mm: '%d minutes', h: 'an hour', hh: '%d hours', d: 'a day', dd: '%d days', M: 'a month', MM: '%d months', y: 'a year', yy: '%d years' }, dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/, ordinal (e) { const b = e % 10; return e + (~~(e % 100 / 10) == 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th') }, week: { dow: 1, doy: 4 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; e.defineLocale('eo', { months: 'januaro_februaro_marto_aprilo_majo_junio_julio_aŭgusto_septembro_oktobro_novembro_decembro'.split('_'), monthsShort: 'jan_feb_mart_apr_maj_jun_jul_aŭg_sept_okt_nov_dec'.split('_'), weekdays: 'dimanĉo_lundo_mardo_merkredo_ĵaŭdo_vendredo_sabato'.split('_'), weekdaysShort: 'dim_lun_mard_merk_ĵaŭ_ven_sab'.split('_'), weekdaysMin: 'di_lu_ma_me_ĵa_ve_sa'.split('_'), longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'YYYY-MM-DD', LL: '[la] D[-an de] MMMM, YYYY', LLL: '[la] D[-an de] MMMM, YYYY HH:mm', LLLL: 'dddd[n], [la] D[-an de] MMMM, YYYY HH:mm', llll: 'ddd, [la] D[-an de] MMM, YYYY HH:mm' }, meridiemParse: /[ap]\.t\.m/i, isPM (input) { return input.charAt(0).toLowerCase() === 'p' }, meridiem (e, t, n) { return e > 11 ? n ? 'p.t.m.' : 'P.T.M.' : n ? 'a.t.m.' : 'A.T.M.' }, calendar: { sameDay: '[Hodiaŭ je] LT', nextDay: '[Morgaŭ je] LT', nextWeek: 'dddd[n je] LT', lastDay: '[Hieraŭ je] LT', lastWeek: '[pasintan] dddd[n je] LT', sameElse: 'L' }, relativeTime: { future: 'post %s', past: 'antaŭ %s', s: 'kelkaj sekundoj', ss: '%d sekundoj', m: 'unu minuto', mm: '%d minutoj', h: 'unu horo', hh: '%d horoj', d: 'unu tago', dd: '%d tagoj', M: 'unu monato', MM: '%d monatoj', y: 'unu jaro', yy: '%d jaroj' }, dayOfMonthOrdinalParse: /\d{1,2}a/, ordinal: '%da', week: { dow: 1, doy: 7 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; const t = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'); const n = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_'); const r = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i]; const o = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i; e.defineLocale('es', { months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'), monthsShort (e, r) { return e ? /-MMM-/.test(r) ? n[e.month()] : t[e.month()] : t }, monthsRegex: o, monthsShortRegex: o, monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i, monthsShortStrictRegex: /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i, monthsParse: r, longMonthsParse: r, shortMonthsParse: r, weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'), weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'), weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'), weekdaysParseExact: !0, longDateFormat: { LT: 'H:mm', LTS: 'H:mm:ss', L: 'DD/MM/YYYY', LL: 'D [de] MMMM [de] YYYY', LLL: 'D [de] MMMM [de] YYYY H:mm', LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm' }, calendar: { sameDay () { return '[hoy a la' + (this.hours() !== 1 ? 's' : '') + '] LT' }, nextDay () { return '[mañana a la' + (this.hours() !== 1 ? 's' : '') + '] LT' }, nextWeek () { return 'dddd [a la' + (this.hours() !== 1 ? 's' : '') + '] LT' }, lastDay () { return '[ayer a la' + (this.hours() !== 1 ? 's' : '') + '] LT' }, lastWeek () { return '[el] dddd [pasado a la' + (this.hours() !== 1 ? 's' : '') + '] LT' }, sameElse: 'L' }, relativeTime: { future: 'en %s', past: 'hace %s', s: 'unos segundos', ss: '%d segundos', m: 'un minuto', mm: '%d minutos', h: 'una hora', hh: '%d horas', d: 'un día', dd: '%d días', M: 'un mes', MM: '%d meses', y: 'un año', yy: '%d años' }, dayOfMonthOrdinalParse: /\d{1,2}º/, ordinal: '%dº', week: { dow: 1, doy: 4 }, invalidDate: 'Fecha invalida' }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; const t = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'); const n = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_'); const r = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i]; const o = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i; e.defineLocale('es-do', { months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'), monthsShort (e, r) { return e ? /-MMM-/.test(r) ? n[e.month()] : t[e.month()] : t }, monthsRegex: o, monthsShortRegex: o, monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i, monthsShortStrictRegex: /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i, monthsParse: r, longMonthsParse: r, shortMonthsParse: r, weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'), weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'), weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'), weekdaysParseExact: !0, longDateFormat: { LT: 'h:mm A', LTS: 'h:mm:ss A', L: 'DD/MM/YYYY', LL: 'D [de] MMMM [de] YYYY', LLL: 'D [de] MMMM [de] YYYY h:mm A', LLLL: 'dddd, D [de] MMMM [de] YYYY h:mm A' }, calendar: { sameDay () { return '[hoy a la' + (this.hours() !== 1 ? 's' : '') + '] LT' }, nextDay () { return '[mañana a la' + (this.hours() !== 1 ? 's' : '') + '] LT' }, nextWeek () { return 'dddd [a la' + (this.hours() !== 1 ? 's' : '') + '] LT' }, lastDay () { return '[ayer a la' + (this.hours() !== 1 ? 's' : '') + '] LT' }, lastWeek () { return '[el] dddd [pasado a la' + (this.hours() !== 1 ? 's' : '') + '] LT' }, sameElse: 'L' }, relativeTime: { future: 'en %s', past: 'hace %s', s: 'unos segundos', ss: '%d segundos', m: 'un minuto', mm: '%d minutos', h: 'una hora', hh: '%d horas', d: 'un día', dd: '%d días', M: 'un mes', MM: '%d meses', y: 'un año', yy: '%d años' }, dayOfMonthOrdinalParse: /\d{1,2}º/, ordinal: '%dº', week: { dow: 1, doy: 4 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; const t = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'); const n = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_'); const r = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i]; const o = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i; e.defineLocale('es-us', { months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'), monthsShort (e, r) { return e ? /-MMM-/.test(r) ? n[e.month()] : t[e.month()] : t }, monthsRegex: o, monthsShortRegex: o, monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i, monthsShortStrictRegex: /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i, monthsParse: r, longMonthsParse: r, shortMonthsParse: r, weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'), weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'), weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'), weekdaysParseExact: !0, longDateFormat: { LT: 'h:mm A', LTS: 'h:mm:ss A', L: 'MM/DD/YYYY', LL: 'D [de] MMMM [de] YYYY', LLL: 'D [de] MMMM [de] YYYY h:mm A', LLLL: 'dddd, D [de] MMMM [de] YYYY h:mm A' }, calendar: { sameDay () { return '[hoy a la' + (this.hours() !== 1 ? 's' : '') + '] LT' }, nextDay () { return '[mañana a la' + (this.hours() !== 1 ? 's' : '') + '] LT' }, nextWeek () { return 'dddd [a la' + (this.hours() !== 1 ? 's' : '') + '] LT' }, lastDay () { return '[ayer a la' + (this.hours() !== 1 ? 's' : '') + '] LT' }, lastWeek () { return '[el] dddd [pasado a la' + (this.hours() !== 1 ? 's' : '') + '] LT' }, sameElse: 'L' }, relativeTime: { future: 'en %s', past: 'hace %s', s: 'unos segundos', ss: '%d segundos', m: 'un minuto', mm: '%d minutos', h: 'una hora', hh: '%d horas', d: 'un día', dd: '%d días', M: 'un mes', MM: '%d meses', y: 'un año', yy: '%d años' }, dayOfMonthOrdinalParse: /\d{1,2}º/, ordinal: '%dº', week: { dow: 0, doy: 6 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; function t (e, t, n, r) { const o = { s: ['mõne sekundi', 'mõni sekund', 'paar sekundit'], ss: [e + 'sekundi', e + 'sekundit'], m: ['ühe minuti', 'üks minut'], mm: [e + ' minuti', e + ' minutit'], h: ['ühe tunni', 'tund aega', 'üks tund'], hh: [e + ' tunni', e + ' tundi'], d: ['ühe päeva', 'üks päev'], M: ['kuu aja', 'kuu aega', 'üks kuu'], MM: [e + ' kuu', e + ' kuud'], y: ['ühe aasta', 'aasta', 'üks aasta'], yy: [e + ' aasta', e + ' aastat'] }; return t ? o[n][2] ? o[n][2] : o[n][1] : r ? o[n][0] : o[n][1] }e.defineLocale('et', { months: 'jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember'.split('_'), monthsShort: 'jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets'.split('_'), weekdays: 'pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev'.split('_'), weekdaysShort: 'P_E_T_K_N_R_L'.split('_'), weekdaysMin: 'P_E_T_K_N_R_L'.split('_'), longDateFormat: { LT: 'H:mm', LTS: 'H:mm:ss', L: 'DD.MM.YYYY', LL: 'D. MMMM YYYY', LLL: 'D. MMMM YYYY H:mm', LLLL: 'dddd, D. MMMM YYYY H:mm' }, calendar: { sameDay: '[Täna,] LT', nextDay: '[Homme,] LT', nextWeek: '[Järgmine] dddd LT', lastDay: '[Eile,] LT', lastWeek: '[Eelmine] dddd LT', sameElse: 'L' }, relativeTime: { future: '%s pärast', past: '%s tagasi', s: t, ss: t, m: t, mm: t, h: t, hh: t, d: t, dd: '%d päeva', M: t, MM: t, y: t, yy: t }, dayOfMonthOrdinalParse: /\d{1,2}\./, ordinal: '%d.', week: { dow: 1, doy: 4 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; e.defineLocale('eu', { months: 'urtarrila_otsaila_martxoa_apirila_maiatza_ekaina_uztaila_abuztua_iraila_urria_azaroa_abendua'.split('_'), monthsShort: 'urt._ots._mar._api._mai._eka._uzt._abu._ira._urr._aza._abe.'.split('_'), monthsParseExact: !0, weekdays: 'igandea_astelehena_asteartea_asteazkena_osteguna_ostirala_larunbata'.split('_'), weekdaysShort: 'ig._al._ar._az._og._ol._lr.'.split('_'), weekdaysMin: 'ig_al_ar_az_og_ol_lr'.split('_'), weekdaysParseExact: !0, longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'YYYY-MM-DD', LL: 'YYYY[ko] MMMM[ren] D[a]', LLL: 'YYYY[ko] MMMM[ren] D[a] HH:mm', LLLL: 'dddd, YYYY[ko] MMMM[ren] D[a] HH:mm', l: 'YYYY-M-D', ll: 'YYYY[ko] MMM D[a]', lll: 'YYYY[ko] MMM D[a] HH:mm', llll: 'ddd, YYYY[ko] MMM D[a] HH:mm' }, calendar: { sameDay: '[gaur] LT[etan]', nextDay: '[bihar] LT[etan]', nextWeek: 'dddd LT[etan]', lastDay: '[atzo] LT[etan]', lastWeek: '[aurreko] dddd LT[etan]', sameElse: 'L' }, relativeTime: { future: '%s barru', past: 'duela %s', s: 'segundo batzuk', ss: '%d segundo', m: 'minutu bat', mm: '%d minutu', h: 'ordu bat', hh: '%d ordu', d: 'egun bat', dd: '%d egun', M: 'hilabete bat', MM: '%d hilabete', y: 'urte bat', yy: '%d urte' }, dayOfMonthOrdinalParse: /\d{1,2}\./, ordinal: '%d.', week: { dow: 1, doy: 7 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; const t = { 1: '۱', 2: '۲', 3: '۳', 4: '۴', 5: '۵', 6: '۶', 7: '۷', 8: '۸', 9: '۹', 0: '۰' }; const n = { '۱': '1', '۲': '2', '۳': '3', '۴': '4', '۵': '5', '۶': '6', '۷': '7', '۸': '8', '۹': '9', '۰': '0' }; e.defineLocale('fa', { months: 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'), monthsShort: 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'), weekdays: 'یک‌شنبه_دوشنبه_سه‌شنبه_چهارشنبه_پنج‌شنبه_جمعه_شنبه'.split('_'), weekdaysShort: 'یک‌شنبه_دوشنبه_سه‌شنبه_چهارشنبه_پنج‌شنبه_جمعه_شنبه'.split('_'), weekdaysMin: 'ی_د_س_چ_پ_ج_ش'.split('_'), weekdaysParseExact: !0, longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'DD/MM/YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY HH:mm', LLLL: 'dddd, D MMMM YYYY HH:mm' }, meridiemParse: /قبل از ظهر|بعد از ظهر/, isPM (input) { return /بعد از ظهر/.test(input) }, meridiem (e, t, n) { return e < 12 ? 'قبل از ظهر' : 'بعد از ظهر' }, calendar: { sameDay: '[امروز ساعت] LT', nextDay: '[فردا ساعت] LT', nextWeek: 'dddd [ساعت] LT', lastDay: '[دیروز ساعت] LT', lastWeek: 'dddd [پیش] [ساعت] LT', sameElse: 'L' }, relativeTime: { future: 'در %s', past: '%s پیش', s: 'چند ثانیه', ss: '%d ثانیه', m: 'یک دقیقه', mm: '%d دقیقه', h: 'یک ساعت', hh: '%d ساعت', d: 'یک روز', dd: '%d روز', M: 'یک ماه', MM: '%d ماه', y: 'یک سال', yy: '%d سال' }, preparse (e) { return e.replace(/[۰-۹]/g, function (e) { return n[e] }).replace(/،/g, ',') }, postformat (e) { return e.replace(/\d/g, function (e) { return t[e] }).replace(/,/g, '،') }, dayOfMonthOrdinalParse: /\d{1,2}م/, ordinal: '%dم', week: { dow: 6, doy: 12 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; const t = 'nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän'.split(' '); const n = ['nolla', 'yhden', 'kahden', 'kolmen', 'neljän', 'viiden', 'kuuden', t[7], t[8], t[9]]; function r (e, r, o, d) { let _ = ''; switch (o) { case 's':return d ? 'muutaman sekunnin' : 'muutama sekunti'; case 'ss':_ = d ? 'sekunnin' : 'sekuntia'; break; case 'm':return d ? 'minuutin' : 'minuutti'; case 'mm':_ = d ? 'minuutin' : 'minuuttia'; break; case 'h':return d ? 'tunnin' : 'tunti'; case 'hh':_ = d ? 'tunnin' : 'tuntia'; break; case 'd':return d ? 'päivän' : 'päivä'; case 'dd':_ = d ? 'päivän' : 'päivää'; break; case 'M':return d ? 'kuukauden' : 'kuukausi'; case 'MM':_ = d ? 'kuukauden' : 'kuukautta'; break; case 'y':return d ? 'vuoden' : 'vuosi'; case 'yy':_ = d ? 'vuoden' : 'vuotta' } return _ = (function (e, r) { return e < 10 ? r ? n[e] : t[e] : e }(e, d)) + ' ' + _ }e.defineLocale('fi', { months: 'tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu'.split('_'), monthsShort: 'tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu'.split('_'), weekdays: 'sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai'.split('_'), weekdaysShort: 'su_ma_ti_ke_to_pe_la'.split('_'), weekdaysMin: 'su_ma_ti_ke_to_pe_la'.split('_'), longDateFormat: { LT: 'HH.mm', LTS: 'HH.mm.ss', L: 'DD.MM.YYYY', LL: 'Do MMMM[ta] YYYY', LLL: 'Do MMMM[ta] YYYY, [klo] HH.mm', LLLL: 'dddd, Do MMMM[ta] YYYY, [klo] HH.mm', l: 'D.M.YYYY', ll: 'Do MMM YYYY', lll: 'Do MMM YYYY, [klo] HH.mm', llll: 'ddd, Do MMM YYYY, [klo] HH.mm' }, calendar: { sameDay: '[tänään] [klo] LT', nextDay: '[huomenna] [klo] LT', nextWeek: 'dddd [klo] LT', lastDay: '[eilen] [klo] LT', lastWeek: '[viime] dddd[na] [klo] LT', sameElse: 'L' }, relativeTime: { future: '%s päästä', past: '%s sitten', s: r, ss: r, m: r, mm: r, h: r, hh: r, d: r, dd: r, M: r, MM: r, y: r, yy: r }, dayOfMonthOrdinalParse: /\d{1,2}\./, ordinal: '%d.', week: { dow: 1, doy: 4 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; e.defineLocale('fil', { months: 'Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre'.split('_'), monthsShort: 'Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis'.split('_'), weekdays: 'Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado'.split('_'), weekdaysShort: 'Lin_Lun_Mar_Miy_Huw_Biy_Sab'.split('_'), weekdaysMin: 'Li_Lu_Ma_Mi_Hu_Bi_Sab'.split('_'), longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'MM/D/YYYY', LL: 'MMMM D, YYYY', LLL: 'MMMM D, YYYY HH:mm', LLLL: 'dddd, MMMM DD, YYYY HH:mm' }, calendar: { sameDay: 'LT [ngayong araw]', nextDay: '[Bukas ng] LT', nextWeek: 'LT [sa susunod na] dddd', lastDay: 'LT [kahapon]', lastWeek: 'LT [noong nakaraang] dddd', sameElse: 'L' }, relativeTime: { future: 'sa loob ng %s', past: '%s ang nakalipas', s: 'ilang segundo', ss: '%d segundo', m: 'isang minuto', mm: '%d minuto', h: 'isang oras', hh: '%d oras', d: 'isang araw', dd: '%d araw', M: 'isang buwan', MM: '%d buwan', y: 'isang taon', yy: '%d taon' }, dayOfMonthOrdinalParse: /\d{1,2}/, ordinal (e) { return e }, week: { dow: 1, doy: 4 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; e.defineLocale('fo', { months: 'januar_februar_mars_apríl_mai_juni_juli_august_september_oktober_november_desember'.split('_'), monthsShort: 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'), weekdays: 'sunnudagur_mánadagur_týsdagur_mikudagur_hósdagur_fríggjadagur_leygardagur'.split('_'), weekdaysShort: 'sun_mán_týs_mik_hós_frí_ley'.split('_'), weekdaysMin: 'su_má_tý_mi_hó_fr_le'.split('_'), longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'DD/MM/YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY HH:mm', LLLL: 'dddd D. MMMM, YYYY HH:mm' }, calendar: { sameDay: '[Í dag kl.] LT', nextDay: '[Í morgin kl.] LT', nextWeek: 'dddd [kl.] LT', lastDay: '[Í gjár kl.] LT', lastWeek: '[síðstu] dddd [kl] LT', sameElse: 'L' }, relativeTime: { future: 'um %s', past: '%s síðani', s: 'fá sekund', ss: '%d sekundir', m: 'ein minuttur', mm: '%d minuttir', h: 'ein tími', hh: '%d tímar', d: 'ein dagur', dd: '%d dagar', M: 'ein mánaður', MM: '%d mánaðir', y: 'eitt ár', yy: '%d ár' }, dayOfMonthOrdinalParse: /\d{1,2}\./, ordinal: '%d.', week: { dow: 1, doy: 4 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; const t = /(janv\.?|févr\.?|mars|avr\.?|mai|juin|juil\.?|août|sept\.?|oct\.?|nov\.?|déc\.?|janvier|février|mars|avril|mai|juin|juillet|août|septembre|octobre|novembre|décembre)/i; const n = [/^janv/i, /^févr/i, /^mars/i, /^avr/i, /^mai/i, /^juin/i, /^juil/i, /^août/i, /^sept/i, /^oct/i, /^nov/i, /^déc/i]; e.defineLocale('fr', { months: 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'), monthsShort: 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'), monthsRegex: t, monthsShortRegex: t, monthsStrictRegex: /^(janvier|février|mars|avril|mai|juin|juillet|août|septembre|octobre|novembre|décembre)/i, monthsShortStrictRegex: /(janv\.?|févr\.?|mars|avr\.?|mai|juin|juil\.?|août|sept\.?|oct\.?|nov\.?|déc\.?)/i, monthsParse: n, longMonthsParse: n, shortMonthsParse: n, weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'), weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'), weekdaysMin: 'di_lu_ma_me_je_ve_sa'.split('_'), weekdaysParseExact: !0, longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'DD/MM/YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY HH:mm', LLLL: 'dddd D MMMM YYYY HH:mm' }, calendar: { sameDay: '[Aujourd’hui à] LT', nextDay: '[Demain à] LT', nextWeek: 'dddd [à] LT', lastDay: '[Hier à] LT', lastWeek: 'dddd [dernier à] LT', sameElse: 'L' }, relativeTime: { future: 'dans %s', past: 'il y a %s', s: 'quelques secondes', ss: '%d secondes', m: 'une minute', mm: '%d minutes', h: 'une heure', hh: '%d heures', d: 'un jour', dd: '%d jours', M: 'un mois', MM: '%d mois', y: 'un an', yy: '%d ans' }, dayOfMonthOrdinalParse: /\d{1,2}(er|)/, ordinal (e, t) { switch (t) { case 'D':return e + (e === 1 ? 'er' : ''); default:case 'M':case 'Q':case 'DDD':case 'd':return e + (e === 1 ? 'er' : 'e'); case 'w':case 'W':return e + (e === 1 ? 're' : 'e') } }, week: { dow: 1, doy: 4 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; e.defineLocale('fr-ca', { months: 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'), monthsShort: 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'), monthsParseExact: !0, weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'), weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'), weekdaysMin: 'di_lu_ma_me_je_ve_sa'.split('_'), weekdaysParseExact: !0, longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'YYYY-MM-DD', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY HH:mm', LLLL: 'dddd D MMMM YYYY HH:mm' }, calendar: { sameDay: '[Aujourd’hui à] LT', nextDay: '[Demain à] LT', nextWeek: 'dddd [à] LT', lastDay: '[Hier à] LT', lastWeek: 'dddd [dernier à] LT', sameElse: 'L' }, relativeTime: { future: 'dans %s', past: 'il y a %s', s: 'quelques secondes', ss: '%d secondes', m: 'une minute', mm: '%d minutes', h: 'une heure', hh: '%d heures', d: 'un jour', dd: '%d jours', M: 'un mois', MM: '%d mois', y: 'un an', yy: '%d ans' }, dayOfMonthOrdinalParse: /\d{1,2}(er|e)/, ordinal (e, t) { switch (t) { default:case 'M':case 'Q':case 'D':case 'DDD':case 'd':return e + (e === 1 ? 'er' : 'e'); case 'w':case 'W':return e + (e === 1 ? 're' : 'e') } } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; e.defineLocale('fr-ch', { months: 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'), monthsShort: 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'), monthsParseExact: !0, weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'), weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'), weekdaysMin: 'di_lu_ma_me_je_ve_sa'.split('_'), weekdaysParseExact: !0, longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'DD.MM.YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY HH:mm', LLLL: 'dddd D MMMM YYYY HH:mm' }, calendar: { sameDay: '[Aujourd’hui à] LT', nextDay: '[Demain à] LT', nextWeek: 'dddd [à] LT', lastDay: '[Hier à] LT', lastWeek: 'dddd [dernier à] LT', sameElse: 'L' }, relativeTime: { future: 'dans %s', past: 'il y a %s', s: 'quelques secondes', ss: '%d secondes', m: 'une minute', mm: '%d minutes', h: 'une heure', hh: '%d heures', d: 'un jour', dd: '%d jours', M: 'un mois', MM: '%d mois', y: 'un an', yy: '%d ans' }, dayOfMonthOrdinalParse: /\d{1,2}(er|e)/, ordinal (e, t) { switch (t) { default:case 'M':case 'Q':case 'D':case 'DDD':case 'd':return e + (e === 1 ? 'er' : 'e'); case 'w':case 'W':return e + (e === 1 ? 're' : 'e') } }, week: { dow: 1, doy: 4 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; const t = 'jan._feb._mrt._apr._mai_jun._jul._aug._sep._okt._nov._des.'.split('_'); const n = 'jan_feb_mrt_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'); e.defineLocale('fy', { months: 'jannewaris_febrewaris_maart_april_maaie_juny_july_augustus_septimber_oktober_novimber_desimber'.split('_'), monthsShort (e, r) { return e ? /-MMM-/.test(r) ? n[e.month()] : t[e.month()] : t }, monthsParseExact: !0, weekdays: 'snein_moandei_tiisdei_woansdei_tongersdei_freed_sneon'.split('_'), weekdaysShort: 'si._mo._ti._wo._to._fr._so.'.split('_'), weekdaysMin: 'Si_Mo_Ti_Wo_To_Fr_So'.split('_'), weekdaysParseExact: !0, longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'DD-MM-YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY HH:mm', LLLL: 'dddd D MMMM YYYY HH:mm' }, calendar: { sameDay: '[hjoed om] LT', nextDay: '[moarn om] LT', nextWeek: 'dddd [om] LT', lastDay: '[juster om] LT', lastWeek: '[ôfrûne] dddd [om] LT', sameElse: 'L' }, relativeTime: { future: 'oer %s', past: '%s lyn', s: 'in pear sekonden', ss: '%d sekonden', m: 'ien minút', mm: '%d minuten', h: 'ien oere', hh: '%d oeren', d: 'ien dei', dd: '%d dagen', M: 'ien moanne', MM: '%d moannen', y: 'ien jier', yy: '%d jierren' }, dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/, ordinal (e) { return e + (e === 1 || e === 8 || e >= 20 ? 'ste' : 'de') }, week: { dow: 1, doy: 4 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; e.defineLocale('ga', { months: ['Eanáir', 'Feabhra', 'Márta', 'Aibreán', 'Bealtaine', 'Meitheamh', 'Iúil', 'Lúnasa', 'Meán Fómhair', 'Deireadh Fómhair', 'Samhain', 'Nollaig'], monthsShort: ['Ean', 'Feabh', 'Márt', 'Aib', 'Beal', 'Meith', 'Iúil', 'Lún', 'M.F.', 'D.F.', 'Samh', 'Noll'], monthsParseExact: !0, weekdays: ['Dé Domhnaigh', 'Dé Luain', 'Dé Máirt', 'Dé Céadaoin', 'Déardaoin', 'Dé hAoine', 'Dé Sathairn'], weekdaysShort: ['Domh', 'Luan', 'Máirt', 'Céad', 'Déar', 'Aoine', 'Sath'], weekdaysMin: ['Do', 'Lu', 'Má', 'Cé', 'Dé', 'A', 'Sa'], longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'DD/MM/YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY HH:mm', LLLL: 'dddd, D MMMM YYYY HH:mm' }, calendar: { sameDay: '[Inniu ag] LT', nextDay: '[Amárach ag] LT', nextWeek: 'dddd [ag] LT', lastDay: '[Inné ag] LT', lastWeek: 'dddd [seo caite] [ag] LT', sameElse: 'L' }, relativeTime: { future: 'i %s', past: '%s ó shin', s: 'cúpla soicind', ss: '%d soicind', m: 'nóiméad', mm: '%d nóiméad', h: 'uair an chloig', hh: '%d uair an chloig', d: 'lá', dd: '%d lá', M: 'mí', MM: '%d míonna', y: 'bliain', yy: '%d bliain' }, dayOfMonthOrdinalParse: /\d{1,2}(d|na|mh)/, ordinal (e) { return e + (e === 1 ? 'd' : e % 10 == 2 ? 'na' : 'mh') }, week: { dow: 1, doy: 4 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; e.defineLocale('gd', { months: ['Am Faoilleach', 'An Gearran', 'Am Màrt', 'An Giblean', 'An Cèitean', 'An t-Ògmhios', 'An t-Iuchar', 'An Lùnastal', 'An t-Sultain', 'An Dàmhair', 'An t-Samhain', 'An Dùbhlachd'], monthsShort: ['Faoi', 'Gear', 'Màrt', 'Gibl', 'Cèit', 'Ògmh', 'Iuch', 'Lùn', 'Sult', 'Dàmh', 'Samh', 'Dùbh'], monthsParseExact: !0, weekdays: ['Didòmhnaich', 'Diluain', 'Dimàirt', 'Diciadain', 'Diardaoin', 'Dihaoine', 'Disathairne'], weekdaysShort: ['Did', 'Dil', 'Dim', 'Dic', 'Dia', 'Dih', 'Dis'], weekdaysMin: ['Dò', 'Lu', 'Mà', 'Ci', 'Ar', 'Ha', 'Sa'], longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'DD/MM/YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY HH:mm', LLLL: 'dddd, D MMMM YYYY HH:mm' }, calendar: { sameDay: '[An-diugh aig] LT', nextDay: '[A-màireach aig] LT', nextWeek: 'dddd [aig] LT', lastDay: '[An-dè aig] LT', lastWeek: 'dddd [seo chaidh] [aig] LT', sameElse: 'L' }, relativeTime: { future: 'ann an %s', past: 'bho chionn %s', s: 'beagan diogan', ss: '%d diogan', m: 'mionaid', mm: '%d mionaidean', h: 'uair', hh: '%d uairean', d: 'latha', dd: '%d latha', M: 'mìos', MM: '%d mìosan', y: 'bliadhna', yy: '%d bliadhna' }, dayOfMonthOrdinalParse: /\d{1,2}(d|na|mh)/, ordinal (e) { return e + (e === 1 ? 'd' : e % 10 == 2 ? 'na' : 'mh') }, week: { dow: 1, doy: 4 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; e.defineLocale('gl', { months: 'xaneiro_febreiro_marzo_abril_maio_xuño_xullo_agosto_setembro_outubro_novembro_decembro'.split('_'), monthsShort: 'xan._feb._mar._abr._mai._xuñ._xul._ago._set._out._nov._dec.'.split('_'), monthsParseExact: !0, weekdays: 'domingo_luns_martes_mércores_xoves_venres_sábado'.split('_'), weekdaysShort: 'dom._lun._mar._mér._xov._ven._sáb.'.split('_'), weekdaysMin: 'do_lu_ma_mé_xo_ve_sá'.split('_'), weekdaysParseExact: !0, longDateFormat: { LT: 'H:mm', LTS: 'H:mm:ss', L: 'DD/MM/YYYY', LL: 'D [de] MMMM [de] YYYY', LLL: 'D [de] MMMM [de] YYYY H:mm', LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm' }, calendar: { sameDay () { return '[hoxe ' + (this.hours() !== 1 ? 'ás' : 'á') + '] LT' }, nextDay () { return '[mañá ' + (this.hours() !== 1 ? 'ás' : 'á') + '] LT' }, nextWeek () { return 'dddd [' + (this.hours() !== 1 ? 'ás' : 'a') + '] LT' }, lastDay () { return '[onte ' + (this.hours() !== 1 ? 'á' : 'a') + '] LT' }, lastWeek () { return '[o] dddd [pasado ' + (this.hours() !== 1 ? 'ás' : 'a') + '] LT' }, sameElse: 'L' }, relativeTime: { future (e) { return e.indexOf('un') === 0 ? 'n' + e : 'en ' + e }, past: 'hai %s', s: 'uns segundos', ss: '%d segundos', m: 'un minuto', mm: '%d minutos', h: 'unha hora', hh: '%d horas', d: 'un día', dd: '%d días', M: 'un mes', MM: '%d meses', y: 'un ano', yy: '%d anos' }, dayOfMonthOrdinalParse: /\d{1,2}º/, ordinal: '%dº', week: { dow: 1, doy: 4 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; function t (e, t, n, r) { const o = { s: ['थोडया सॅकंडांनी', 'थोडे सॅकंड'], ss: [e + ' सॅकंडांनी', e + ' सॅकंड'], m: ['एका मिणटान', 'एक मिनूट'], mm: [e + ' मिणटांनी', e + ' मिणटां'], h: ['एका वरान', 'एक वर'], hh: [e + ' वरांनी', e + ' वरां'], d: ['एका दिसान', 'एक दीस'], dd: [e + ' दिसांनी', e + ' दीस'], M: ['एका म्हयन्यान', 'एक म्हयनो'], MM: [e + ' म्हयन्यानी', e + ' म्हयने'], y: ['एका वर्सान', 'एक वर्स'], yy: [e + ' वर्सांनी', e + ' वर्सां'] }; return r ? o[n][0] : o[n][1] }e.defineLocale('gom-deva', { months: { standalone: 'जानेवारी_फेब्रुवारी_मार्च_एप्रील_मे_जून_जुलय_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर'.split('_'), format: 'जानेवारीच्या_फेब्रुवारीच्या_मार्चाच्या_एप्रीलाच्या_मेयाच्या_जूनाच्या_जुलयाच्या_ऑगस्टाच्या_सप्टेंबराच्या_ऑक्टोबराच्या_नोव्हेंबराच्या_डिसेंबराच्या'.split('_'), isFormat: /MMMM(\s)+D[oD]?/ }, monthsShort: 'जाने._फेब्रु._मार्च_एप्री._मे_जून_जुल._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.'.split('_'), monthsParseExact: !0, weekdays: 'आयतार_सोमार_मंगळार_बुधवार_बिरेस्तार_सुक्रार_शेनवार'.split('_'), weekdaysShort: 'आयत._सोम._मंगळ._बुध._ब्रेस्त._सुक्र._शेन.'.split('_'), weekdaysMin: 'आ_सो_मं_बु_ब्रे_सु_शे'.split('_'), weekdaysParseExact: !0, longDateFormat: { LT: 'A h:mm [वाजतां]', LTS: 'A h:mm:ss [वाजतां]', L: 'DD-MM-YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY A h:mm [वाजतां]', LLLL: 'dddd, MMMM Do, YYYY, A h:mm [वाजतां]', llll: 'ddd, D MMM YYYY, A h:mm [वाजतां]' }, calendar: { sameDay: '[आयज] LT', nextDay: '[फाल्यां] LT', nextWeek: '[फुडलो] dddd[,] LT', lastDay: '[काल] LT', lastWeek: '[फाटलो] dddd[,] LT', sameElse: 'L' }, relativeTime: { future: '%s', past: '%s आदीं', s: t, ss: t, m: t, mm: t, h: t, hh: t, d: t, dd: t, M: t, MM: t, y: t, yy: t }, dayOfMonthOrdinalParse: /\d{1,2}(वेर)/, ordinal (e, t) { switch (t) { case 'D':return e + 'वेर'; default:case 'M':case 'Q':case 'DDD':case 'd':case 'w':case 'W':return e } }, week: { dow: 1, doy: 4 }, meridiemParse: /राती|सकाळीं|दनपारां|सांजे/, meridiemHour (e, t) { return e === 12 && (e = 0), t === 'राती' ? e < 4 ? e : e + 12 : t === 'सकाळीं' ? e : t === 'दनपारां' ? e > 12 ? e : e + 12 : t === 'सांजे' ? e + 12 : void 0 }, meridiem (e, t, n) { return e < 4 ? 'राती' : e < 12 ? 'सकाळीं' : e < 16 ? 'दनपारां' : e < 20 ? 'सांजे' : 'राती' } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; function t (e, t, n, r) { const o = { s: ['thoddea sekondamni', 'thodde sekond'], ss: [e + ' sekondamni', e + ' sekond'], m: ['eka mintan', 'ek minut'], mm: [e + ' mintamni', e + ' mintam'], h: ['eka voran', 'ek vor'], hh: [e + ' voramni', e + ' voram'], d: ['eka disan', 'ek dis'], dd: [e + ' disamni', e + ' dis'], M: ['eka mhoinean', 'ek mhoino'], MM: [e + ' mhoineamni', e + ' mhoine'], y: ['eka vorsan', 'ek voros'], yy: [e + ' vorsamni', e + ' vorsam'] }; return r ? o[n][0] : o[n][1] }e.defineLocale('gom-latn', { months: { standalone: 'Janer_Febrer_Mars_Abril_Mai_Jun_Julai_Agost_Setembr_Otubr_Novembr_Dezembr'.split('_'), format: 'Janerachea_Febrerachea_Marsachea_Abrilachea_Maiachea_Junachea_Julaiachea_Agostachea_Setembrachea_Otubrachea_Novembrachea_Dezembrachea'.split('_'), isFormat: /MMMM(\s)+D[oD]?/ }, monthsShort: 'Jan._Feb._Mars_Abr._Mai_Jun_Jul._Ago._Set._Otu._Nov._Dez.'.split('_'), monthsParseExact: !0, weekdays: "Aitar_Somar_Mongllar_Budhvar_Birestar_Sukrar_Son'var".split('_'), weekdaysShort: 'Ait._Som._Mon._Bud._Bre._Suk._Son.'.split('_'), weekdaysMin: 'Ai_Sm_Mo_Bu_Br_Su_Sn'.split('_'), weekdaysParseExact: !0, longDateFormat: { LT: 'A h:mm [vazta]', LTS: 'A h:mm:ss [vazta]', L: 'DD-MM-YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY A h:mm [vazta]', LLLL: 'dddd, MMMM Do, YYYY, A h:mm [vazta]', llll: 'ddd, D MMM YYYY, A h:mm [vazta]' }, calendar: { sameDay: '[Aiz] LT', nextDay: '[Faleam] LT', nextWeek: '[Fuddlo] dddd[,] LT', lastDay: '[Kal] LT', lastWeek: '[Fattlo] dddd[,] LT', sameElse: 'L' }, relativeTime: { future: '%s', past: '%s adim', s: t, ss: t, m: t, mm: t, h: t, hh: t, d: t, dd: t, M: t, MM: t, y: t, yy: t }, dayOfMonthOrdinalParse: /\d{1,2}(er)/, ordinal (e, t) { switch (t) { case 'D':return e + 'er'; default:case 'M':case 'Q':case 'DDD':case 'd':case 'w':case 'W':return e } }, week: { dow: 1, doy: 4 }, meridiemParse: /rati|sokallim|donparam|sanje/, meridiemHour (e, t) { return e === 12 && (e = 0), t === 'rati' ? e < 4 ? e : e + 12 : t === 'sokallim' ? e : t === 'donparam' ? e > 12 ? e : e + 12 : t === 'sanje' ? e + 12 : void 0 }, meridiem (e, t, n) { return e < 4 ? 'rati' : e < 12 ? 'sokallim' : e < 16 ? 'donparam' : e < 20 ? 'sanje' : 'rati' } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; const t = { 1: '૧', 2: '૨', 3: '૩', 4: '૪', 5: '૫', 6: '૬', 7: '૭', 8: '૮', 9: '૯', 0: '૦' }; const n = { '૧': '1', '૨': '2', '૩': '3', '૪': '4', '૫': '5', '૬': '6', '૭': '7', '૮': '8', '૯': '9', '૦': '0' }; e.defineLocale('gu', { months: 'જાન્યુઆરી_ફેબ્રુઆરી_માર્ચ_એપ્રિલ_મે_જૂન_જુલાઈ_ઑગસ્ટ_સપ્ટેમ્બર_ઑક્ટ્બર_નવેમ્બર_ડિસેમ્બર'.split('_'), monthsShort: 'જાન્યુ._ફેબ્રુ._માર્ચ_એપ્રિ._મે_જૂન_જુલા._ઑગ._સપ્ટે._ઑક્ટ્._નવે._ડિસે.'.split('_'), monthsParseExact: !0, weekdays: 'રવિવાર_સોમવાર_મંગળવાર_બુધ્વાર_ગુરુવાર_શુક્રવાર_શનિવાર'.split('_'), weekdaysShort: 'રવિ_સોમ_મંગળ_બુધ્_ગુરુ_શુક્ર_શનિ'.split('_'), weekdaysMin: 'ર_સો_મં_બુ_ગુ_શુ_શ'.split('_'), longDateFormat: { LT: 'A h:mm વાગ્યે', LTS: 'A h:mm:ss વાગ્યે', L: 'DD/MM/YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY, A h:mm વાગ્યે', LLLL: 'dddd, D MMMM YYYY, A h:mm વાગ્યે' }, calendar: { sameDay: '[આજ] LT', nextDay: '[કાલે] LT', nextWeek: 'dddd, LT', lastDay: '[ગઇકાલે] LT', lastWeek: '[પાછલા] dddd, LT', sameElse: 'L' }, relativeTime: { future: '%s મા', past: '%s પહેલા', s: 'અમુક પળો', ss: '%d સેકંડ', m: 'એક મિનિટ', mm: '%d મિનિટ', h: 'એક કલાક', hh: '%d કલાક', d: 'એક દિવસ', dd: '%d દિવસ', M: 'એક મહિનો', MM: '%d મહિનો', y: 'એક વર્ષ', yy: '%d વર્ષ' }, preparse (e) { return e.replace(/[૧૨૩૪૫૬૭૮૯૦]/g, function (e) { return n[e] }) }, postformat (e) { return e.replace(/\d/g, function (e) { return t[e] }) }, meridiemParse: /રાત|બપોર|સવાર|સાંજ/, meridiemHour (e, t) { return e === 12 && (e = 0), t === 'રાત' ? e < 4 ? e : e + 12 : t === 'સવાર' ? e : t === 'બપોર' ? e >= 10 ? e : e + 12 : t === 'સાંજ' ? e + 12 : void 0 }, meridiem (e, t, n) { return e < 4 ? 'રાત' : e < 10 ? 'સવાર' : e < 17 ? 'બપોર' : e < 20 ? 'સાંજ' : 'રાત' }, week: { dow: 0, doy: 6 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; e.defineLocale('he', { months: 'ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר'.split('_'), monthsShort: 'ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳'.split('_'), weekdays: 'ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת'.split('_'), weekdaysShort: 'א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳'.split('_'), weekdaysMin: 'א_ב_ג_ד_ה_ו_ש'.split('_'), longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'DD/MM/YYYY', LL: 'D [ב]MMMM YYYY', LLL: 'D [ב]MMMM YYYY HH:mm', LLLL: 'dddd, D [ב]MMMM YYYY HH:mm', l: 'D/M/YYYY', ll: 'D MMM YYYY', lll: 'D MMM YYYY HH:mm', llll: 'ddd, D MMM YYYY HH:mm' }, calendar: { sameDay: '[היום ב־]LT', nextDay: '[מחר ב־]LT', nextWeek: 'dddd [בשעה] LT', lastDay: '[אתמול ב־]LT', lastWeek: '[ביום] dddd [האחרון בשעה] LT', sameElse: 'L' }, relativeTime: { future: 'בעוד %s', past: 'לפני %s', s: 'מספר שניות', ss: '%d שניות', m: 'דקה', mm: '%d דקות', h: 'שעה', hh (e) { return e === 2 ? 'שעתיים' : e + ' שעות' }, d: 'יום', dd (e) { return e === 2 ? 'יומיים' : e + ' ימים' }, M: 'חודש', MM (e) { return e === 2 ? 'חודשיים' : e + ' חודשים' }, y: 'שנה', yy (e) { return e === 2 ? 'שנתיים' : e % 10 == 0 && e !== 10 ? e + ' שנה' : e + ' שנים' } }, meridiemParse: /אחה"צ|לפנה"צ|אחרי הצהריים|לפני הצהריים|לפנות בוקר|בבוקר|בערב/i, isPM (input) { return /^(אחה"צ|אחרי הצהריים|בערב)$/.test(input) }, meridiem (e, t, n) { return e < 5 ? 'לפנות בוקר' : e < 10 ? 'בבוקר' : e < 12 ? n ? 'לפנה"צ' : 'לפני הצהריים' : e < 18 ? n ? 'אחה"צ' : 'אחרי הצהריים' : 'בערב' } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; const t = { 1: '१', 2: '२', 3: '३', 4: '४', 5: '५', 6: '६', 7: '७', 8: '८', 9: '९', 0: '०' }; const n = { '१': '1', '२': '2', '३': '3', '४': '4', '५': '5', '६': '6', '७': '7', '८': '8', '९': '9', '०': '0' }; e.defineLocale('hi', { months: 'जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर'.split('_'), monthsShort: 'जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.'.split('_'), monthsParseExact: !0, weekdays: 'रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'), weekdaysShort: 'रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि'.split('_'), weekdaysMin: 'र_सो_मं_बु_गु_शु_श'.split('_'), longDateFormat: { LT: 'A h:mm बजे', LTS: 'A h:mm:ss बजे', L: 'DD/MM/YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY, A h:mm बजे', LLLL: 'dddd, D MMMM YYYY, A h:mm बजे' }, calendar: { sameDay: '[आज] LT', nextDay: '[कल] LT', nextWeek: 'dddd, LT', lastDay: '[कल] LT', lastWeek: '[पिछले] dddd, LT', sameElse: 'L' }, relativeTime: { future: '%s में', past: '%s पहले', s: 'कुछ ही क्षण', ss: '%d सेकंड', m: 'एक मिनट', mm: '%d मिनट', h: 'एक घंटा', hh: '%d घंटे', d: 'एक दिन', dd: '%d दिन', M: 'एक महीने', MM: '%d महीने', y: 'एक वर्ष', yy: '%d वर्ष' }, preparse (e) { return e.replace(/[१२३४५६७८९०]/g, function (e) { return n[e] }) }, postformat (e) { return e.replace(/\d/g, function (e) { return t[e] }) }, meridiemParse: /रात|सुबह|दोपहर|शाम/, meridiemHour (e, t) { return e === 12 && (e = 0), t === 'रात' ? e < 4 ? e : e + 12 : t === 'सुबह' ? e : t === 'दोपहर' ? e >= 10 ? e : e + 12 : t === 'शाम' ? e + 12 : void 0 }, meridiem (e, t, n) { return e < 4 ? 'रात' : e < 10 ? 'सुबह' : e < 17 ? 'दोपहर' : e < 20 ? 'शाम' : 'रात' }, week: { dow: 0, doy: 6 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; function t (e, t, n) { let r = e + ' '; switch (n) { case 'ss':return r += e === 1 ? 'sekunda' : e === 2 || e === 3 || e === 4 ? 'sekunde' : 'sekundi'; case 'm':return t ? 'jedna minuta' : 'jedne minute'; case 'mm':return r += e === 1 ? 'minuta' : e === 2 || e === 3 || e === 4 ? 'minute' : 'minuta'; case 'h':return t ? 'jedan sat' : 'jednog sata'; case 'hh':return r += e === 1 ? 'sat' : e === 2 || e === 3 || e === 4 ? 'sata' : 'sati'; case 'dd':return r += e === 1 ? 'dan' : 'dana'; case 'MM':return r += e === 1 ? 'mjesec' : e === 2 || e === 3 || e === 4 ? 'mjeseca' : 'mjeseci'; case 'yy':return r += e === 1 ? 'godina' : e === 2 || e === 3 || e === 4 ? 'godine' : 'godina' } }e.defineLocale('hr', { months: { format: 'siječnja_veljače_ožujka_travnja_svibnja_lipnja_srpnja_kolovoza_rujna_listopada_studenoga_prosinca'.split('_'), standalone: 'siječanj_veljača_ožujak_travanj_svibanj_lipanj_srpanj_kolovoz_rujan_listopad_studeni_prosinac'.split('_') }, monthsShort: 'sij._velj._ožu._tra._svi._lip._srp._kol._ruj._lis._stu._pro.'.split('_'), monthsParseExact: !0, weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'), weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'), weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'), weekdaysParseExact: !0, longDateFormat: { LT: 'H:mm', LTS: 'H:mm:ss', L: 'DD.MM.YYYY', LL: 'Do MMMM YYYY', LLL: 'Do MMMM YYYY H:mm', LLLL: 'dddd, Do MMMM YYYY H:mm' }, calendar: { sameDay: '[danas u] LT', nextDay: '[sutra u] LT', nextWeek () { switch (this.day()) { case 0:return '[u] [nedjelju] [u] LT'; case 3:return '[u] [srijedu] [u] LT'; case 6:return '[u] [subotu] [u] LT'; case 1:case 2:case 4:case 5:return '[u] dddd [u] LT' } }, lastDay: '[jučer u] LT', lastWeek () { switch (this.day()) { case 0:return '[prošlu] [nedjelju] [u] LT'; case 3:return '[prošlu] [srijedu] [u] LT'; case 6:return '[prošle] [subote] [u] LT'; case 1:case 2:case 4:case 5:return '[prošli] dddd [u] LT' } }, sameElse: 'L' }, relativeTime: { future: 'za %s', past: 'prije %s', s: 'par sekundi', ss: t, m: t, mm: t, h: t, hh: t, d: 'dan', dd: t, M: 'mjesec', MM: t, y: 'godinu', yy: t }, dayOfMonthOrdinalParse: /\d{1,2}\./, ordinal: '%d.', week: { dow: 1, doy: 7 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; const t = 'vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton'.split(' '); function n (e, t, n, r) { const o = e; switch (n) { case 's':return r || t ? 'néhány másodperc' : 'néhány másodperce'; case 'ss':return o + (r || t) ? ' másodperc' : ' másodperce'; case 'm':return 'egy' + (r || t ? ' perc' : ' perce'); case 'mm':return o + (r || t ? ' perc' : ' perce'); case 'h':return 'egy' + (r || t ? ' óra' : ' órája'); case 'hh':return o + (r || t ? ' óra' : ' órája'); case 'd':return 'egy' + (r || t ? ' nap' : ' napja'); case 'dd':return o + (r || t ? ' nap' : ' napja'); case 'M':return 'egy' + (r || t ? ' hónap' : ' hónapja'); case 'MM':return o + (r || t ? ' hónap' : ' hónapja'); case 'y':return 'egy' + (r || t ? ' év' : ' éve'); case 'yy':return o + (r || t ? ' év' : ' éve') } return '' } function r (e) { return (e ? '' : '[múlt] ') + '[' + t[this.day()] + '] LT[-kor]' }e.defineLocale('hu', { months: 'január_február_március_április_május_június_július_augusztus_szeptember_október_november_december'.split('_'), monthsShort: 'jan_feb_márc_ápr_máj_jún_júl_aug_szept_okt_nov_dec'.split('_'), weekdays: 'vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat'.split('_'), weekdaysShort: 'vas_hét_kedd_sze_csüt_pén_szo'.split('_'), weekdaysMin: 'v_h_k_sze_cs_p_szo'.split('_'), longDateFormat: { LT: 'H:mm', LTS: 'H:mm:ss', L: 'YYYY.MM.DD.', LL: 'YYYY. MMMM D.', LLL: 'YYYY. MMMM D. H:mm', LLLL: 'YYYY. MMMM D., dddd H:mm' }, meridiemParse: /de|du/i, isPM (input) { return input.charAt(1).toLowerCase() === 'u' }, meridiem (e, t, n) { return e < 12 ? !0 === n ? 'de' : 'DE' : !0 === n ? 'du' : 'DU' }, calendar: { sameDay: '[ma] LT[-kor]', nextDay: '[holnap] LT[-kor]', nextWeek () { return r.call(this, !0) }, lastDay: '[tegnap] LT[-kor]', lastWeek () { return r.call(this, !1) }, sameElse: 'L' }, relativeTime: { future: '%s múlva', past: '%s', s: n, ss: n, m: n, mm: n, h: n, hh: n, d: n, dd: n, M: n, MM: n, y: n, yy: n }, dayOfMonthOrdinalParse: /\d{1,2}\./, ordinal: '%d.', week: { dow: 1, doy: 4 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; e.defineLocale('hy-am', { months: { format: 'հունվարի_փետրվարի_մարտի_ապրիլի_մայիսի_հունիսի_հուլիսի_օգոստոսի_սեպտեմբերի_հոկտեմբերի_նոյեմբերի_դեկտեմբերի'.split('_'), standalone: 'հունվար_փետրվար_մարտ_ապրիլ_մայիս_հունիս_հուլիս_օգոստոս_սեպտեմբեր_հոկտեմբեր_նոյեմբեր_դեկտեմբեր'.split('_') }, monthsShort: 'հնվ_փտր_մրտ_ապր_մյս_հնս_հլս_օգս_սպտ_հկտ_նմբ_դկտ'.split('_'), weekdays: 'կիրակի_երկուշաբթի_երեքշաբթի_չորեքշաբթի_հինգշաբթի_ուրբաթ_շաբաթ'.split('_'), weekdaysShort: 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'), weekdaysMin: 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'), longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'DD.MM.YYYY', LL: 'D MMMM YYYY թ.', LLL: 'D MMMM YYYY թ., HH:mm', LLLL: 'dddd, D MMMM YYYY թ., HH:mm' }, calendar: { sameDay: '[այսօր] LT', nextDay: '[վաղը] LT', lastDay: '[երեկ] LT', nextWeek () { return 'dddd [օրը ժամը] LT' }, lastWeek () { return '[անցած] dddd [օրը ժամը] LT' }, sameElse: 'L' }, relativeTime: { future: '%s հետո', past: '%s առաջ', s: 'մի քանի վայրկյան', ss: '%d վայրկյան', m: 'րոպե', mm: '%d րոպե', h: 'ժամ', hh: '%d ժամ', d: 'օր', dd: '%d օր', M: 'ամիս', MM: '%d ամիս', y: 'տարի', yy: '%d տարի' }, meridiemParse: /գիշերվա|առավոտվա|ցերեկվա|երեկոյան/, isPM (input) { return /^(ցերեկվա|երեկոյան)$/.test(input) }, meridiem (e) { return e < 4 ? 'գիշերվա' : e < 12 ? 'առավոտվա' : e < 17 ? 'ցերեկվա' : 'երեկոյան' }, dayOfMonthOrdinalParse: /\d{1,2}|\d{1,2}-(ին|րդ)/, ordinal (e, t) { switch (t) { case 'DDD':case 'w':case 'W':case 'DDDo':return e === 1 ? e + '-ին' : e + '-րդ'; default:return e } }, week: { dow: 1, doy: 7 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; e.defineLocale('id', { months: 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember'.split('_'), monthsShort: 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Agt_Sep_Okt_Nov_Des'.split('_'), weekdays: 'Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu'.split('_'), weekdaysShort: 'Min_Sen_Sel_Rab_Kam_Jum_Sab'.split('_'), weekdaysMin: 'Mg_Sn_Sl_Rb_Km_Jm_Sb'.split('_'), longDateFormat: { LT: 'HH.mm', LTS: 'HH.mm.ss', L: 'DD/MM/YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY [pukul] HH.mm', LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm' }, meridiemParse: /pagi|siang|sore|malam/, meridiemHour (e, t) { return e === 12 && (e = 0), t === 'pagi' ? e : t === 'siang' ? e >= 11 ? e : e + 12 : t === 'sore' || t === 'malam' ? e + 12 : void 0 }, meridiem (e, t, n) { return e < 11 ? 'pagi' : e < 15 ? 'siang' : e < 19 ? 'sore' : 'malam' }, calendar: { sameDay: '[Hari ini pukul] LT', nextDay: '[Besok pukul] LT', nextWeek: 'dddd [pukul] LT', lastDay: '[Kemarin pukul] LT', lastWeek: 'dddd [lalu pukul] LT', sameElse: 'L' }, relativeTime: { future: 'dalam %s', past: '%s yang lalu', s: 'beberapa detik', ss: '%d detik', m: 'semenit', mm: '%d menit', h: 'sejam', hh: '%d jam', d: 'sehari', dd: '%d hari', M: 'sebulan', MM: '%d bulan', y: 'setahun', yy: '%d tahun' }, week: { dow: 0, doy: 6 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; function t (e) { return e % 100 == 11 || e % 10 != 1 } function n (e, n, r, o) { const d = e + ' '; switch (r) { case 's':return n || o ? 'nokkrar sekúndur' : 'nokkrum sekúndum'; case 'ss':return t(e) ? d + (n || o ? 'sekúndur' : 'sekúndum') : d + 'sekúnda'; case 'm':return n ? 'mínúta' : 'mínútu'; case 'mm':return t(e) ? d + (n || o ? 'mínútur' : 'mínútum') : n ? d + 'mínúta' : d + 'mínútu'; case 'hh':return t(e) ? d + (n || o ? 'klukkustundir' : 'klukkustundum') : d + 'klukkustund'; case 'd':return n ? 'dagur' : o ? 'dag' : 'degi'; case 'dd':return t(e) ? n ? d + 'dagar' : d + (o ? 'daga' : 'dögum') : n ? d + 'dagur' : d + (o ? 'dag' : 'degi'); case 'M':return n ? 'mánuður' : o ? 'mánuð' : 'mánuði'; case 'MM':return t(e) ? n ? d + 'mánuðir' : d + (o ? 'mánuði' : 'mánuðum') : n ? d + 'mánuður' : d + (o ? 'mánuð' : 'mánuði'); case 'y':return n || o ? 'ár' : 'ári'; case 'yy':return t(e) ? d + (n || o ? 'ár' : 'árum') : d + (n || o ? 'ár' : 'ári') } }e.defineLocale('is', { months: 'janúar_febrúar_mars_apríl_maí_júní_júlí_ágúst_september_október_nóvember_desember'.split('_'), monthsShort: 'jan_feb_mar_apr_maí_jún_júl_ágú_sep_okt_nóv_des'.split('_'), weekdays: 'sunnudagur_mánudagur_þriðjudagur_miðvikudagur_fimmtudagur_föstudagur_laugardagur'.split('_'), weekdaysShort: 'sun_mán_þri_mið_fim_fös_lau'.split('_'), weekdaysMin: 'Su_Má_Þr_Mi_Fi_Fö_La'.split('_'), longDateFormat: { LT: 'H:mm', LTS: 'H:mm:ss', L: 'DD.MM.YYYY', LL: 'D. MMMM YYYY', LLL: 'D. MMMM YYYY [kl.] H:mm', LLLL: 'dddd, D. MMMM YYYY [kl.] H:mm' }, calendar: { sameDay: '[í dag kl.] LT', nextDay: '[á morgun kl.] LT', nextWeek: 'dddd [kl.] LT', lastDay: '[í gær kl.] LT', lastWeek: '[síðasta] dddd [kl.] LT', sameElse: 'L' }, relativeTime: { future: 'eftir %s', past: 'fyrir %s síðan', s: n, ss: n, m: n, mm: n, h: 'klukkustund', hh: n, d: n, dd: n, M: n, MM: n, y: n, yy: n }, dayOfMonthOrdinalParse: /\d{1,2}\./, ordinal: '%d.', week: { dow: 1, doy: 4 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; e.defineLocale('it', { months: 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'), monthsShort: 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'), weekdays: 'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split('_'), weekdaysShort: 'dom_lun_mar_mer_gio_ven_sab'.split('_'), weekdaysMin: 'do_lu_ma_me_gi_ve_sa'.split('_'), longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'DD/MM/YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY HH:mm', LLLL: 'dddd D MMMM YYYY HH:mm' }, calendar: { sameDay () { return '[Oggi a' + (this.hours() > 1 ? 'lle ' : this.hours() === 0 ? ' ' : "ll'") + ']LT' }, nextDay () { return '[Domani a' + (this.hours() > 1 ? 'lle ' : this.hours() === 0 ? ' ' : "ll'") + ']LT' }, nextWeek () { return 'dddd [a' + (this.hours() > 1 ? 'lle ' : this.hours() === 0 ? ' ' : "ll'") + ']LT' }, lastDay () { return '[Ieri a' + (this.hours() > 1 ? 'lle ' : this.hours() === 0 ? ' ' : "ll'") + ']LT' }, lastWeek () { switch (this.day()) { case 0:return '[La scorsa] dddd [a' + (this.hours() > 1 ? 'lle ' : this.hours() === 0 ? ' ' : "ll'") + ']LT'; default:return '[Lo scorso] dddd [a' + (this.hours() > 1 ? 'lle ' : this.hours() === 0 ? ' ' : "ll'") + ']LT' } }, sameElse: 'L' }, relativeTime: { future: 'tra %s', past: '%s fa', s: 'alcuni secondi', ss: '%d secondi', m: 'un minuto', mm: '%d minuti', h: "un'ora", hh: '%d ore', d: 'un giorno', dd: '%d giorni', M: 'un mese', MM: '%d mesi', y: 'un anno', yy: '%d anni' }, dayOfMonthOrdinalParse: /\d{1,2}º/, ordinal: '%dº', week: { dow: 1, doy: 4 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; e.defineLocale('it-ch', { months: 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'), monthsShort: 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'), weekdays: 'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split('_'), weekdaysShort: 'dom_lun_mar_mer_gio_ven_sab'.split('_'), weekdaysMin: 'do_lu_ma_me_gi_ve_sa'.split('_'), longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'DD.MM.YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY HH:mm', LLLL: 'dddd D MMMM YYYY HH:mm' }, calendar: { sameDay: '[Oggi alle] LT', nextDay: '[Domani alle] LT', nextWeek: 'dddd [alle] LT', lastDay: '[Ieri alle] LT', lastWeek () { switch (this.day()) { case 0:return '[la scorsa] dddd [alle] LT'; default:return '[lo scorso] dddd [alle] LT' } }, sameElse: 'L' }, relativeTime: { future (s) { return (/^[0-9].+$/.test(s) ? 'tra' : 'in') + ' ' + s }, past: '%s fa', s: 'alcuni secondi', ss: '%d secondi', m: 'un minuto', mm: '%d minuti', h: "un'ora", hh: '%d ore', d: 'un giorno', dd: '%d giorni', M: 'un mese', MM: '%d mesi', y: 'un anno', yy: '%d anni' }, dayOfMonthOrdinalParse: /\d{1,2}º/, ordinal: '%dº', week: { dow: 1, doy: 4 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; e.defineLocale('ja', { eras: [{ since: '2019-05-01', offset: 1, name: '令和', narrow: '㋿', abbr: 'R' }, { since: '1989-01-08', until: '2019-04-30', offset: 1, name: '平成', narrow: '㍻', abbr: 'H' }, { since: '1926-12-25', until: '1989-01-07', offset: 1, name: '昭和', narrow: '㍼', abbr: 'S' }, { since: '1912-07-30', until: '1926-12-24', offset: 1, name: '大正', narrow: '㍽', abbr: 'T' }, { since: '1873-01-01', until: '1912-07-29', offset: 6, name: '明治', narrow: '㍾', abbr: 'M' }, { since: '0001-01-01', until: '1873-12-31', offset: 1, name: '西暦', narrow: 'AD', abbr: 'AD' }, { since: '0000-12-31', until: -1 / 0, offset: 1, name: '紀元前', narrow: 'BC', abbr: 'BC' }], eraYearOrdinalRegex: /(元|\d+)年/, eraYearOrdinalParse (input, e) { return e[1] === '元' ? 1 : parseInt(e[1] || input, 10) }, months: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'), monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'), weekdays: '日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日'.split('_'), weekdaysShort: '日_月_火_水_木_金_土'.split('_'), weekdaysMin: '日_月_火_水_木_金_土'.split('_'), longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'YYYY/MM/DD', LL: 'YYYY年M月D日', LLL: 'YYYY年M月D日 HH:mm', LLLL: 'YYYY年M月D日 dddd HH:mm', l: 'YYYY/MM/DD', ll: 'YYYY年M月D日', lll: 'YYYY年M月D日 HH:mm', llll: 'YYYY年M月D日(ddd) HH:mm' }, meridiemParse: /午前|午後/i, isPM (input) { return input === '午後' }, meridiem (e, t, n) { return e < 12 ? '午前' : '午後' }, calendar: { sameDay: '[今日] LT', nextDay: '[明日] LT', nextWeek (e) { return e.week() !== this.week() ? '[来週]dddd LT' : 'dddd LT' }, lastDay: '[昨日] LT', lastWeek (e) { return this.week() !== e.week() ? '[先週]dddd LT' : 'dddd LT' }, sameElse: 'L' }, dayOfMonthOrdinalParse: /\d{1,2}日/, ordinal (e, t) { switch (t) { case 'y':return e === 1 ? '元年' : e + '年'; case 'd':case 'D':case 'DDD':return e + '日'; default:return e } }, relativeTime: { future: '%s後', past: '%s前', s: '数秒', ss: '%d秒', m: '1分', mm: '%d分', h: '1時間', hh: '%d時間', d: '1日', dd: '%d日', M: '1ヶ月', MM: '%dヶ月', y: '1年', yy: '%d年' } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; e.defineLocale('jv', { months: 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_Nopember_Desember'.split('_'), monthsShort: 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nop_Des'.split('_'), weekdays: 'Minggu_Senen_Seloso_Rebu_Kemis_Jemuwah_Septu'.split('_'), weekdaysShort: 'Min_Sen_Sel_Reb_Kem_Jem_Sep'.split('_'), weekdaysMin: 'Mg_Sn_Sl_Rb_Km_Jm_Sp'.split('_'), longDateFormat: { LT: 'HH.mm', LTS: 'HH.mm.ss', L: 'DD/MM/YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY [pukul] HH.mm', LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm' }, meridiemParse: /enjing|siyang|sonten|ndalu/, meridiemHour (e, t) { return e === 12 && (e = 0), t === 'enjing' ? e : t === 'siyang' ? e >= 11 ? e : e + 12 : t === 'sonten' || t === 'ndalu' ? e + 12 : void 0 }, meridiem (e, t, n) { return e < 11 ? 'enjing' : e < 15 ? 'siyang' : e < 19 ? 'sonten' : 'ndalu' }, calendar: { sameDay: '[Dinten puniko pukul] LT', nextDay: '[Mbenjang pukul] LT', nextWeek: 'dddd [pukul] LT', lastDay: '[Kala wingi pukul] LT', lastWeek: 'dddd [kepengker pukul] LT', sameElse: 'L' }, relativeTime: { future: 'wonten ing %s', past: '%s ingkang kepengker', s: 'sawetawis detik', ss: '%d detik', m: 'setunggal menit', mm: '%d menit', h: 'setunggal jam', hh: '%d jam', d: 'sedinten', dd: '%d dinten', M: 'sewulan', MM: '%d wulan', y: 'setaun', yy: '%d taun' }, week: { dow: 1, doy: 7 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; e.defineLocale('ka', { months: 'იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი'.split('_'), monthsShort: 'იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ'.split('_'), weekdays: { standalone: 'კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი'.split('_'), format: 'კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს'.split('_'), isFormat: /(წინა|შემდეგ)/ }, weekdaysShort: 'კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ'.split('_'), weekdaysMin: 'კვ_ორ_სა_ოთ_ხუ_პა_შა'.split('_'), longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'DD/MM/YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY HH:mm', LLLL: 'dddd, D MMMM YYYY HH:mm' }, calendar: { sameDay: '[დღეს] LT[-ზე]', nextDay: '[ხვალ] LT[-ზე]', lastDay: '[გუშინ] LT[-ზე]', nextWeek: '[შემდეგ] dddd LT[-ზე]', lastWeek: '[წინა] dddd LT-ზე', sameElse: 'L' }, relativeTime: { future (s) { return s.replace(/(წამ|წუთ|საათ|წელ|დღ|თვ)(ი|ე)/, function (e, t, n) { return n === 'ი' ? t + 'ში' : t + n + 'ში' }) }, past (s) { return /(წამი|წუთი|საათი|დღე|თვე)/.test(s) ? s.replace(/(ი|ე)$/, 'ის წინ') : /წელი/.test(s) ? s.replace(/წელი$/, 'წლის წინ') : s }, s: 'რამდენიმე წამი', ss: '%d წამი', m: 'წუთი', mm: '%d წუთი', h: 'საათი', hh: '%d საათი', d: 'დღე', dd: '%d დღე', M: 'თვე', MM: '%d თვე', y: 'წელი', yy: '%d წელი' }, dayOfMonthOrdinalParse: /0|1-ლი|მე-\d{1,2}|\d{1,2}-ე/, ordinal (e) { return e === 0 ? e : e === 1 ? e + '-ლი' : e < 20 || e <= 100 && e % 20 == 0 || e % 100 == 0 ? 'მე-' + e : e + '-ე' }, week: { dow: 1, doy: 7 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; const t = { 0: '-ші', 1: '-ші', 2: '-ші', 3: '-ші', 4: '-ші', 5: '-ші', 6: '-шы', 7: '-ші', 8: '-ші', 9: '-шы', 10: '-шы', 20: '-шы', 30: '-шы', 40: '-шы', 50: '-ші', 60: '-шы', 70: '-ші', 80: '-ші', 90: '-шы', 100: '-ші' }; e.defineLocale('kk', { months: 'қаңтар_ақпан_наурыз_сәуір_мамыр_маусым_шілде_тамыз_қыркүйек_қазан_қараша_желтоқсан'.split('_'), monthsShort: 'қаң_ақп_нау_сәу_мам_мау_шіл_там_қыр_қаз_қар_жел'.split('_'), weekdays: 'жексенбі_дүйсенбі_сейсенбі_сәрсенбі_бейсенбі_жұма_сенбі'.split('_'), weekdaysShort: 'жек_дүй_сей_сәр_бей_жұм_сен'.split('_'), weekdaysMin: 'жк_дй_сй_ср_бй_жм_сн'.split('_'), longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'DD.MM.YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY HH:mm', LLLL: 'dddd, D MMMM YYYY HH:mm' }, calendar: { sameDay: '[Бүгін сағат] LT', nextDay: '[Ертең сағат] LT', nextWeek: 'dddd [сағат] LT', lastDay: '[Кеше сағат] LT', lastWeek: '[Өткен аптаның] dddd [сағат] LT', sameElse: 'L' }, relativeTime: { future: '%s ішінде', past: '%s бұрын', s: 'бірнеше секунд', ss: '%d секунд', m: 'бір минут', mm: '%d минут', h: 'бір сағат', hh: '%d сағат', d: 'бір күн', dd: '%d күн', M: 'бір ай', MM: '%d ай', y: 'бір жыл', yy: '%d жыл' }, dayOfMonthOrdinalParse: /\d{1,2}-(ші|шы)/, ordinal (e) { return e + (t[e] || t[e % 10] || t[e >= 100 ? 100 : null]) }, week: { dow: 1, doy: 7 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; const t = { 1: '១', 2: '២', 3: '៣', 4: '៤', 5: '៥', 6: '៦', 7: '៧', 8: '៨', 9: '៩', 0: '០' }; const n = { '១': '1', '២': '2', '៣': '3', '៤': '4', '៥': '5', '៦': '6', '៧': '7', '៨': '8', '៩': '9', '០': '0' }; e.defineLocale('km', { months: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split('_'), monthsShort: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split('_'), weekdays: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'), weekdaysShort: 'អា_ច_អ_ព_ព្រ_សុ_ស'.split('_'), weekdaysMin: 'អា_ច_អ_ព_ព្រ_សុ_ស'.split('_'), weekdaysParseExact: !0, longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'DD/MM/YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY HH:mm', LLLL: 'dddd, D MMMM YYYY HH:mm' }, meridiemParse: /ព្រឹក|ល្ងាច/, isPM (input) { return input === 'ល្ងាច' }, meridiem (e, t, n) { return e < 12 ? 'ព្រឹក' : 'ល្ងាច' }, calendar: { sameDay: '[ថ្ងៃនេះ ម៉ោង] LT', nextDay: '[ស្អែក ម៉ោង] LT', nextWeek: 'dddd [ម៉ោង] LT', lastDay: '[ម្សិលមិញ ម៉ោង] LT', lastWeek: 'dddd [សប្តាហ៍មុន] [ម៉ោង] LT', sameElse: 'L' }, relativeTime: { future: '%sទៀត', past: '%sមុន', s: 'ប៉ុន្មានវិនាទី', ss: '%d វិនាទី', m: 'មួយនាទី', mm: '%d នាទី', h: 'មួយម៉ោង', hh: '%d ម៉ោង', d: 'មួយថ្ងៃ', dd: '%d ថ្ងៃ', M: 'មួយខែ', MM: '%d ខែ', y: 'មួយឆ្នាំ', yy: '%d ឆ្នាំ' }, dayOfMonthOrdinalParse: /ទី\d{1,2}/, ordinal: 'ទី%d', preparse (e) { return e.replace(/[១២៣៤៥៦៧៨៩០]/g, function (e) { return n[e] }) }, postformat (e) { return e.replace(/\d/g, function (e) { return t[e] }) }, week: { dow: 1, doy: 4 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; const t = { 1: '೧', 2: '೨', 3: '೩', 4: '೪', 5: '೫', 6: '೬', 7: '೭', 8: '೮', 9: '೯', 0: '೦' }; const n = { '೧': '1', '೨': '2', '೩': '3', '೪': '4', '೫': '5', '೬': '6', '೭': '7', '೮': '8', '೯': '9', '೦': '0' }; e.defineLocale('kn', { months: 'ಜನವರಿ_ಫೆಬ್ರವರಿ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂಬರ್_ಅಕ್ಟೋಬರ್_ನವೆಂಬರ್_ಡಿಸೆಂಬರ್'.split('_'), monthsShort: 'ಜನ_ಫೆಬ್ರ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂ_ಅಕ್ಟೋ_ನವೆಂ_ಡಿಸೆಂ'.split('_'), monthsParseExact: !0, weekdays: 'ಭಾನುವಾರ_ಸೋಮವಾರ_ಮಂಗಳವಾರ_ಬುಧವಾರ_ಗುರುವಾರ_ಶುಕ್ರವಾರ_ಶನಿವಾರ'.split('_'), weekdaysShort: 'ಭಾನು_ಸೋಮ_ಮಂಗಳ_ಬುಧ_ಗುರು_ಶುಕ್ರ_ಶನಿ'.split('_'), weekdaysMin: 'ಭಾ_ಸೋ_ಮಂ_ಬು_ಗು_ಶು_ಶ'.split('_'), longDateFormat: { LT: 'A h:mm', LTS: 'A h:mm:ss', L: 'DD/MM/YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY, A h:mm', LLLL: 'dddd, D MMMM YYYY, A h:mm' }, calendar: { sameDay: '[ಇಂದು] LT', nextDay: '[ನಾಳೆ] LT', nextWeek: 'dddd, LT', lastDay: '[ನಿನ್ನೆ] LT', lastWeek: '[ಕೊನೆಯ] dddd, LT', sameElse: 'L' }, relativeTime: { future: '%s ನಂತರ', past: '%s ಹಿಂದೆ', s: 'ಕೆಲವು ಕ್ಷಣಗಳು', ss: '%d ಸೆಕೆಂಡುಗಳು', m: 'ಒಂದು ನಿಮಿಷ', mm: '%d ನಿಮಿಷ', h: 'ಒಂದು ಗಂಟೆ', hh: '%d ಗಂಟೆ', d: 'ಒಂದು ದಿನ', dd: '%d ದಿನ', M: 'ಒಂದು ತಿಂಗಳು', MM: '%d ತಿಂಗಳು', y: 'ಒಂದು ವರ್ಷ', yy: '%d ವರ್ಷ' }, preparse (e) { return e.replace(/[೧೨೩೪೫೬೭೮೯೦]/g, function (e) { return n[e] }) }, postformat (e) { return e.replace(/\d/g, function (e) { return t[e] }) }, meridiemParse: /ರಾತ್ರಿ|ಬೆಳಿಗ್ಗೆ|ಮಧ್ಯಾಹ್ನ|ಸಂಜೆ/, meridiemHour (e, t) { return e === 12 && (e = 0), t === 'ರಾತ್ರಿ' ? e < 4 ? e : e + 12 : t === 'ಬೆಳಿಗ್ಗೆ' ? e : t === 'ಮಧ್ಯಾಹ್ನ' ? e >= 10 ? e : e + 12 : t === 'ಸಂಜೆ' ? e + 12 : void 0 }, meridiem (e, t, n) { return e < 4 ? 'ರಾತ್ರಿ' : e < 10 ? 'ಬೆಳಿಗ್ಗೆ' : e < 17 ? 'ಮಧ್ಯಾಹ್ನ' : e < 20 ? 'ಸಂಜೆ' : 'ರಾತ್ರಿ' }, dayOfMonthOrdinalParse: /\d{1,2}(ನೇ)/, ordinal (e) { return e + 'ನೇ' }, week: { dow: 0, doy: 6 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; e.defineLocale('ko', { months: '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'), monthsShort: '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'), weekdays: '일요일_월요일_화요일_수요일_목요일_금요일_토요일'.split('_'), weekdaysShort: '일_월_화_수_목_금_토'.split('_'), weekdaysMin: '일_월_화_수_목_금_토'.split('_'), longDateFormat: { LT: 'A h:mm', LTS: 'A h:mm:ss', L: 'YYYY.MM.DD.', LL: 'YYYY년 MMMM D일', LLL: 'YYYY년 MMMM D일 A h:mm', LLLL: 'YYYY년 MMMM D일 dddd A h:mm', l: 'YYYY.MM.DD.', ll: 'YYYY년 MMMM D일', lll: 'YYYY년 MMMM D일 A h:mm', llll: 'YYYY년 MMMM D일 dddd A h:mm' }, calendar: { sameDay: '오늘 LT', nextDay: '내일 LT', nextWeek: 'dddd LT', lastDay: '어제 LT', lastWeek: '지난주 dddd LT', sameElse: 'L' }, relativeTime: { future: '%s 후', past: '%s 전', s: '몇 초', ss: '%d초', m: '1분', mm: '%d분', h: '한 시간', hh: '%d시간', d: '하루', dd: '%d일', M: '한 달', MM: '%d달', y: '일 년', yy: '%d년' }, dayOfMonthOrdinalParse: /\d{1,2}(일|월|주)/, ordinal (e, t) { switch (t) { case 'd':case 'D':case 'DDD':return e + '일'; case 'M':return e + '월'; case 'w':case 'W':return e + '주'; default:return e } }, meridiemParse: /오전|오후/, isPM (e) { return e === '오후' }, meridiem (e, t, n) { return e < 12 ? '오전' : '오후' } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; const t = { 1: '١', 2: '٢', 3: '٣', 4: '٤', 5: '٥', 6: '٦', 7: '٧', 8: '٨', 9: '٩', 0: '٠' }; const n = { '١': '1', '٢': '2', '٣': '3', '٤': '4', '٥': '5', '٦': '6', '٧': '7', '٨': '8', '٩': '9', '٠': '0' }; const r = ['کانونی دووەم', 'شوبات', 'ئازار', 'نیسان', 'ئایار', 'حوزەیران', 'تەمموز', 'ئاب', 'ئەیلوول', 'تشرینی یەكەم', 'تشرینی دووەم', 'كانونی یەکەم']; e.defineLocale('ku', { months: r, monthsShort: r, weekdays: 'یه‌كشه‌ممه‌_دووشه‌ممه‌_سێشه‌ممه‌_چوارشه‌ممه‌_پێنجشه‌ممه‌_هه‌ینی_شه‌ممه‌'.split('_'), weekdaysShort: 'یه‌كشه‌م_دووشه‌م_سێشه‌م_چوارشه‌م_پێنجشه‌م_هه‌ینی_شه‌ممه‌'.split('_'), weekdaysMin: 'ی_د_س_چ_پ_ه_ش'.split('_'), weekdaysParseExact: !0, longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'DD/MM/YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY HH:mm', LLLL: 'dddd, D MMMM YYYY HH:mm' }, meridiemParse: /ئێواره‌|به‌یانی/, isPM (input) { return /ئێواره‌/.test(input) }, meridiem (e, t, n) { return e < 12 ? 'به‌یانی' : 'ئێواره‌' }, calendar: { sameDay: '[ئه‌مرۆ كاتژمێر] LT', nextDay: '[به‌یانی كاتژمێر] LT', nextWeek: 'dddd [كاتژمێر] LT', lastDay: '[دوێنێ كاتژمێر] LT', lastWeek: 'dddd [كاتژمێر] LT', sameElse: 'L' }, relativeTime: { future: 'له‌ %s', past: '%s', s: 'چه‌ند چركه‌یه‌ك', ss: 'چركه‌ %d', m: 'یه‌ك خوله‌ك', mm: '%d خوله‌ك', h: 'یه‌ك كاتژمێر', hh: '%d كاتژمێر', d: 'یه‌ك ڕۆژ', dd: '%d ڕۆژ', M: 'یه‌ك مانگ', MM: '%d مانگ', y: 'یه‌ك ساڵ', yy: '%d ساڵ' }, preparse (e) { return e.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (e) { return n[e] }).replace(/،/g, ',') }, postformat (e) { return e.replace(/\d/g, function (e) { return t[e] }).replace(/,/g, '،') }, week: { dow: 6, doy: 12 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; const t = { 0: '-чү', 1: '-чи', 2: '-чи', 3: '-чү', 4: '-чү', 5: '-чи', 6: '-чы', 7: '-чи', 8: '-чи', 9: '-чу', 10: '-чу', 20: '-чы', 30: '-чу', 40: '-чы', 50: '-чү', 60: '-чы', 70: '-чи', 80: '-чи', 90: '-чу', 100: '-чү' }; e.defineLocale('ky', { months: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_'), monthsShort: 'янв_фев_март_апр_май_июнь_июль_авг_сен_окт_ноя_дек'.split('_'), weekdays: 'Жекшемби_Дүйшөмбү_Шейшемби_Шаршемби_Бейшемби_Жума_Ишемби'.split('_'), weekdaysShort: 'Жек_Дүй_Шей_Шар_Бей_Жум_Ише'.split('_'), weekdaysMin: 'Жк_Дй_Шй_Шр_Бй_Жм_Иш'.split('_'), longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'DD.MM.YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY HH:mm', LLLL: 'dddd, D MMMM YYYY HH:mm' }, calendar: { sameDay: '[Бүгүн саат] LT', nextDay: '[Эртең саат] LT', nextWeek: 'dddd [саат] LT', lastDay: '[Кечээ саат] LT', lastWeek: '[Өткөн аптанын] dddd [күнү] [саат] LT', sameElse: 'L' }, relativeTime: { future: '%s ичинде', past: '%s мурун', s: 'бирнече секунд', ss: '%d секунд', m: 'бир мүнөт', mm: '%d мүнөт', h: 'бир саат', hh: '%d саат', d: 'бир күн', dd: '%d күн', M: 'бир ай', MM: '%d ай', y: 'бир жыл', yy: '%d жыл' }, dayOfMonthOrdinalParse: /\d{1,2}-(чи|чы|чү|чу)/, ordinal (e) { return e + (t[e] || t[e % 10] || t[e >= 100 ? 100 : null]) }, week: { dow: 1, doy: 7 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; function t (e, t, n, r) { const o = { m: ['eng Minutt', 'enger Minutt'], h: ['eng Stonn', 'enger Stonn'], d: ['een Dag', 'engem Dag'], M: ['ee Mount', 'engem Mount'], y: ['ee Joer', 'engem Joer'] }; return t ? o[n][0] : o[n][1] } function n (e) { if (e = parseInt(e, 10), isNaN(e)) { return !1 } if (e < 0) { return !0 } if (e < 10) { return e >= 4 && e <= 7 } if (e < 100) { const t = e % 10; return n(t === 0 ? e / 10 : t) } if (e < 1e4) { for (;e >= 10;) { e /= 10 } return n(e) } return n(e /= 1e3) }e.defineLocale('lb', { months: 'Januar_Februar_Mäerz_Abrëll_Mee_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'), monthsShort: 'Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'), monthsParseExact: !0, weekdays: 'Sonndeg_Méindeg_Dënschdeg_Mëttwoch_Donneschdeg_Freideg_Samschdeg'.split('_'), weekdaysShort: 'So._Mé._Dë._Më._Do._Fr._Sa.'.split('_'), weekdaysMin: 'So_Mé_Dë_Më_Do_Fr_Sa'.split('_'), weekdaysParseExact: !0, longDateFormat: { LT: 'H:mm [Auer]', LTS: 'H:mm:ss [Auer]', L: 'DD.MM.YYYY', LL: 'D. MMMM YYYY', LLL: 'D. MMMM YYYY H:mm [Auer]', LLLL: 'dddd, D. MMMM YYYY H:mm [Auer]' }, calendar: { sameDay: '[Haut um] LT', sameElse: 'L', nextDay: '[Muer um] LT', nextWeek: 'dddd [um] LT', lastDay: '[Gëschter um] LT', lastWeek () { switch (this.day()) { case 2:case 4:return '[Leschten] dddd [um] LT'; default:return '[Leschte] dddd [um] LT' } } }, relativeTime: { future (e) { return n(e.substr(0, e.indexOf(' '))) ? 'a ' + e : 'an ' + e }, past (e) { return n(e.substr(0, e.indexOf(' '))) ? 'viru ' + e : 'virun ' + e }, s: 'e puer Sekonnen', ss: '%d Sekonnen', m: t, mm: '%d Minutten', h: t, hh: '%d Stonnen', d: t, dd: '%d Deeg', M: t, MM: '%d Méint', y: t, yy: '%d Joer' }, dayOfMonthOrdinalParse: /\d{1,2}\./, ordinal: '%d.', week: { dow: 1, doy: 4 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; e.defineLocale('lo', { months: 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split('_'), monthsShort: 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split('_'), weekdays: 'ອາທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'), weekdaysShort: 'ທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'), weekdaysMin: 'ທ_ຈ_ອຄ_ພ_ພຫ_ສກ_ສ'.split('_'), weekdaysParseExact: !0, longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'DD/MM/YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY HH:mm', LLLL: 'ວັນdddd D MMMM YYYY HH:mm' }, meridiemParse: /ຕອນເຊົ້າ|ຕອນແລງ/, isPM (input) { return input === 'ຕອນແລງ' }, meridiem (e, t, n) { return e < 12 ? 'ຕອນເຊົ້າ' : 'ຕອນແລງ' }, calendar: { sameDay: '[ມື້ນີ້ເວລາ] LT', nextDay: '[ມື້ອື່ນເວລາ] LT', nextWeek: '[ວັນ]dddd[ໜ້າເວລາ] LT', lastDay: '[ມື້ວານນີ້ເວລາ] LT', lastWeek: '[ວັນ]dddd[ແລ້ວນີ້ເວລາ] LT', sameElse: 'L' }, relativeTime: { future: 'ອີກ %s', past: '%sຜ່ານມາ', s: 'ບໍ່ເທົ່າໃດວິນາທີ', ss: '%d ວິນາທີ', m: '1 ນາທີ', mm: '%d ນາທີ', h: '1 ຊົ່ວໂມງ', hh: '%d ຊົ່ວໂມງ', d: '1 ມື້', dd: '%d ມື້', M: '1 ເດືອນ', MM: '%d ເດືອນ', y: '1 ປີ', yy: '%d ປີ' }, dayOfMonthOrdinalParse: /(ທີ່)\d{1,2}/, ordinal (e) { return 'ທີ່' + e } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; const t = { ss: 'sekundė_sekundžių_sekundes', m: 'minutė_minutės_minutę', mm: 'minutės_minučių_minutes', h: 'valanda_valandos_valandą', hh: 'valandos_valandų_valandas', d: 'diena_dienos_dieną', dd: 'dienos_dienų_dienas', M: 'mėnuo_mėnesio_mėnesį', MM: 'mėnesiai_mėnesių_mėnesius', y: 'metai_metų_metus', yy: 'metai_metų_metus' }; function n (e, t, n, r) { return t ? o(n)[0] : r ? o(n)[1] : o(n)[2] } function r (e) { return e % 10 == 0 || e > 10 && e < 20 } function o (e) { return t[e].split('_') } function d (e, t, d, _) { const l = e + ' '; return e === 1 ? l + n(0, t, d[0], _) : t ? l + (r(e) ? o(d)[1] : o(d)[0]) : _ ? l + o(d)[1] : l + (r(e) ? o(d)[1] : o(d)[2]) }e.defineLocale('lt', { months: { format: 'sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio'.split('_'), standalone: 'sausis_vasaris_kovas_balandis_gegužė_birželis_liepa_rugpjūtis_rugsėjis_spalis_lapkritis_gruodis'.split('_'), isFormat: /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?|MMMM?(\[[^\[\]]*\]|\s)+D[oD]?/ }, monthsShort: 'sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd'.split('_'), weekdays: { format: 'sekmadienį_pirmadienį_antradienį_trečiadienį_ketvirtadienį_penktadienį_šeštadienį'.split('_'), standalone: 'sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis'.split('_'), isFormat: /dddd HH:mm/ }, weekdaysShort: 'Sek_Pir_Ant_Tre_Ket_Pen_Šeš'.split('_'), weekdaysMin: 'S_P_A_T_K_Pn_Š'.split('_'), weekdaysParseExact: !0, longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'YYYY-MM-DD', LL: 'YYYY [m.] MMMM D [d.]', LLL: 'YYYY [m.] MMMM D [d.], HH:mm [val.]', LLLL: 'YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]', l: 'YYYY-MM-DD', ll: 'YYYY [m.] MMMM D [d.]', lll: 'YYYY [m.] MMMM D [d.], HH:mm [val.]', llll: 'YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]' }, calendar: { sameDay: '[Šiandien] LT', nextDay: '[Rytoj] LT', nextWeek: 'dddd LT', lastDay: '[Vakar] LT', lastWeek: '[Praėjusį] dddd LT', sameElse: 'L' }, relativeTime: { future: 'po %s', past: 'prieš %s', s (e, t, n, r) { return t ? 'kelios sekundės' : r ? 'kelių sekundžių' : 'kelias sekundes' }, ss: d, m: n, mm: d, h: n, hh: d, d: n, dd: d, M: n, MM: d, y: n, yy: d }, dayOfMonthOrdinalParse: /\d{1,2}-oji/, ordinal (e) { return e + '-oji' }, week: { dow: 1, doy: 4 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; const t = { ss: 'sekundes_sekundēm_sekunde_sekundes'.split('_'), m: 'minūtes_minūtēm_minūte_minūtes'.split('_'), mm: 'minūtes_minūtēm_minūte_minūtes'.split('_'), h: 'stundas_stundām_stunda_stundas'.split('_'), hh: 'stundas_stundām_stunda_stundas'.split('_'), d: 'dienas_dienām_diena_dienas'.split('_'), dd: 'dienas_dienām_diena_dienas'.split('_'), M: 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'), MM: 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'), y: 'gada_gadiem_gads_gadi'.split('_'), yy: 'gada_gadiem_gads_gadi'.split('_') }; function n (e, t, n) { return n ? t % 10 == 1 && t % 100 != 11 ? e[2] : e[3] : t % 10 == 1 && t % 100 != 11 ? e[0] : e[1] } function r (e, r, o) { return e + ' ' + n(t[o], e, r) } function o (e, r, o) { return n(t[o], e, r) }e.defineLocale('lv', { months: 'janvāris_februāris_marts_aprīlis_maijs_jūnijs_jūlijs_augusts_septembris_oktobris_novembris_decembris'.split('_'), monthsShort: 'jan_feb_mar_apr_mai_jūn_jūl_aug_sep_okt_nov_dec'.split('_'), weekdays: 'svētdiena_pirmdiena_otrdiena_trešdiena_ceturtdiena_piektdiena_sestdiena'.split('_'), weekdaysShort: 'Sv_P_O_T_C_Pk_S'.split('_'), weekdaysMin: 'Sv_P_O_T_C_Pk_S'.split('_'), weekdaysParseExact: !0, longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'DD.MM.YYYY.', LL: 'YYYY. [gada] D. MMMM', LLL: 'YYYY. [gada] D. MMMM, HH:mm', LLLL: 'YYYY. [gada] D. MMMM, dddd, HH:mm' }, calendar: { sameDay: '[Šodien pulksten] LT', nextDay: '[Rīt pulksten] LT', nextWeek: 'dddd [pulksten] LT', lastDay: '[Vakar pulksten] LT', lastWeek: '[Pagājušā] dddd [pulksten] LT', sameElse: 'L' }, relativeTime: { future: 'pēc %s', past: 'pirms %s', s (e, t) { return t ? 'dažas sekundes' : 'dažām sekundēm' }, ss: r, m: o, mm: r, h: o, hh: r, d: o, dd: r, M: o, MM: r, y: o, yy: r }, dayOfMonthOrdinalParse: /\d{1,2}\./, ordinal: '%d.', week: { dow: 1, doy: 4 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; var t = { words: { ss: ['sekund', 'sekunda', 'sekundi'], m: ['jedan minut', 'jednog minuta'], mm: ['minut', 'minuta', 'minuta'], h: ['jedan sat', 'jednog sata'], hh: ['sat', 'sata', 'sati'], dd: ['dan', 'dana', 'dana'], MM: ['mjesec', 'mjeseca', 'mjeseci'], yy: ['godina', 'godine', 'godina'] }, correctGrammaticalCase (e, t) { return e === 1 ? t[0] : e >= 2 && e <= 4 ? t[1] : t[2] }, translate (e, n, r) { const o = t.words[r]; return r.length === 1 ? n ? o[0] : o[1] : e + ' ' + t.correctGrammaticalCase(e, o) } }; e.defineLocale('me', { months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split('_'), monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split('_'), monthsParseExact: !0, weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'), weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'), weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'), weekdaysParseExact: !0, longDateFormat: { LT: 'H:mm', LTS: 'H:mm:ss', L: 'DD.MM.YYYY', LL: 'D. MMMM YYYY', LLL: 'D. MMMM YYYY H:mm', LLLL: 'dddd, D. MMMM YYYY H:mm' }, calendar: { sameDay: '[danas u] LT', nextDay: '[sjutra u] LT', nextWeek () { switch (this.day()) { case 0:return '[u] [nedjelju] [u] LT'; case 3:return '[u] [srijedu] [u] LT'; case 6:return '[u] [subotu] [u] LT'; case 1:case 2:case 4:case 5:return '[u] dddd [u] LT' } }, lastDay: '[juče u] LT', lastWeek () { return ['[prošle] [nedjelje] [u] LT', '[prošlog] [ponedjeljka] [u] LT', '[prošlog] [utorka] [u] LT', '[prošle] [srijede] [u] LT', '[prošlog] [četvrtka] [u] LT', '[prošlog] [petka] [u] LT', '[prošle] [subote] [u] LT'][this.day()] }, sameElse: 'L' }, relativeTime: { future: 'za %s', past: 'prije %s', s: 'nekoliko sekundi', ss: t.translate, m: t.translate, mm: t.translate, h: t.translate, hh: t.translate, d: 'dan', dd: t.translate, M: 'mjesec', MM: t.translate, y: 'godinu', yy: t.translate }, dayOfMonthOrdinalParse: /\d{1,2}\./, ordinal: '%d.', week: { dow: 1, doy: 7 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; e.defineLocale('mi', { months: 'Kohi-tāte_Hui-tanguru_Poutū-te-rangi_Paenga-whāwhā_Haratua_Pipiri_Hōngoingoi_Here-turi-kōkā_Mahuru_Whiringa-ā-nuku_Whiringa-ā-rangi_Hakihea'.split('_'), monthsShort: 'Kohi_Hui_Pou_Pae_Hara_Pipi_Hōngoi_Here_Mahu_Whi-nu_Whi-ra_Haki'.split('_'), monthsRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i, monthsStrictRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i, monthsShortRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i, monthsShortStrictRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,2}/i, weekdays: 'Rātapu_Mane_Tūrei_Wenerei_Tāite_Paraire_Hātarei'.split('_'), weekdaysShort: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'), weekdaysMin: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'), longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'DD/MM/YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY [i] HH:mm', LLLL: 'dddd, D MMMM YYYY [i] HH:mm' }, calendar: { sameDay: '[i teie mahana, i] LT', nextDay: '[apopo i] LT', nextWeek: 'dddd [i] LT', lastDay: '[inanahi i] LT', lastWeek: 'dddd [whakamutunga i] LT', sameElse: 'L' }, relativeTime: { future: 'i roto i %s', past: '%s i mua', s: 'te hēkona ruarua', ss: '%d hēkona', m: 'he meneti', mm: '%d meneti', h: 'te haora', hh: '%d haora', d: 'he ra', dd: '%d ra', M: 'he marama', MM: '%d marama', y: 'he tau', yy: '%d tau' }, dayOfMonthOrdinalParse: /\d{1,2}º/, ordinal: '%dº', week: { dow: 1, doy: 4 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; e.defineLocale('mk', { months: 'јануари_февруари_март_април_мај_јуни_јули_август_септември_октомври_ноември_декември'.split('_'), monthsShort: 'јан_фев_мар_апр_мај_јун_јул_авг_сеп_окт_ное_дек'.split('_'), weekdays: 'недела_понеделник_вторник_среда_четврток_петок_сабота'.split('_'), weekdaysShort: 'нед_пон_вто_сре_чет_пет_саб'.split('_'), weekdaysMin: 'нe_пo_вт_ср_че_пе_сa'.split('_'), longDateFormat: { LT: 'H:mm', LTS: 'H:mm:ss', L: 'D.MM.YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY H:mm', LLLL: 'dddd, D MMMM YYYY H:mm' }, calendar: { sameDay: '[Денес во] LT', nextDay: '[Утре во] LT', nextWeek: '[Во] dddd [во] LT', lastDay: '[Вчера во] LT', lastWeek () { switch (this.day()) { case 0:case 3:case 6:return '[Изминатата] dddd [во] LT'; case 1:case 2:case 4:case 5:return '[Изминатиот] dddd [во] LT' } }, sameElse: 'L' }, relativeTime: { future: 'за %s', past: 'пред %s', s: 'неколку секунди', ss: '%d секунди', m: 'една минута', mm: '%d минути', h: 'еден час', hh: '%d часа', d: 'еден ден', dd: '%d дена', M: 'еден месец', MM: '%d месеци', y: 'една година', yy: '%d години' }, dayOfMonthOrdinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/, ordinal (e) { const t = e % 10; const n = e % 100; return e === 0 ? e + '-ев' : n === 0 ? e + '-ен' : n > 10 && n < 20 ? e + '-ти' : t === 1 ? e + '-ви' : t === 2 ? e + '-ри' : t === 7 || t === 8 ? e + '-ми' : e + '-ти' }, week: { dow: 1, doy: 7 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; e.defineLocale('ml', { months: 'ജനുവരി_ഫെബ്രുവരി_മാർച്ച്_ഏപ്രിൽ_മേയ്_ജൂൺ_ജൂലൈ_ഓഗസ്റ്റ്_സെപ്റ്റംബർ_ഒക്ടോബർ_നവംബർ_ഡിസംബർ'.split('_'), monthsShort: 'ജനു._ഫെബ്രു._മാർ._ഏപ്രി._മേയ്_ജൂൺ_ജൂലൈ._ഓഗ._സെപ്റ്റ._ഒക്ടോ._നവം._ഡിസം.'.split('_'), monthsParseExact: !0, weekdays: 'ഞായറാഴ്ച_തിങ്കളാഴ്ച_ചൊവ്വാഴ്ച_ബുധനാഴ്ച_വ്യാഴാഴ്ച_വെള്ളിയാഴ്ച_ശനിയാഴ്ച'.split('_'), weekdaysShort: 'ഞായർ_തിങ്കൾ_ചൊവ്വ_ബുധൻ_വ്യാഴം_വെള്ളി_ശനി'.split('_'), weekdaysMin: 'ഞാ_തി_ചൊ_ബു_വ്യാ_വെ_ശ'.split('_'), longDateFormat: { LT: 'A h:mm -നു', LTS: 'A h:mm:ss -നു', L: 'DD/MM/YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY, A h:mm -നു', LLLL: 'dddd, D MMMM YYYY, A h:mm -നു' }, calendar: { sameDay: '[ഇന്ന്] LT', nextDay: '[നാളെ] LT', nextWeek: 'dddd, LT', lastDay: '[ഇന്നലെ] LT', lastWeek: '[കഴിഞ്ഞ] dddd, LT', sameElse: 'L' }, relativeTime: { future: '%s കഴിഞ്ഞ്', past: '%s മുൻപ്', s: 'അൽപ നിമിഷങ്ങൾ', ss: '%d സെക്കൻഡ്', m: 'ഒരു മിനിറ്റ്', mm: '%d മിനിറ്റ്', h: 'ഒരു മണിക്കൂർ', hh: '%d മണിക്കൂർ', d: 'ഒരു ദിവസം', dd: '%d ദിവസം', M: 'ഒരു മാസം', MM: '%d മാസം', y: 'ഒരു വർഷം', yy: '%d വർഷം' }, meridiemParse: /രാത്രി|രാവിലെ|ഉച്ച കഴിഞ്ഞ്|വൈകുന്നേരം|രാത്രി/i, meridiemHour (e, t) { return e === 12 && (e = 0), t === 'രാത്രി' && e >= 4 || t === 'ഉച്ച കഴിഞ്ഞ്' || t === 'വൈകുന്നേരം' ? e + 12 : e }, meridiem (e, t, n) { return e < 4 ? 'രാത്രി' : e < 12 ? 'രാവിലെ' : e < 17 ? 'ഉച്ച കഴിഞ്ഞ്' : e < 20 ? 'വൈകുന്നേരം' : 'രാത്രി' } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; function t (e, t, n, r) { switch (n) { case 's':return t ? 'хэдхэн секунд' : 'хэдхэн секундын'; case 'ss':return e + (t ? ' секунд' : ' секундын'); case 'm':case 'mm':return e + (t ? ' минут' : ' минутын'); case 'h':case 'hh':return e + (t ? ' цаг' : ' цагийн'); case 'd':case 'dd':return e + (t ? ' өдөр' : ' өдрийн'); case 'M':case 'MM':return e + (t ? ' сар' : ' сарын'); case 'y':case 'yy':return e + (t ? ' жил' : ' жилийн'); default:return e } }e.defineLocale('mn', { months: 'Нэгдүгээр сар_Хоёрдугаар сар_Гуравдугаар сар_Дөрөвдүгээр сар_Тавдугаар сар_Зургадугаар сар_Долдугаар сар_Наймдугаар сар_Есдүгээр сар_Аравдугаар сар_Арван нэгдүгээр сар_Арван хоёрдугаар сар'.split('_'), monthsShort: '1 сар_2 сар_3 сар_4 сар_5 сар_6 сар_7 сар_8 сар_9 сар_10 сар_11 сар_12 сар'.split('_'), monthsParseExact: !0, weekdays: 'Ням_Даваа_Мягмар_Лхагва_Пүрэв_Баасан_Бямба'.split('_'), weekdaysShort: 'Ням_Дав_Мяг_Лха_Пүр_Баа_Бям'.split('_'), weekdaysMin: 'Ня_Да_Мя_Лх_Пү_Ба_Бя'.split('_'), weekdaysParseExact: !0, longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'YYYY-MM-DD', LL: 'YYYY оны MMMMын D', LLL: 'YYYY оны MMMMын D HH:mm', LLLL: 'dddd, YYYY оны MMMMын D HH:mm' }, meridiemParse: /ҮӨ|ҮХ/i, isPM (input) { return input === 'ҮХ' }, meridiem (e, t, n) { return e < 12 ? 'ҮӨ' : 'ҮХ' }, calendar: { sameDay: '[Өнөөдөр] LT', nextDay: '[Маргааш] LT', nextWeek: '[Ирэх] dddd LT', lastDay: '[Өчигдөр] LT', lastWeek: '[Өнгөрсөн] dddd LT', sameElse: 'L' }, relativeTime: { future: '%s дараа', past: '%s өмнө', s: t, ss: t, m: t, mm: t, h: t, hh: t, d: t, dd: t, M: t, MM: t, y: t, yy: t }, dayOfMonthOrdinalParse: /\d{1,2} өдөр/, ordinal (e, t) { switch (t) { case 'd':case 'D':case 'DDD':return e + ' өдөр'; default:return e } } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; const t = { 1: '१', 2: '२', 3: '३', 4: '४', 5: '५', 6: '६', 7: '७', 8: '८', 9: '९', 0: '०' }; const n = { '१': '1', '२': '2', '३': '3', '४': '4', '५': '5', '६': '6', '७': '7', '८': '8', '९': '9', '०': '0' }; function r (e, t, n, r) { let output = ''; if (t) { switch (n) { case 's':output = 'काही सेकंद'; break; case 'ss':output = '%d सेकंद'; break; case 'm':output = 'एक मिनिट'; break; case 'mm':output = '%d मिनिटे'; break; case 'h':output = 'एक तास'; break; case 'hh':output = '%d तास'; break; case 'd':output = 'एक दिवस'; break; case 'dd':output = '%d दिवस'; break; case 'M':output = 'एक महिना'; break; case 'MM':output = '%d महिने'; break; case 'y':output = 'एक वर्ष'; break; case 'yy':output = '%d वर्षे' } } else { switch (n) { case 's':output = 'काही सेकंदां'; break; case 'ss':output = '%d सेकंदां'; break; case 'm':output = 'एका मिनिटा'; break; case 'mm':output = '%d मिनिटां'; break; case 'h':output = 'एका तासा'; break; case 'hh':output = '%d तासां'; break; case 'd':output = 'एका दिवसा'; break; case 'dd':output = '%d दिवसां'; break; case 'M':output = 'एका महिन्या'; break; case 'MM':output = '%d महिन्यां'; break; case 'y':output = 'एका वर्षा'; break; case 'yy':output = '%d वर्षां' } } return output.replace(/%d/i, e) }e.defineLocale('mr', { months: 'जानेवारी_फेब्रुवारी_मार्च_एप्रिल_मे_जून_जुलै_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर'.split('_'), monthsShort: 'जाने._फेब्रु._मार्च._एप्रि._मे._जून._जुलै._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.'.split('_'), monthsParseExact: !0, weekdays: 'रविवार_सोमवार_मंगळवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'), weekdaysShort: 'रवि_सोम_मंगळ_बुध_गुरू_शुक्र_शनि'.split('_'), weekdaysMin: 'र_सो_मं_बु_गु_शु_श'.split('_'), longDateFormat: { LT: 'A h:mm वाजता', LTS: 'A h:mm:ss वाजता', L: 'DD/MM/YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY, A h:mm वाजता', LLLL: 'dddd, D MMMM YYYY, A h:mm वाजता' }, calendar: { sameDay: '[आज] LT', nextDay: '[उद्या] LT', nextWeek: 'dddd, LT', lastDay: '[काल] LT', lastWeek: '[मागील] dddd, LT', sameElse: 'L' }, relativeTime: { future: '%sमध्ये', past: '%sपूर्वी', s: r, ss: r, m: r, mm: r, h: r, hh: r, d: r, dd: r, M: r, MM: r, y: r, yy: r }, preparse (e) { return e.replace(/[१२३४५६७८९०]/g, function (e) { return n[e] }) }, postformat (e) { return e.replace(/\d/g, function (e) { return t[e] }) }, meridiemParse: /पहाटे|सकाळी|दुपारी|सायंकाळी|रात्री/, meridiemHour (e, t) { return e === 12 && (e = 0), t === 'पहाटे' || t === 'सकाळी' ? e : t === 'दुपारी' || t === 'सायंकाळी' || t === 'रात्री' ? e >= 12 ? e : e + 12 : void 0 }, meridiem (e, t, n) { return e >= 0 && e < 6 ? 'पहाटे' : e < 12 ? 'सकाळी' : e < 17 ? 'दुपारी' : e < 20 ? 'सायंकाळी' : 'रात्री' }, week: { dow: 0, doy: 6 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; e.defineLocale('ms', { months: 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'), monthsShort: 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'), weekdays: 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'), weekdaysShort: 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'), weekdaysMin: 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'), longDateFormat: { LT: 'HH.mm', LTS: 'HH.mm.ss', L: 'DD/MM/YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY [pukul] HH.mm', LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm' }, meridiemParse: /pagi|tengahari|petang|malam/, meridiemHour (e, t) { return e === 12 && (e = 0), t === 'pagi' ? e : t === 'tengahari' ? e >= 11 ? e : e + 12 : t === 'petang' || t === 'malam' ? e + 12 : void 0 }, meridiem (e, t, n) { return e < 11 ? 'pagi' : e < 15 ? 'tengahari' : e < 19 ? 'petang' : 'malam' }, calendar: { sameDay: '[Hari ini pukul] LT', nextDay: '[Esok pukul] LT', nextWeek: 'dddd [pukul] LT', lastDay: '[Kelmarin pukul] LT', lastWeek: 'dddd [lepas pukul] LT', sameElse: 'L' }, relativeTime: { future: 'dalam %s', past: '%s yang lepas', s: 'beberapa saat', ss: '%d saat', m: 'seminit', mm: '%d minit', h: 'sejam', hh: '%d jam', d: 'sehari', dd: '%d hari', M: 'sebulan', MM: '%d bulan', y: 'setahun', yy: '%d tahun' }, week: { dow: 1, doy: 7 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; e.defineLocale('ms-my', { months: 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'), monthsShort: 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'), weekdays: 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'), weekdaysShort: 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'), weekdaysMin: 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'), longDateFormat: { LT: 'HH.mm', LTS: 'HH.mm.ss', L: 'DD/MM/YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY [pukul] HH.mm', LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm' }, meridiemParse: /pagi|tengahari|petang|malam/, meridiemHour (e, t) { return e === 12 && (e = 0), t === 'pagi' ? e : t === 'tengahari' ? e >= 11 ? e : e + 12 : t === 'petang' || t === 'malam' ? e + 12 : void 0 }, meridiem (e, t, n) { return e < 11 ? 'pagi' : e < 15 ? 'tengahari' : e < 19 ? 'petang' : 'malam' }, calendar: { sameDay: '[Hari ini pukul] LT', nextDay: '[Esok pukul] LT', nextWeek: 'dddd [pukul] LT', lastDay: '[Kelmarin pukul] LT', lastWeek: 'dddd [lepas pukul] LT', sameElse: 'L' }, relativeTime: { future: 'dalam %s', past: '%s yang lepas', s: 'beberapa saat', ss: '%d saat', m: 'seminit', mm: '%d minit', h: 'sejam', hh: '%d jam', d: 'sehari', dd: '%d hari', M: 'sebulan', MM: '%d bulan', y: 'setahun', yy: '%d tahun' }, week: { dow: 1, doy: 7 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; e.defineLocale('mt', { months: 'Jannar_Frar_Marzu_April_Mejju_Ġunju_Lulju_Awwissu_Settembru_Ottubru_Novembru_Diċembru'.split('_'), monthsShort: 'Jan_Fra_Mar_Apr_Mej_Ġun_Lul_Aww_Set_Ott_Nov_Diċ'.split('_'), weekdays: 'Il-Ħadd_It-Tnejn_It-Tlieta_L-Erbgħa_Il-Ħamis_Il-Ġimgħa_Is-Sibt'.split('_'), weekdaysShort: 'Ħad_Tne_Tli_Erb_Ħam_Ġim_Sib'.split('_'), weekdaysMin: 'Ħa_Tn_Tl_Er_Ħa_Ġi_Si'.split('_'), longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'DD/MM/YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY HH:mm', LLLL: 'dddd, D MMMM YYYY HH:mm' }, calendar: { sameDay: '[Illum fil-]LT', nextDay: '[Għada fil-]LT', nextWeek: 'dddd [fil-]LT', lastDay: '[Il-bieraħ fil-]LT', lastWeek: 'dddd [li għadda] [fil-]LT', sameElse: 'L' }, relativeTime: { future: 'f’ %s', past: '%s ilu', s: 'ftit sekondi', ss: '%d sekondi', m: 'minuta', mm: '%d minuti', h: 'siegħa', hh: '%d siegħat', d: 'ġurnata', dd: '%d ġranet', M: 'xahar', MM: '%d xhur', y: 'sena', yy: '%d sni' }, dayOfMonthOrdinalParse: /\d{1,2}º/, ordinal: '%dº', week: { dow: 1, doy: 4 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; const t = { 1: '၁', 2: '၂', 3: '၃', 4: '၄', 5: '၅', 6: '၆', 7: '၇', 8: '၈', 9: '၉', 0: '၀' }; const n = { '၁': '1', '၂': '2', '၃': '3', '၄': '4', '၅': '5', '၆': '6', '၇': '7', '၈': '8', '၉': '9', '၀': '0' }; e.defineLocale('my', { months: 'ဇန်နဝါရီ_ဖေဖော်ဝါရီ_မတ်_ဧပြီ_မေ_ဇွန်_ဇူလိုင်_သြဂုတ်_စက်တင်ဘာ_အောက်တိုဘာ_နိုဝင်ဘာ_ဒီဇင်ဘာ'.split('_'), monthsShort: 'ဇန်_ဖေ_မတ်_ပြီ_မေ_ဇွန်_လိုင်_သြ_စက်_အောက်_နို_ဒီ'.split('_'), weekdays: 'တနင်္ဂနွေ_တနင်္လာ_အင်္ဂါ_ဗုဒ္ဓဟူး_ကြာသပတေး_သောကြာ_စနေ'.split('_'), weekdaysShort: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'), weekdaysMin: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'), longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'DD/MM/YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY HH:mm', LLLL: 'dddd D MMMM YYYY HH:mm' }, calendar: { sameDay: '[ယနေ.] LT [မှာ]', nextDay: '[မနက်ဖြန်] LT [မှာ]', nextWeek: 'dddd LT [မှာ]', lastDay: '[မနေ.က] LT [မှာ]', lastWeek: '[ပြီးခဲ့သော] dddd LT [မှာ]', sameElse: 'L' }, relativeTime: { future: 'လာမည့် %s မှာ', past: 'လွန်ခဲ့သော %s က', s: 'စက္ကန်.အနည်းငယ်', ss: '%d စက္ကန့်', m: 'တစ်မိနစ်', mm: '%d မိနစ်', h: 'တစ်နာရီ', hh: '%d နာရီ', d: 'တစ်ရက်', dd: '%d ရက်', M: 'တစ်လ', MM: '%d လ', y: 'တစ်နှစ်', yy: '%d နှစ်' }, preparse (e) { return e.replace(/[၁၂၃၄၅၆၇၈၉၀]/g, function (e) { return n[e] }) }, postformat (e) { return e.replace(/\d/g, function (e) { return t[e] }) }, week: { dow: 1, doy: 4 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; e.defineLocale('nb', { months: 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'), monthsShort: 'jan._feb._mars_apr._mai_juni_juli_aug._sep._okt._nov._des.'.split('_'), monthsParseExact: !0, weekdays: 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'), weekdaysShort: 'sø._ma._ti._on._to._fr._lø.'.split('_'), weekdaysMin: 'sø_ma_ti_on_to_fr_lø'.split('_'), weekdaysParseExact: !0, longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'DD.MM.YYYY', LL: 'D. MMMM YYYY', LLL: 'D. MMMM YYYY [kl.] HH:mm', LLLL: 'dddd D. MMMM YYYY [kl.] HH:mm' }, calendar: { sameDay: '[i dag kl.] LT', nextDay: '[i morgen kl.] LT', nextWeek: 'dddd [kl.] LT', lastDay: '[i går kl.] LT', lastWeek: '[forrige] dddd [kl.] LT', sameElse: 'L' }, relativeTime: { future: 'om %s', past: '%s siden', s: 'noen sekunder', ss: '%d sekunder', m: 'ett minutt', mm: '%d minutter', h: 'en time', hh: '%d timer', d: 'en dag', dd: '%d dager', M: 'en måned', MM: '%d måneder', y: 'ett år', yy: '%d år' }, dayOfMonthOrdinalParse: /\d{1,2}\./, ordinal: '%d.', week: { dow: 1, doy: 4 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; const t = { 1: '१', 2: '२', 3: '३', 4: '४', 5: '५', 6: '६', 7: '७', 8: '८', 9: '९', 0: '०' }; const n = { '१': '1', '२': '2', '३': '3', '४': '4', '५': '5', '६': '6', '७': '7', '८': '8', '९': '9', '०': '0' }; e.defineLocale('ne', { months: 'जनवरी_फेब्रुवरी_मार्च_अप्रिल_मई_जुन_जुलाई_अगष्ट_सेप्टेम्बर_अक्टोबर_नोभेम्बर_डिसेम्बर'.split('_'), monthsShort: 'जन._फेब्रु._मार्च_अप्रि._मई_जुन_जुलाई._अग._सेप्ट._अक्टो._नोभे._डिसे.'.split('_'), monthsParseExact: !0, weekdays: 'आइतबार_सोमबार_मङ्गलबार_बुधबार_बिहिबार_शुक्रबार_शनिबार'.split('_'), weekdaysShort: 'आइत._सोम._मङ्गल._बुध._बिहि._शुक्र._शनि.'.split('_'), weekdaysMin: 'आ._सो._मं._बु._बि._शु._श.'.split('_'), weekdaysParseExact: !0, longDateFormat: { LT: 'Aको h:mm बजे', LTS: 'Aको h:mm:ss बजे', L: 'DD/MM/YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY, Aको h:mm बजे', LLLL: 'dddd, D MMMM YYYY, Aको h:mm बजे' }, preparse (e) { return e.replace(/[१२३४५६७८९०]/g, function (e) { return n[e] }) }, postformat (e) { return e.replace(/\d/g, function (e) { return t[e] }) }, meridiemParse: /राति|बिहान|दिउँसो|साँझ/, meridiemHour (e, t) { return e === 12 && (e = 0), t === 'राति' ? e < 4 ? e : e + 12 : t === 'बिहान' ? e : t === 'दिउँसो' ? e >= 10 ? e : e + 12 : t === 'साँझ' ? e + 12 : void 0 }, meridiem (e, t, n) { return e < 3 ? 'राति' : e < 12 ? 'बिहान' : e < 16 ? 'दिउँसो' : e < 20 ? 'साँझ' : 'राति' }, calendar: { sameDay: '[आज] LT', nextDay: '[भोलि] LT', nextWeek: '[आउँदो] dddd[,] LT', lastDay: '[हिजो] LT', lastWeek: '[गएको] dddd[,] LT', sameElse: 'L' }, relativeTime: { future: '%sमा', past: '%s अगाडि', s: 'केही क्षण', ss: '%d सेकेण्ड', m: 'एक मिनेट', mm: '%d मिनेट', h: 'एक घण्टा', hh: '%d घण्टा', d: 'एक दिन', dd: '%d दिन', M: 'एक महिना', MM: '%d महिना', y: 'एक बर्ष', yy: '%d बर्ष' }, week: { dow: 0, doy: 6 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; const t = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_'); const n = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_'); const r = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i]; const o = /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december|jan\.?|feb\.?|mrt\.?|apr\.?|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i; e.defineLocale('nl', { months: 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'), monthsShort (e, r) { return e ? /-MMM-/.test(r) ? n[e.month()] : t[e.month()] : t }, monthsRegex: o, monthsShortRegex: o, monthsStrictRegex: /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december)/i, monthsShortStrictRegex: /^(jan\.?|feb\.?|mrt\.?|apr\.?|mei|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i, monthsParse: r, longMonthsParse: r, shortMonthsParse: r, weekdays: 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'), weekdaysShort: 'zo._ma._di._wo._do._vr._za.'.split('_'), weekdaysMin: 'zo_ma_di_wo_do_vr_za'.split('_'), weekdaysParseExact: !0, longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'DD-MM-YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY HH:mm', LLLL: 'dddd D MMMM YYYY HH:mm' }, calendar: { sameDay: '[vandaag om] LT', nextDay: '[morgen om] LT', nextWeek: 'dddd [om] LT', lastDay: '[gisteren om] LT', lastWeek: '[afgelopen] dddd [om] LT', sameElse: 'L' }, relativeTime: { future: 'over %s', past: '%s geleden', s: 'een paar seconden', ss: '%d seconden', m: 'één minuut', mm: '%d minuten', h: 'één uur', hh: '%d uur', d: 'één dag', dd: '%d dagen', M: 'één maand', MM: '%d maanden', y: 'één jaar', yy: '%d jaar' }, dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/, ordinal (e) { return e + (e === 1 || e === 8 || e >= 20 ? 'ste' : 'de') }, week: { dow: 1, doy: 4 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; const t = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_'); const n = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_'); const r = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i]; const o = /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december|jan\.?|feb\.?|mrt\.?|apr\.?|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i; e.defineLocale('nl-be', { months: 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'), monthsShort (e, r) { return e ? /-MMM-/.test(r) ? n[e.month()] : t[e.month()] : t }, monthsRegex: o, monthsShortRegex: o, monthsStrictRegex: /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december)/i, monthsShortStrictRegex: /^(jan\.?|feb\.?|mrt\.?|apr\.?|mei|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i, monthsParse: r, longMonthsParse: r, shortMonthsParse: r, weekdays: 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'), weekdaysShort: 'zo._ma._di._wo._do._vr._za.'.split('_'), weekdaysMin: 'zo_ma_di_wo_do_vr_za'.split('_'), weekdaysParseExact: !0, longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'DD/MM/YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY HH:mm', LLLL: 'dddd D MMMM YYYY HH:mm' }, calendar: { sameDay: '[vandaag om] LT', nextDay: '[morgen om] LT', nextWeek: 'dddd [om] LT', lastDay: '[gisteren om] LT', lastWeek: '[afgelopen] dddd [om] LT', sameElse: 'L' }, relativeTime: { future: 'over %s', past: '%s geleden', s: 'een paar seconden', ss: '%d seconden', m: 'één minuut', mm: '%d minuten', h: 'één uur', hh: '%d uur', d: 'één dag', dd: '%d dagen', M: 'één maand', MM: '%d maanden', y: 'één jaar', yy: '%d jaar' }, dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/, ordinal (e) { return e + (e === 1 || e === 8 || e >= 20 ? 'ste' : 'de') }, week: { dow: 1, doy: 4 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; e.defineLocale('nn', { months: 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'), monthsShort: 'jan._feb._mars_apr._mai_juni_juli_aug._sep._okt._nov._des.'.split('_'), monthsParseExact: !0, weekdays: 'sundag_måndag_tysdag_onsdag_torsdag_fredag_laurdag'.split('_'), weekdaysShort: 'su._må._ty._on._to._fr._lau.'.split('_'), weekdaysMin: 'su_må_ty_on_to_fr_la'.split('_'), weekdaysParseExact: !0, longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'DD.MM.YYYY', LL: 'D. MMMM YYYY', LLL: 'D. MMMM YYYY [kl.] H:mm', LLLL: 'dddd D. MMMM YYYY [kl.] HH:mm' }, calendar: { sameDay: '[I dag klokka] LT', nextDay: '[I morgon klokka] LT', nextWeek: 'dddd [klokka] LT', lastDay: '[I går klokka] LT', lastWeek: '[Føregåande] dddd [klokka] LT', sameElse: 'L' }, relativeTime: { future: 'om %s', past: '%s sidan', s: 'nokre sekund', ss: '%d sekund', m: 'eit minutt', mm: '%d minutt', h: 'ein time', hh: '%d timar', d: 'ein dag', dd: '%d dagar', M: 'ein månad', MM: '%d månader', y: 'eit år', yy: '%d år' }, dayOfMonthOrdinalParse: /\d{1,2}\./, ordinal: '%d.', week: { dow: 1, doy: 4 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; e.defineLocale('oc-lnc', { months: { standalone: 'genièr_febrièr_març_abril_mai_junh_julhet_agost_setembre_octòbre_novembre_decembre'.split('_'), format: "de genièr_de febrièr_de març_d'abril_de mai_de junh_de julhet_d'agost_de setembre_d'octòbre_de novembre_de decembre".split('_'), isFormat: /D[oD]?(\s)+MMMM/ }, monthsShort: 'gen._febr._març_abr._mai_junh_julh._ago._set._oct._nov._dec.'.split('_'), monthsParseExact: !0, weekdays: 'dimenge_diluns_dimars_dimècres_dijòus_divendres_dissabte'.split('_'), weekdaysShort: 'dg._dl._dm._dc._dj._dv._ds.'.split('_'), weekdaysMin: 'dg_dl_dm_dc_dj_dv_ds'.split('_'), weekdaysParseExact: !0, longDateFormat: { LT: 'H:mm', LTS: 'H:mm:ss', L: 'DD/MM/YYYY', LL: 'D MMMM [de] YYYY', ll: 'D MMM YYYY', LLL: 'D MMMM [de] YYYY [a] H:mm', lll: 'D MMM YYYY, H:mm', LLLL: 'dddd D MMMM [de] YYYY [a] H:mm', llll: 'ddd D MMM YYYY, H:mm' }, calendar: { sameDay: '[uèi a] LT', nextDay: '[deman a] LT', nextWeek: 'dddd [a] LT', lastDay: '[ièr a] LT', lastWeek: 'dddd [passat a] LT', sameElse: 'L' }, relativeTime: { future: "d'aquí %s", past: 'fa %s', s: 'unas segondas', ss: '%d segondas', m: 'una minuta', mm: '%d minutas', h: 'una ora', hh: '%d oras', d: 'un jorn', dd: '%d jorns', M: 'un mes', MM: '%d meses', y: 'un an', yy: '%d ans' }, dayOfMonthOrdinalParse: /\d{1,2}(r|n|t|è|a)/, ordinal (e, t) { let output = e === 1 ? 'r' : e === 2 ? 'n' : e === 3 ? 'r' : e === 4 ? 't' : 'è'; return t !== 'w' && t !== 'W' || (output = 'a'), e + output }, week: { dow: 1, doy: 4 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; const t = { 1: '੧', 2: '੨', 3: '੩', 4: '੪', 5: '੫', 6: '੬', 7: '੭', 8: '੮', 9: '੯', 0: '੦' }; const n = { '੧': '1', '੨': '2', '੩': '3', '੪': '4', '੫': '5', '੬': '6', '੭': '7', '੮': '8', '੯': '9', '੦': '0' }; e.defineLocale('pa-in', { months: 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split('_'), monthsShort: 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split('_'), weekdays: 'ਐਤਵਾਰ_ਸੋਮਵਾਰ_ਮੰਗਲਵਾਰ_ਬੁਧਵਾਰ_ਵੀਰਵਾਰ_ਸ਼ੁੱਕਰਵਾਰ_ਸ਼ਨੀਚਰਵਾਰ'.split('_'), weekdaysShort: 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'), weekdaysMin: 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'), longDateFormat: { LT: 'A h:mm ਵਜੇ', LTS: 'A h:mm:ss ਵਜੇ', L: 'DD/MM/YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY, A h:mm ਵਜੇ', LLLL: 'dddd, D MMMM YYYY, A h:mm ਵਜੇ' }, calendar: { sameDay: '[ਅਜ] LT', nextDay: '[ਕਲ] LT', nextWeek: '[ਅਗਲਾ] dddd, LT', lastDay: '[ਕਲ] LT', lastWeek: '[ਪਿਛਲੇ] dddd, LT', sameElse: 'L' }, relativeTime: { future: '%s ਵਿੱਚ', past: '%s ਪਿਛਲੇ', s: 'ਕੁਝ ਸਕਿੰਟ', ss: '%d ਸਕਿੰਟ', m: 'ਇਕ ਮਿੰਟ', mm: '%d ਮਿੰਟ', h: 'ਇੱਕ ਘੰਟਾ', hh: '%d ਘੰਟੇ', d: 'ਇੱਕ ਦਿਨ', dd: '%d ਦਿਨ', M: 'ਇੱਕ ਮਹੀਨਾ', MM: '%d ਮਹੀਨੇ', y: 'ਇੱਕ ਸਾਲ', yy: '%d ਸਾਲ' }, preparse (e) { return e.replace(/[੧੨੩੪੫੬੭੮੯੦]/g, function (e) { return n[e] }) }, postformat (e) { return e.replace(/\d/g, function (e) { return t[e] }) }, meridiemParse: /ਰਾਤ|ਸਵੇਰ|ਦੁਪਹਿਰ|ਸ਼ਾਮ/, meridiemHour (e, t) { return e === 12 && (e = 0), t === 'ਰਾਤ' ? e < 4 ? e : e + 12 : t === 'ਸਵੇਰ' ? e : t === 'ਦੁਪਹਿਰ' ? e >= 10 ? e : e + 12 : t === 'ਸ਼ਾਮ' ? e + 12 : void 0 }, meridiem (e, t, n) { return e < 4 ? 'ਰਾਤ' : e < 10 ? 'ਸਵੇਰ' : e < 17 ? 'ਦੁਪਹਿਰ' : e < 20 ? 'ਸ਼ਾਮ' : 'ਰਾਤ' }, week: { dow: 0, doy: 6 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; const t = 'styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień'.split('_'); const n = 'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia'.split('_'); function r (e) { return e % 10 < 5 && e % 10 > 1 && ~~(e / 10) % 10 != 1 } function o (e, t, n) { const o = e + ' '; switch (n) { case 'ss':return o + (r(e) ? 'sekundy' : 'sekund'); case 'm':return t ? 'minuta' : 'minutę'; case 'mm':return o + (r(e) ? 'minuty' : 'minut'); case 'h':return t ? 'godzina' : 'godzinę'; case 'hh':return o + (r(e) ? 'godziny' : 'godzin'); case 'MM':return o + (r(e) ? 'miesiące' : 'miesięcy'); case 'yy':return o + (r(e) ? 'lata' : 'lat') } }e.defineLocale('pl', { months (e, r) { return e ? r === '' ? '(' + n[e.month()] + '|' + t[e.month()] + ')' : /D MMMM/.test(r) ? n[e.month()] : t[e.month()] : t }, monthsShort: 'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru'.split('_'), weekdays: 'niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota'.split('_'), weekdaysShort: 'ndz_pon_wt_śr_czw_pt_sob'.split('_'), weekdaysMin: 'Nd_Pn_Wt_Śr_Cz_Pt_So'.split('_'), longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'DD.MM.YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY HH:mm', LLLL: 'dddd, D MMMM YYYY HH:mm' }, calendar: { sameDay: '[Dziś o] LT', nextDay: '[Jutro o] LT', nextWeek () { switch (this.day()) { case 0:return '[W niedzielę o] LT'; case 2:return '[We wtorek o] LT'; case 3:return '[W środę o] LT'; case 6:return '[W sobotę o] LT'; default:return '[W] dddd [o] LT' } }, lastDay: '[Wczoraj o] LT', lastWeek () { switch (this.day()) { case 0:return '[W zeszłą niedzielę o] LT'; case 3:return '[W zeszłą środę o] LT'; case 6:return '[W zeszłą sobotę o] LT'; default:return '[W zeszły] dddd [o] LT' } }, sameElse: 'L' }, relativeTime: { future: 'za %s', past: '%s temu', s: 'kilka sekund', ss: o, m: o, mm: o, h: o, hh: o, d: '1 dzień', dd: '%d dni', M: 'miesiąc', MM: o, y: 'rok', yy: o }, dayOfMonthOrdinalParse: /\d{1,2}\./, ordinal: '%d.', week: { dow: 1, doy: 4 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; e.defineLocale('pt', { months: 'janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro'.split('_'), monthsShort: 'jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez'.split('_'), weekdays: 'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split('_'), weekdaysShort: 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'), weekdaysMin: 'Do_2ª_3ª_4ª_5ª_6ª_Sá'.split('_'), weekdaysParseExact: !0, longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'DD/MM/YYYY', LL: 'D [de] MMMM [de] YYYY', LLL: 'D [de] MMMM [de] YYYY HH:mm', LLLL: 'dddd, D [de] MMMM [de] YYYY HH:mm' }, calendar: { sameDay: '[Hoje às] LT', nextDay: '[Amanhã às] LT', nextWeek: 'dddd [às] LT', lastDay: '[Ontem às] LT', lastWeek () { return this.day() === 0 || this.day() === 6 ? '[Último] dddd [às] LT' : '[Última] dddd [às] LT' }, sameElse: 'L' }, relativeTime: { future: 'em %s', past: 'há %s', s: 'segundos', ss: '%d segundos', m: 'um minuto', mm: '%d minutos', h: 'uma hora', hh: '%d horas', d: 'um dia', dd: '%d dias', M: 'um mês', MM: '%d meses', y: 'um ano', yy: '%d anos' }, dayOfMonthOrdinalParse: /\d{1,2}º/, ordinal: '%dº', week: { dow: 1, doy: 4 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; e.defineLocale('pt-br', { months: 'janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro'.split('_'), monthsShort: 'jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez'.split('_'), weekdays: 'domingo_segunda-feira_terça-feira_quarta-feira_quinta-feira_sexta-feira_sábado'.split('_'), weekdaysShort: 'dom_seg_ter_qua_qui_sex_sáb'.split('_'), weekdaysMin: 'do_2ª_3ª_4ª_5ª_6ª_sá'.split('_'), weekdaysParseExact: !0, longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'DD/MM/YYYY', LL: 'D [de] MMMM [de] YYYY', LLL: 'D [de] MMMM [de] YYYY [às] HH:mm', LLLL: 'dddd, D [de] MMMM [de] YYYY [às] HH:mm' }, calendar: { sameDay: '[Hoje às] LT', nextDay: '[Amanhã às] LT', nextWeek: 'dddd [às] LT', lastDay: '[Ontem às] LT', lastWeek () { return this.day() === 0 || this.day() === 6 ? '[Último] dddd [às] LT' : '[Última] dddd [às] LT' }, sameElse: 'L' }, relativeTime: { future: 'em %s', past: 'há %s', s: 'poucos segundos', ss: '%d segundos', m: 'um minuto', mm: '%d minutos', h: 'uma hora', hh: '%d horas', d: 'um dia', dd: '%d dias', M: 'um mês', MM: '%d meses', y: 'um ano', yy: '%d anos' }, dayOfMonthOrdinalParse: /\d{1,2}º/, ordinal: '%dº' }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; function t (e, t, n) { let r = ' '; return (e % 100 >= 20 || e >= 100 && e % 100 == 0) && (r = ' de '), e + r + { ss: 'secunde', mm: 'minute', hh: 'ore', dd: 'zile', MM: 'luni', yy: 'ani' }[n] }e.defineLocale('ro', { months: 'ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie'.split('_'), monthsShort: 'ian._feb._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.'.split('_'), monthsParseExact: !0, weekdays: 'duminică_luni_marți_miercuri_joi_vineri_sâmbătă'.split('_'), weekdaysShort: 'Dum_Lun_Mar_Mie_Joi_Vin_Sâm'.split('_'), weekdaysMin: 'Du_Lu_Ma_Mi_Jo_Vi_Sâ'.split('_'), longDateFormat: { LT: 'H:mm', LTS: 'H:mm:ss', L: 'DD.MM.YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY H:mm', LLLL: 'dddd, D MMMM YYYY H:mm' }, calendar: { sameDay: '[azi la] LT', nextDay: '[mâine la] LT', nextWeek: 'dddd [la] LT', lastDay: '[ieri la] LT', lastWeek: '[fosta] dddd [la] LT', sameElse: 'L' }, relativeTime: { future: 'peste %s', past: '%s în urmă', s: 'câteva secunde', ss: t, m: 'un minut', mm: t, h: 'o oră', hh: t, d: 'o zi', dd: t, M: 'o lună', MM: t, y: 'un an', yy: t }, week: { dow: 1, doy: 7 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; function t (e, t, n) { let r, o; return n === 'm' ? t ? 'минута' : 'минуту' : e + ' ' + (r = +e, o = { ss: t ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд', mm: t ? 'минута_минуты_минут' : 'минуту_минуты_минут', hh: 'час_часа_часов', dd: 'день_дня_дней', MM: 'месяц_месяца_месяцев', yy: 'год_года_лет' }[n].split('_'), r % 10 == 1 && r % 100 != 11 ? o[0] : r % 10 >= 2 && r % 10 <= 4 && (r % 100 < 10 || r % 100 >= 20) ? o[1] : o[2]) } const n = [/^янв/i, /^фев/i, /^мар/i, /^апр/i, /^ма[йя]/i, /^июн/i, /^июл/i, /^авг/i, /^сен/i, /^окт/i, /^ноя/i, /^дек/i]; e.defineLocale('ru', { months: { format: 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split('_'), standalone: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_') }, monthsShort: { format: 'янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.'.split('_'), standalone: 'янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.'.split('_') }, weekdays: { standalone: 'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split('_'), format: 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split('_'), isFormat: /\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?] ?dddd/ }, weekdaysShort: 'вс_пн_вт_ср_чт_пт_сб'.split('_'), weekdaysMin: 'вс_пн_вт_ср_чт_пт_сб'.split('_'), monthsParse: n, longMonthsParse: n, shortMonthsParse: n, monthsRegex: /^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i, monthsShortRegex: /^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i, monthsStrictRegex: /^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i, monthsShortStrictRegex: /^(янв\.|февр?\.|мар[т.]|апр\.|ма[яй]|июн[ья.]|июл[ья.]|авг\.|сент?\.|окт\.|нояб?\.|дек\.)/i, longDateFormat: { LT: 'H:mm', LTS: 'H:mm:ss', L: 'DD.MM.YYYY', LL: 'D MMMM YYYY г.', LLL: 'D MMMM YYYY г., H:mm', LLLL: 'dddd, D MMMM YYYY г., H:mm' }, calendar: { sameDay: '[Сегодня, в] LT', nextDay: '[Завтра, в] LT', lastDay: '[Вчера, в] LT', nextWeek (e) { if (e.week() === this.week()) { return this.day() === 2 ? '[Во] dddd, [в] LT' : '[В] dddd, [в] LT' } switch (this.day()) { case 0:return '[В следующее] dddd, [в] LT'; case 1:case 2:case 4:return '[В следующий] dddd, [в] LT'; case 3:case 5:case 6:return '[В следующую] dddd, [в] LT' } }, lastWeek (e) { if (e.week() === this.week()) { return this.day() === 2 ? '[Во] dddd, [в] LT' : '[В] dddd, [в] LT' } switch (this.day()) { case 0:return '[В прошлое] dddd, [в] LT'; case 1:case 2:case 4:return '[В прошлый] dddd, [в] LT'; case 3:case 5:case 6:return '[В прошлую] dddd, [в] LT' } }, sameElse: 'L' }, relativeTime: { future: 'через %s', past: '%s назад', s: 'несколько секунд', ss: t, m: t, mm: t, h: 'час', hh: t, d: 'день', dd: t, M: 'месяц', MM: t, y: 'год', yy: t }, meridiemParse: /ночи|утра|дня|вечера/i, isPM (input) { return /^(дня|вечера)$/.test(input) }, meridiem (e, t, n) { return e < 4 ? 'ночи' : e < 12 ? 'утра' : e < 17 ? 'дня' : 'вечера' }, dayOfMonthOrdinalParse: /\d{1,2}-(й|го|я)/, ordinal (e, t) { switch (t) { case 'M':case 'd':case 'DDD':return e + '-й'; case 'D':return e + '-го'; case 'w':case 'W':return e + '-я'; default:return e } }, week: { dow: 1, doy: 4 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; const t = ['جنوري', 'فيبروري', 'مارچ', 'اپريل', 'مئي', 'جون', 'جولاءِ', 'آگسٽ', 'سيپٽمبر', 'آڪٽوبر', 'نومبر', 'ڊسمبر']; const n = ['آچر', 'سومر', 'اڱارو', 'اربع', 'خميس', 'جمع', 'ڇنڇر']; e.defineLocale('sd', { months: t, monthsShort: t, weekdays: n, weekdaysShort: n, weekdaysMin: n, longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'DD/MM/YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY HH:mm', LLLL: 'dddd، D MMMM YYYY HH:mm' }, meridiemParse: /صبح|شام/, isPM (input) { return input === 'شام' }, meridiem (e, t, n) { return e < 12 ? 'صبح' : 'شام' }, calendar: { sameDay: '[اڄ] LT', nextDay: '[سڀاڻي] LT', nextWeek: 'dddd [اڳين هفتي تي] LT', lastDay: '[ڪالهه] LT', lastWeek: '[گزريل هفتي] dddd [تي] LT', sameElse: 'L' }, relativeTime: { future: '%s پوء', past: '%s اڳ', s: 'چند سيڪنڊ', ss: '%d سيڪنڊ', m: 'هڪ منٽ', mm: '%d منٽ', h: 'هڪ ڪلاڪ', hh: '%d ڪلاڪ', d: 'هڪ ڏينهن', dd: '%d ڏينهن', M: 'هڪ مهينو', MM: '%d مهينا', y: 'هڪ سال', yy: '%d سال' }, preparse (e) { return e.replace(/،/g, ',') }, postformat (e) { return e.replace(/,/g, '،') }, week: { dow: 1, doy: 4 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; e.defineLocale('se', { months: 'ođđajagemánnu_guovvamánnu_njukčamánnu_cuoŋománnu_miessemánnu_geassemánnu_suoidnemánnu_borgemánnu_čakčamánnu_golggotmánnu_skábmamánnu_juovlamánnu'.split('_'), monthsShort: 'ođđj_guov_njuk_cuo_mies_geas_suoi_borg_čakč_golg_skáb_juov'.split('_'), weekdays: 'sotnabeaivi_vuossárga_maŋŋebárga_gaskavahkku_duorastat_bearjadat_lávvardat'.split('_'), weekdaysShort: 'sotn_vuos_maŋ_gask_duor_bear_láv'.split('_'), weekdaysMin: 's_v_m_g_d_b_L'.split('_'), longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'DD.MM.YYYY', LL: 'MMMM D. [b.] YYYY', LLL: 'MMMM D. [b.] YYYY [ti.] HH:mm', LLLL: 'dddd, MMMM D. [b.] YYYY [ti.] HH:mm' }, calendar: { sameDay: '[otne ti] LT', nextDay: '[ihttin ti] LT', nextWeek: 'dddd [ti] LT', lastDay: '[ikte ti] LT', lastWeek: '[ovddit] dddd [ti] LT', sameElse: 'L' }, relativeTime: { future: '%s geažes', past: 'maŋit %s', s: 'moadde sekunddat', ss: '%d sekunddat', m: 'okta minuhta', mm: '%d minuhtat', h: 'okta diimmu', hh: '%d diimmut', d: 'okta beaivi', dd: '%d beaivvit', M: 'okta mánnu', MM: '%d mánut', y: 'okta jahki', yy: '%d jagit' }, dayOfMonthOrdinalParse: /\d{1,2}\./, ordinal: '%d.', week: { dow: 1, doy: 4 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; e.defineLocale('si', { months: 'ජනවාරි_පෙබරවාරි_මාර්තු_අප්‍රේල්_මැයි_ජූනි_ජූලි_අගෝස්තු_සැප්තැම්බර්_ඔක්තෝබර්_නොවැම්බර්_දෙසැම්බර්'.split('_'), monthsShort: 'ජන_පෙබ_මාර්_අප්_මැයි_ජූනි_ජූලි_අගෝ_සැප්_ඔක්_නොවැ_දෙසැ'.split('_'), weekdays: 'ඉරිදා_සඳුදා_අඟහරුවාදා_බදාදා_බ්‍රහස්පතින්දා_සිකුරාදා_සෙනසුරාදා'.split('_'), weekdaysShort: 'ඉරි_සඳු_අඟ_බදා_බ්‍රහ_සිකු_සෙන'.split('_'), weekdaysMin: 'ඉ_ස_අ_බ_බ්‍ර_සි_සෙ'.split('_'), weekdaysParseExact: !0, longDateFormat: { LT: 'a h:mm', LTS: 'a h:mm:ss', L: 'YYYY/MM/DD', LL: 'YYYY MMMM D', LLL: 'YYYY MMMM D, a h:mm', LLLL: 'YYYY MMMM D [වැනි] dddd, a h:mm:ss' }, calendar: { sameDay: '[අද] LT[ට]', nextDay: '[හෙට] LT[ට]', nextWeek: 'dddd LT[ට]', lastDay: '[ඊයේ] LT[ට]', lastWeek: '[පසුගිය] dddd LT[ට]', sameElse: 'L' }, relativeTime: { future: '%sකින්', past: '%sකට පෙර', s: 'තත්පර කිහිපය', ss: 'තත්පර %d', m: 'මිනිත්තුව', mm: 'මිනිත්තු %d', h: 'පැය', hh: 'පැය %d', d: 'දිනය', dd: 'දින %d', M: 'මාසය', MM: 'මාස %d', y: 'වසර', yy: 'වසර %d' }, dayOfMonthOrdinalParse: /\d{1,2} වැනි/, ordinal (e) { return e + ' වැනි' }, meridiemParse: /පෙර වරු|පස් වරු|පෙ.ව|ප.ව./, isPM (input) { return input === 'ප.ව.' || input === 'පස් වරු' }, meridiem (e, t, n) { return e > 11 ? n ? 'ප.ව.' : 'පස් වරු' : n ? 'පෙ.ව.' : 'පෙර වරු' } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; const t = 'január_február_marec_apríl_máj_jún_júl_august_september_október_november_december'.split('_'); const n = 'jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec'.split('_'); function r (e) { return e > 1 && e < 5 } function o (e, t, n, o) { const d = e + ' '; switch (n) { case 's':return t || o ? 'pár sekúnd' : 'pár sekundami'; case 'ss':return t || o ? d + (r(e) ? 'sekundy' : 'sekúnd') : d + 'sekundami'; case 'm':return t ? 'minúta' : o ? 'minútu' : 'minútou'; case 'mm':return t || o ? d + (r(e) ? 'minúty' : 'minút') : d + 'minútami'; case 'h':return t ? 'hodina' : o ? 'hodinu' : 'hodinou'; case 'hh':return t || o ? d + (r(e) ? 'hodiny' : 'hodín') : d + 'hodinami'; case 'd':return t || o ? 'deň' : 'dňom'; case 'dd':return t || o ? d + (r(e) ? 'dni' : 'dní') : d + 'dňami'; case 'M':return t || o ? 'mesiac' : 'mesiacom'; case 'MM':return t || o ? d + (r(e) ? 'mesiace' : 'mesiacov') : d + 'mesiacmi'; case 'y':return t || o ? 'rok' : 'rokom'; case 'yy':return t || o ? d + (r(e) ? 'roky' : 'rokov') : d + 'rokmi' } }e.defineLocale('sk', { months: t, monthsShort: n, weekdays: 'nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota'.split('_'), weekdaysShort: 'ne_po_ut_st_št_pi_so'.split('_'), weekdaysMin: 'ne_po_ut_st_št_pi_so'.split('_'), longDateFormat: { LT: 'H:mm', LTS: 'H:mm:ss', L: 'DD.MM.YYYY', LL: 'D. MMMM YYYY', LLL: 'D. MMMM YYYY H:mm', LLLL: 'dddd D. MMMM YYYY H:mm' }, calendar: { sameDay: '[dnes o] LT', nextDay: '[zajtra o] LT', nextWeek () { switch (this.day()) { case 0:return '[v nedeľu o] LT'; case 1:case 2:return '[v] dddd [o] LT'; case 3:return '[v stredu o] LT'; case 4:return '[vo štvrtok o] LT'; case 5:return '[v piatok o] LT'; case 6:return '[v sobotu o] LT' } }, lastDay: '[včera o] LT', lastWeek () { switch (this.day()) { case 0:return '[minulú nedeľu o] LT'; case 1:case 2:return '[minulý] dddd [o] LT'; case 3:return '[minulú stredu o] LT'; case 4:case 5:return '[minulý] dddd [o] LT'; case 6:return '[minulú sobotu o] LT' } }, sameElse: 'L' }, relativeTime: { future: 'za %s', past: 'pred %s', s: o, ss: o, m: o, mm: o, h: o, hh: o, d: o, dd: o, M: o, MM: o, y: o, yy: o }, dayOfMonthOrdinalParse: /\d{1,2}\./, ordinal: '%d.', week: { dow: 1, doy: 4 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; function t (e, t, n, r) { let o = e + ' '; switch (n) { case 's':return t || r ? 'nekaj sekund' : 'nekaj sekundami'; case 'ss':return o += e === 1 ? t ? 'sekundo' : 'sekundi' : e === 2 ? t || r ? 'sekundi' : 'sekundah' : e < 5 ? t || r ? 'sekunde' : 'sekundah' : 'sekund'; case 'm':return t ? 'ena minuta' : 'eno minuto'; case 'mm':return o += e === 1 ? t ? 'minuta' : 'minuto' : e === 2 ? t || r ? 'minuti' : 'minutama' : e < 5 ? t || r ? 'minute' : 'minutami' : t || r ? 'minut' : 'minutami'; case 'h':return t ? 'ena ura' : 'eno uro'; case 'hh':return o += e === 1 ? t ? 'ura' : 'uro' : e === 2 ? t || r ? 'uri' : 'urama' : e < 5 ? t || r ? 'ure' : 'urami' : t || r ? 'ur' : 'urami'; case 'd':return t || r ? 'en dan' : 'enim dnem'; case 'dd':return o += e === 1 ? t || r ? 'dan' : 'dnem' : e === 2 ? t || r ? 'dni' : 'dnevoma' : t || r ? 'dni' : 'dnevi'; case 'M':return t || r ? 'en mesec' : 'enim mesecem'; case 'MM':return o += e === 1 ? t || r ? 'mesec' : 'mesecem' : e === 2 ? t || r ? 'meseca' : 'mesecema' : e < 5 ? t || r ? 'mesece' : 'meseci' : t || r ? 'mesecev' : 'meseci'; case 'y':return t || r ? 'eno leto' : 'enim letom'; case 'yy':return o += e === 1 ? t || r ? 'leto' : 'letom' : e === 2 ? t || r ? 'leti' : 'letoma' : e < 5 ? t || r ? 'leta' : 'leti' : t || r ? 'let' : 'leti' } }e.defineLocale('sl', { months: 'januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december'.split('_'), monthsShort: 'jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.'.split('_'), monthsParseExact: !0, weekdays: 'nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota'.split('_'), weekdaysShort: 'ned._pon._tor._sre._čet._pet._sob.'.split('_'), weekdaysMin: 'ne_po_to_sr_če_pe_so'.split('_'), weekdaysParseExact: !0, longDateFormat: { LT: 'H:mm', LTS: 'H:mm:ss', L: 'DD. MM. YYYY', LL: 'D. MMMM YYYY', LLL: 'D. MMMM YYYY H:mm', LLLL: 'dddd, D. MMMM YYYY H:mm' }, calendar: { sameDay: '[danes ob] LT', nextDay: '[jutri ob] LT', nextWeek () { switch (this.day()) { case 0:return '[v] [nedeljo] [ob] LT'; case 3:return '[v] [sredo] [ob] LT'; case 6:return '[v] [soboto] [ob] LT'; case 1:case 2:case 4:case 5:return '[v] dddd [ob] LT' } }, lastDay: '[včeraj ob] LT', lastWeek () { switch (this.day()) { case 0:return '[prejšnjo] [nedeljo] [ob] LT'; case 3:return '[prejšnjo] [sredo] [ob] LT'; case 6:return '[prejšnjo] [soboto] [ob] LT'; case 1:case 2:case 4:case 5:return '[prejšnji] dddd [ob] LT' } }, sameElse: 'L' }, relativeTime: { future: 'čez %s', past: 'pred %s', s: t, ss: t, m: t, mm: t, h: t, hh: t, d: t, dd: t, M: t, MM: t, y: t, yy: t }, dayOfMonthOrdinalParse: /\d{1,2}\./, ordinal: '%d.', week: { dow: 1, doy: 7 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; e.defineLocale('sq', { months: 'Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor'.split('_'), monthsShort: 'Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj'.split('_'), weekdays: 'E Diel_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë'.split('_'), weekdaysShort: 'Die_Hën_Mar_Mër_Enj_Pre_Sht'.split('_'), weekdaysMin: 'D_H_Ma_Më_E_P_Sh'.split('_'), weekdaysParseExact: !0, meridiemParse: /PD|MD/, isPM (input) { return input.charAt(0) === 'M' }, meridiem (e, t, n) { return e < 12 ? 'PD' : 'MD' }, longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'DD/MM/YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY HH:mm', LLLL: 'dddd, D MMMM YYYY HH:mm' }, calendar: { sameDay: '[Sot në] LT', nextDay: '[Nesër në] LT', nextWeek: 'dddd [në] LT', lastDay: '[Dje në] LT', lastWeek: 'dddd [e kaluar në] LT', sameElse: 'L' }, relativeTime: { future: 'në %s', past: '%s më parë', s: 'disa sekonda', ss: '%d sekonda', m: 'një minutë', mm: '%d minuta', h: 'një orë', hh: '%d orë', d: 'një ditë', dd: '%d ditë', M: 'një muaj', MM: '%d muaj', y: 'një vit', yy: '%d vite' }, dayOfMonthOrdinalParse: /\d{1,2}\./, ordinal: '%d.', week: { dow: 1, doy: 4 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; var t = { words: { ss: ['sekunda', 'sekunde', 'sekundi'], m: ['jedan minut', 'jedne minute'], mm: ['minut', 'minute', 'minuta'], h: ['jedan sat', 'jednog sata'], hh: ['sat', 'sata', 'sati'], dd: ['dan', 'dana', 'dana'], MM: ['mesec', 'meseca', 'meseci'], yy: ['godina', 'godine', 'godina'] }, correctGrammaticalCase (e, t) { return e === 1 ? t[0] : e >= 2 && e <= 4 ? t[1] : t[2] }, translate (e, n, r) { const o = t.words[r]; return r.length === 1 ? n ? o[0] : o[1] : e + ' ' + t.correctGrammaticalCase(e, o) } }; e.defineLocale('sr', { months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split('_'), monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split('_'), monthsParseExact: !0, weekdays: 'nedelja_ponedeljak_utorak_sreda_četvrtak_petak_subota'.split('_'), weekdaysShort: 'ned._pon._uto._sre._čet._pet._sub.'.split('_'), weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'), weekdaysParseExact: !0, longDateFormat: { LT: 'H:mm', LTS: 'H:mm:ss', L: 'DD.MM.YYYY', LL: 'D. MMMM YYYY', LLL: 'D. MMMM YYYY H:mm', LLLL: 'dddd, D. MMMM YYYY H:mm' }, calendar: { sameDay: '[danas u] LT', nextDay: '[sutra u] LT', nextWeek () { switch (this.day()) { case 0:return '[u] [nedelju] [u] LT'; case 3:return '[u] [sredu] [u] LT'; case 6:return '[u] [subotu] [u] LT'; case 1:case 2:case 4:case 5:return '[u] dddd [u] LT' } }, lastDay: '[juče u] LT', lastWeek () { return ['[prošle] [nedelje] [u] LT', '[prošlog] [ponedeljka] [u] LT', '[prošlog] [utorka] [u] LT', '[prošle] [srede] [u] LT', '[prošlog] [četvrtka] [u] LT', '[prošlog] [petka] [u] LT', '[prošle] [subote] [u] LT'][this.day()] }, sameElse: 'L' }, relativeTime: { future: 'za %s', past: 'pre %s', s: 'nekoliko sekundi', ss: t.translate, m: t.translate, mm: t.translate, h: t.translate, hh: t.translate, d: 'dan', dd: t.translate, M: 'mesec', MM: t.translate, y: 'godinu', yy: t.translate }, dayOfMonthOrdinalParse: /\d{1,2}\./, ordinal: '%d.', week: { dow: 1, doy: 7 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; var t = { words: { ss: ['секунда', 'секунде', 'секунди'], m: ['један минут', 'једне минуте'], mm: ['минут', 'минуте', 'минута'], h: ['један сат', 'једног сата'], hh: ['сат', 'сата', 'сати'], dd: ['дан', 'дана', 'дана'], MM: ['месец', 'месеца', 'месеци'], yy: ['година', 'године', 'година'] }, correctGrammaticalCase (e, t) { return e === 1 ? t[0] : e >= 2 && e <= 4 ? t[1] : t[2] }, translate (e, n, r) { const o = t.words[r]; return r.length === 1 ? n ? o[0] : o[1] : e + ' ' + t.correctGrammaticalCase(e, o) } }; e.defineLocale('sr-cyrl', { months: 'јануар_фебруар_март_април_мај_јун_јул_август_септембар_октобар_новембар_децембар'.split('_'), monthsShort: 'јан._феб._мар._апр._мај_јун_јул_авг._сеп._окт._нов._дец.'.split('_'), monthsParseExact: !0, weekdays: 'недеља_понедељак_уторак_среда_четвртак_петак_субота'.split('_'), weekdaysShort: 'нед._пон._уто._сре._чет._пет._суб.'.split('_'), weekdaysMin: 'не_по_ут_ср_че_пе_су'.split('_'), weekdaysParseExact: !0, longDateFormat: { LT: 'H:mm', LTS: 'H:mm:ss', L: 'DD.MM.YYYY', LL: 'D. MMMM YYYY', LLL: 'D. MMMM YYYY H:mm', LLLL: 'dddd, D. MMMM YYYY H:mm' }, calendar: { sameDay: '[данас у] LT', nextDay: '[сутра у] LT', nextWeek () { switch (this.day()) { case 0:return '[у] [недељу] [у] LT'; case 3:return '[у] [среду] [у] LT'; case 6:return '[у] [суботу] [у] LT'; case 1:case 2:case 4:case 5:return '[у] dddd [у] LT' } }, lastDay: '[јуче у] LT', lastWeek () { return ['[прошле] [недеље] [у] LT', '[прошлог] [понедељка] [у] LT', '[прошлог] [уторка] [у] LT', '[прошле] [среде] [у] LT', '[прошлог] [четвртка] [у] LT', '[прошлог] [петка] [у] LT', '[прошле] [суботе] [у] LT'][this.day()] }, sameElse: 'L' }, relativeTime: { future: 'за %s', past: 'пре %s', s: 'неколико секунди', ss: t.translate, m: t.translate, mm: t.translate, h: t.translate, hh: t.translate, d: 'дан', dd: t.translate, M: 'месец', MM: t.translate, y: 'годину', yy: t.translate }, dayOfMonthOrdinalParse: /\d{1,2}\./, ordinal: '%d.', week: { dow: 1, doy: 7 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; e.defineLocale('ss', { months: "Bhimbidvwane_Indlovana_Indlov'lenkhulu_Mabasa_Inkhwekhweti_Inhlaba_Kholwane_Ingci_Inyoni_Imphala_Lweti_Ingongoni".split('_'), monthsShort: 'Bhi_Ina_Inu_Mab_Ink_Inh_Kho_Igc_Iny_Imp_Lwe_Igo'.split('_'), weekdays: 'Lisontfo_Umsombuluko_Lesibili_Lesitsatfu_Lesine_Lesihlanu_Umgcibelo'.split('_'), weekdaysShort: 'Lis_Umb_Lsb_Les_Lsi_Lsh_Umg'.split('_'), weekdaysMin: 'Li_Us_Lb_Lt_Ls_Lh_Ug'.split('_'), weekdaysParseExact: !0, longDateFormat: { LT: 'h:mm A', LTS: 'h:mm:ss A', L: 'DD/MM/YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY h:mm A', LLLL: 'dddd, D MMMM YYYY h:mm A' }, calendar: { sameDay: '[Namuhla nga] LT', nextDay: '[Kusasa nga] LT', nextWeek: 'dddd [nga] LT', lastDay: '[Itolo nga] LT', lastWeek: 'dddd [leliphelile] [nga] LT', sameElse: 'L' }, relativeTime: { future: 'nga %s', past: 'wenteka nga %s', s: 'emizuzwana lomcane', ss: '%d mzuzwana', m: 'umzuzu', mm: '%d emizuzu', h: 'lihora', hh: '%d emahora', d: 'lilanga', dd: '%d emalanga', M: 'inyanga', MM: '%d tinyanga', y: 'umnyaka', yy: '%d iminyaka' }, meridiemParse: /ekuseni|emini|entsambama|ebusuku/, meridiem (e, t, n) { return e < 11 ? 'ekuseni' : e < 15 ? 'emini' : e < 19 ? 'entsambama' : 'ebusuku' }, meridiemHour (e, t) { return e === 12 && (e = 0), t === 'ekuseni' ? e : t === 'emini' ? e >= 11 ? e : e + 12 : t === 'entsambama' || t === 'ebusuku' ? e === 0 ? 0 : e + 12 : void 0 }, dayOfMonthOrdinalParse: /\d{1,2}/, ordinal: '%d', week: { dow: 1, doy: 4 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; e.defineLocale('sv', { months: 'januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december'.split('_'), monthsShort: 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'), weekdays: 'söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag'.split('_'), weekdaysShort: 'sön_mån_tis_ons_tor_fre_lör'.split('_'), weekdaysMin: 'sö_må_ti_on_to_fr_lö'.split('_'), longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'YYYY-MM-DD', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY [kl.] HH:mm', LLLL: 'dddd D MMMM YYYY [kl.] HH:mm', lll: 'D MMM YYYY HH:mm', llll: 'ddd D MMM YYYY HH:mm' }, calendar: { sameDay: '[Idag] LT', nextDay: '[Imorgon] LT', lastDay: '[Igår] LT', nextWeek: '[På] dddd LT', lastWeek: '[I] dddd[s] LT', sameElse: 'L' }, relativeTime: { future: 'om %s', past: 'för %s sedan', s: 'några sekunder', ss: '%d sekunder', m: 'en minut', mm: '%d minuter', h: 'en timme', hh: '%d timmar', d: 'en dag', dd: '%d dagar', M: 'en månad', MM: '%d månader', y: 'ett år', yy: '%d år' }, dayOfMonthOrdinalParse: /\d{1,2}(\:e|\:a)/, ordinal (e) { const b = e % 10; return e + (~~(e % 100 / 10) == 1 ? ':e' : b === 1 || b === 2 ? ':a' : ':e') }, week: { dow: 1, doy: 4 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; e.defineLocale('sw', { months: 'Januari_Februari_Machi_Aprili_Mei_Juni_Julai_Agosti_Septemba_Oktoba_Novemba_Desemba'.split('_'), monthsShort: 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ago_Sep_Okt_Nov_Des'.split('_'), weekdays: 'Jumapili_Jumatatu_Jumanne_Jumatano_Alhamisi_Ijumaa_Jumamosi'.split('_'), weekdaysShort: 'Jpl_Jtat_Jnne_Jtan_Alh_Ijm_Jmos'.split('_'), weekdaysMin: 'J2_J3_J4_J5_Al_Ij_J1'.split('_'), weekdaysParseExact: !0, longDateFormat: { LT: 'hh:mm A', LTS: 'HH:mm:ss', L: 'DD.MM.YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY HH:mm', LLLL: 'dddd, D MMMM YYYY HH:mm' }, calendar: { sameDay: '[leo saa] LT', nextDay: '[kesho saa] LT', nextWeek: '[wiki ijayo] dddd [saat] LT', lastDay: '[jana] LT', lastWeek: '[wiki iliyopita] dddd [saat] LT', sameElse: 'L' }, relativeTime: { future: '%s baadaye', past: 'tokea %s', s: 'hivi punde', ss: 'sekunde %d', m: 'dakika moja', mm: 'dakika %d', h: 'saa limoja', hh: 'masaa %d', d: 'siku moja', dd: 'siku %d', M: 'mwezi mmoja', MM: 'miezi %d', y: 'mwaka mmoja', yy: 'miaka %d' }, week: { dow: 1, doy: 7 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; const t = { 1: '௧', 2: '௨', 3: '௩', 4: '௪', 5: '௫', 6: '௬', 7: '௭', 8: '௮', 9: '௯', 0: '௦' }; const n = { '௧': '1', '௨': '2', '௩': '3', '௪': '4', '௫': '5', '௬': '6', '௭': '7', '௮': '8', '௯': '9', '௦': '0' }; e.defineLocale('ta', { months: 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'), monthsShort: 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'), weekdays: 'ஞாயிற்றுக்கிழமை_திங்கட்கிழமை_செவ்வாய்கிழமை_புதன்கிழமை_வியாழக்கிழமை_வெள்ளிக்கிழமை_சனிக்கிழமை'.split('_'), weekdaysShort: 'ஞாயிறு_திங்கள்_செவ்வாய்_புதன்_வியாழன்_வெள்ளி_சனி'.split('_'), weekdaysMin: 'ஞா_தி_செ_பு_வி_வெ_ச'.split('_'), longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'DD/MM/YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY, HH:mm', LLLL: 'dddd, D MMMM YYYY, HH:mm' }, calendar: { sameDay: '[இன்று] LT', nextDay: '[நாளை] LT', nextWeek: 'dddd, LT', lastDay: '[நேற்று] LT', lastWeek: '[கடந்த வாரம்] dddd, LT', sameElse: 'L' }, relativeTime: { future: '%s இல்', past: '%s முன்', s: 'ஒரு சில விநாடிகள்', ss: '%d விநாடிகள்', m: 'ஒரு நிமிடம்', mm: '%d நிமிடங்கள்', h: 'ஒரு மணி நேரம்', hh: '%d மணி நேரம்', d: 'ஒரு நாள்', dd: '%d நாட்கள்', M: 'ஒரு மாதம்', MM: '%d மாதங்கள்', y: 'ஒரு வருடம்', yy: '%d ஆண்டுகள்' }, dayOfMonthOrdinalParse: /\d{1,2}வது/, ordinal (e) { return e + 'வது' }, preparse (e) { return e.replace(/[௧௨௩௪௫௬௭௮௯௦]/g, function (e) { return n[e] }) }, postformat (e) { return e.replace(/\d/g, function (e) { return t[e] }) }, meridiemParse: /யாமம்|வைகறை|காலை|நண்பகல்|எற்பாடு|மாலை/, meridiem (e, t, n) { return e < 2 ? ' யாமம்' : e < 6 ? ' வைகறை' : e < 10 ? ' காலை' : e < 14 ? ' நண்பகல்' : e < 18 ? ' எற்பாடு' : e < 22 ? ' மாலை' : ' யாமம்' }, meridiemHour (e, t) { return e === 12 && (e = 0), t === 'யாமம்' ? e < 2 ? e : e + 12 : t === 'வைகறை' || t === 'காலை' || t === 'நண்பகல்' && e >= 10 ? e : e + 12 }, week: { dow: 0, doy: 6 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; e.defineLocale('te', { months: 'జనవరి_ఫిబ్రవరి_మార్చి_ఏప్రిల్_మే_జూన్_జులై_ఆగస్టు_సెప్టెంబర్_అక్టోబర్_నవంబర్_డిసెంబర్'.split('_'), monthsShort: 'జన._ఫిబ్ర._మార్చి_ఏప్రి._మే_జూన్_జులై_ఆగ._సెప్._అక్టో._నవ._డిసె.'.split('_'), monthsParseExact: !0, weekdays: 'ఆదివారం_సోమవారం_మంగళవారం_బుధవారం_గురువారం_శుక్రవారం_శనివారం'.split('_'), weekdaysShort: 'ఆది_సోమ_మంగళ_బుధ_గురు_శుక్ర_శని'.split('_'), weekdaysMin: 'ఆ_సో_మం_బు_గు_శు_శ'.split('_'), longDateFormat: { LT: 'A h:mm', LTS: 'A h:mm:ss', L: 'DD/MM/YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY, A h:mm', LLLL: 'dddd, D MMMM YYYY, A h:mm' }, calendar: { sameDay: '[నేడు] LT', nextDay: '[రేపు] LT', nextWeek: 'dddd, LT', lastDay: '[నిన్న] LT', lastWeek: '[గత] dddd, LT', sameElse: 'L' }, relativeTime: { future: '%s లో', past: '%s క్రితం', s: 'కొన్ని క్షణాలు', ss: '%d సెకన్లు', m: 'ఒక నిమిషం', mm: '%d నిమిషాలు', h: 'ఒక గంట', hh: '%d గంటలు', d: 'ఒక రోజు', dd: '%d రోజులు', M: 'ఒక నెల', MM: '%d నెలలు', y: 'ఒక సంవత్సరం', yy: '%d సంవత్సరాలు' }, dayOfMonthOrdinalParse: /\d{1,2}వ/, ordinal: '%dవ', meridiemParse: /రాత్రి|ఉదయం|మధ్యాహ్నం|సాయంత్రం/, meridiemHour (e, t) { return e === 12 && (e = 0), t === 'రాత్రి' ? e < 4 ? e : e + 12 : t === 'ఉదయం' ? e : t === 'మధ్యాహ్నం' ? e >= 10 ? e : e + 12 : t === 'సాయంత్రం' ? e + 12 : void 0 }, meridiem (e, t, n) { return e < 4 ? 'రాత్రి' : e < 10 ? 'ఉదయం' : e < 17 ? 'మధ్యాహ్నం' : e < 20 ? 'సాయంత్రం' : 'రాత్రి' }, week: { dow: 0, doy: 6 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; e.defineLocale('tet', { months: 'Janeiru_Fevereiru_Marsu_Abril_Maiu_Juñu_Jullu_Agustu_Setembru_Outubru_Novembru_Dezembru'.split('_'), monthsShort: 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'), weekdays: 'Domingu_Segunda_Tersa_Kuarta_Kinta_Sesta_Sabadu'.split('_'), weekdaysShort: 'Dom_Seg_Ters_Kua_Kint_Sest_Sab'.split('_'), weekdaysMin: 'Do_Seg_Te_Ku_Ki_Ses_Sa'.split('_'), longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'DD/MM/YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY HH:mm', LLLL: 'dddd, D MMMM YYYY HH:mm' }, calendar: { sameDay: '[Ohin iha] LT', nextDay: '[Aban iha] LT', nextWeek: 'dddd [iha] LT', lastDay: '[Horiseik iha] LT', lastWeek: 'dddd [semana kotuk] [iha] LT', sameElse: 'L' }, relativeTime: { future: 'iha %s', past: '%s liuba', s: 'segundu balun', ss: 'segundu %d', m: 'minutu ida', mm: 'minutu %d', h: 'oras ida', hh: 'oras %d', d: 'loron ida', dd: 'loron %d', M: 'fulan ida', MM: 'fulan %d', y: 'tinan ida', yy: 'tinan %d' }, dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/, ordinal (e) { const b = e % 10; return e + (~~(e % 100 / 10) == 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th') }, week: { dow: 1, doy: 4 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; const t = { 0: '-ум', 1: '-ум', 2: '-юм', 3: '-юм', 4: '-ум', 5: '-ум', 6: '-ум', 7: '-ум', 8: '-ум', 9: '-ум', 10: '-ум', 12: '-ум', 13: '-ум', 20: '-ум', 30: '-юм', 40: '-ум', 50: '-ум', 60: '-ум', 70: '-ум', 80: '-ум', 90: '-ум', 100: '-ум' }; e.defineLocale('tg', { months: 'январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр'.split('_'), monthsShort: 'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'), weekdays: 'якшанбе_душанбе_сешанбе_чоршанбе_панҷшанбе_ҷумъа_шанбе'.split('_'), weekdaysShort: 'яшб_дшб_сшб_чшб_пшб_ҷум_шнб'.split('_'), weekdaysMin: 'яш_дш_сш_чш_пш_ҷм_шб'.split('_'), longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'DD/MM/YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY HH:mm', LLLL: 'dddd, D MMMM YYYY HH:mm' }, calendar: { sameDay: '[Имрӯз соати] LT', nextDay: '[Пагоҳ соати] LT', lastDay: '[Дирӯз соати] LT', nextWeek: 'dddd[и] [ҳафтаи оянда соати] LT', lastWeek: 'dddd[и] [ҳафтаи гузашта соати] LT', sameElse: 'L' }, relativeTime: { future: 'баъди %s', past: '%s пеш', s: 'якчанд сония', m: 'як дақиқа', mm: '%d дақиқа', h: 'як соат', hh: '%d соат', d: 'як рӯз', dd: '%d рӯз', M: 'як моҳ', MM: '%d моҳ', y: 'як сол', yy: '%d сол' }, meridiemParse: /шаб|субҳ|рӯз|бегоҳ/, meridiemHour (e, t) { return e === 12 && (e = 0), t === 'шаб' ? e < 4 ? e : e + 12 : t === 'субҳ' ? e : t === 'рӯз' ? e >= 11 ? e : e + 12 : t === 'бегоҳ' ? e + 12 : void 0 }, meridiem (e, t, n) { return e < 4 ? 'шаб' : e < 11 ? 'субҳ' : e < 16 ? 'рӯз' : e < 19 ? 'бегоҳ' : 'шаб' }, dayOfMonthOrdinalParse: /\d{1,2}-(ум|юм)/, ordinal (e) { return e + (t[e] || t[e % 10] || t[e >= 100 ? 100 : null]) }, week: { dow: 1, doy: 7 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; e.defineLocale('th', { months: 'มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม'.split('_'), monthsShort: 'ม.ค._ก.พ._มี.ค._เม.ย._พ.ค._มิ.ย._ก.ค._ส.ค._ก.ย._ต.ค._พ.ย._ธ.ค.'.split('_'), monthsParseExact: !0, weekdays: 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์'.split('_'), weekdaysShort: 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัส_ศุกร์_เสาร์'.split('_'), weekdaysMin: 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'), weekdaysParseExact: !0, longDateFormat: { LT: 'H:mm', LTS: 'H:mm:ss', L: 'DD/MM/YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY เวลา H:mm', LLLL: 'วันddddที่ D MMMM YYYY เวลา H:mm' }, meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/, isPM (input) { return input === 'หลังเที่ยง' }, meridiem (e, t, n) { return e < 12 ? 'ก่อนเที่ยง' : 'หลังเที่ยง' }, calendar: { sameDay: '[วันนี้ เวลา] LT', nextDay: '[พรุ่งนี้ เวลา] LT', nextWeek: 'dddd[หน้า เวลา] LT', lastDay: '[เมื่อวานนี้ เวลา] LT', lastWeek: '[วัน]dddd[ที่แล้ว เวลา] LT', sameElse: 'L' }, relativeTime: { future: 'อีก %s', past: '%sที่แล้ว', s: 'ไม่กี่วินาที', ss: '%d วินาที', m: '1 นาที', mm: '%d นาที', h: '1 ชั่วโมง', hh: '%d ชั่วโมง', d: '1 วัน', dd: '%d วัน', M: '1 เดือน', MM: '%d เดือน', y: '1 ปี', yy: '%d ปี' } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; const t = { 1: "'inji", 5: "'inji", 8: "'inji", 70: "'inji", 80: "'inji", 2: "'nji", 7: "'nji", 20: "'nji", 50: "'nji", 3: "'ünji", 4: "'ünji", 100: "'ünji", 6: "'njy", 9: "'unjy", 10: "'unjy", 30: "'unjy", 60: "'ynjy", 90: "'ynjy" }; e.defineLocale('tk', { months: 'Ýanwar_Fewral_Mart_Aprel_Maý_Iýun_Iýul_Awgust_Sentýabr_Oktýabr_Noýabr_Dekabr'.split('_'), monthsShort: 'Ýan_Few_Mar_Apr_Maý_Iýn_Iýl_Awg_Sen_Okt_Noý_Dek'.split('_'), weekdays: 'Ýekşenbe_Duşenbe_Sişenbe_Çarşenbe_Penşenbe_Anna_Şenbe'.split('_'), weekdaysShort: 'Ýek_Duş_Siş_Çar_Pen_Ann_Şen'.split('_'), weekdaysMin: 'Ýk_Dş_Sş_Çr_Pn_An_Şn'.split('_'), longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'DD.MM.YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY HH:mm', LLLL: 'dddd, D MMMM YYYY HH:mm' }, calendar: { sameDay: '[bugün sagat] LT', nextDay: '[ertir sagat] LT', nextWeek: '[indiki] dddd [sagat] LT', lastDay: '[düýn] LT', lastWeek: '[geçen] dddd [sagat] LT', sameElse: 'L' }, relativeTime: { future: '%s soň', past: '%s öň', s: 'birnäçe sekunt', m: 'bir minut', mm: '%d minut', h: 'bir sagat', hh: '%d sagat', d: 'bir gün', dd: '%d gün', M: 'bir aý', MM: '%d aý', y: 'bir ýyl', yy: '%d ýyl' }, ordinal (e, n) { switch (n) { case 'd':case 'D':case 'Do':case 'DD':return e; default:if (e === 0) { return e + "'unjy" } var a = e % 10; return e + (t[a] || t[e % 100 - a] || t[e >= 100 ? 100 : null]) } }, week: { dow: 1, doy: 7 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; e.defineLocale('tl-ph', { months: 'Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre'.split('_'), monthsShort: 'Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis'.split('_'), weekdays: 'Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado'.split('_'), weekdaysShort: 'Lin_Lun_Mar_Miy_Huw_Biy_Sab'.split('_'), weekdaysMin: 'Li_Lu_Ma_Mi_Hu_Bi_Sab'.split('_'), longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'MM/D/YYYY', LL: 'MMMM D, YYYY', LLL: 'MMMM D, YYYY HH:mm', LLLL: 'dddd, MMMM DD, YYYY HH:mm' }, calendar: { sameDay: 'LT [ngayong araw]', nextDay: '[Bukas ng] LT', nextWeek: 'LT [sa susunod na] dddd', lastDay: 'LT [kahapon]', lastWeek: 'LT [noong nakaraang] dddd', sameElse: 'L' }, relativeTime: { future: 'sa loob ng %s', past: '%s ang nakalipas', s: 'ilang segundo', ss: '%d segundo', m: 'isang minuto', mm: '%d minuto', h: 'isang oras', hh: '%d oras', d: 'isang araw', dd: '%d araw', M: 'isang buwan', MM: '%d buwan', y: 'isang taon', yy: '%d taon' }, dayOfMonthOrdinalParse: /\d{1,2}/, ordinal (e) { return e }, week: { dow: 1, doy: 4 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; const t = 'pagh_wa’_cha’_wej_loS_vagh_jav_Soch_chorgh_Hut'.split('_'); function n (e, n, r, o) { const d = (function (e) { const n = Math.floor(e % 1e3 / 100); const r = Math.floor(e % 100 / 10); const o = e % 10; let d = ''; return n > 0 && (d += t[n] + 'vatlh'), r > 0 && (d += (d !== '' ? ' ' : '') + t[r] + 'maH'), o > 0 && (d += (d !== '' ? ' ' : '') + t[o]), d === '' ? 'pagh' : d }(e)); switch (r) { case 'ss':return d + ' lup'; case 'mm':return d + ' tup'; case 'hh':return d + ' rep'; case 'dd':return d + ' jaj'; case 'MM':return d + ' jar'; case 'yy':return d + ' DIS' } }e.defineLocale('tlh', { months: 'tera’ jar wa’_tera’ jar cha’_tera’ jar wej_tera’ jar loS_tera’ jar vagh_tera’ jar jav_tera’ jar Soch_tera’ jar chorgh_tera’ jar Hut_tera’ jar wa’maH_tera’ jar wa’maH wa’_tera’ jar wa’maH cha’'.split('_'), monthsShort: 'jar wa’_jar cha’_jar wej_jar loS_jar vagh_jar jav_jar Soch_jar chorgh_jar Hut_jar wa’maH_jar wa’maH wa’_jar wa’maH cha’'.split('_'), monthsParseExact: !0, weekdays: 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'), weekdaysShort: 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'), weekdaysMin: 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'), longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'DD.MM.YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY HH:mm', LLLL: 'dddd, D MMMM YYYY HH:mm' }, calendar: { sameDay: '[DaHjaj] LT', nextDay: '[wa’leS] LT', nextWeek: 'LLL', lastDay: '[wa’Hu’] LT', lastWeek: 'LLL', sameElse: 'L' }, relativeTime: { future (output) { let time = output; return time = output.includes('jaj') ? time.slice(0, -3) + 'leS' : output.includes('jar') ? time.slice(0, -3) + 'waQ' : output.includes('DIS') ? time.slice(0, -3) + 'nem' : time + ' pIq' }, past (output) { let time = output; return time = output.includes('jaj') ? time.slice(0, -3) + 'Hu’' : output.includes('jar') ? time.slice(0, -3) + 'wen' : output.includes('DIS') ? time.slice(0, -3) + 'ben' : time + ' ret' }, s: 'puS lup', ss: n, m: 'wa’ tup', mm: n, h: 'wa’ rep', hh: n, d: 'wa’ jaj', dd: n, M: 'wa’ jar', MM: n, y: 'wa’ DIS', yy: n }, dayOfMonthOrdinalParse: /\d{1,2}\./, ordinal: '%d.', week: { dow: 1, doy: 4 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; const t = { 1: "'inci", 5: "'inci", 8: "'inci", 70: "'inci", 80: "'inci", 2: "'nci", 7: "'nci", 20: "'nci", 50: "'nci", 3: "'üncü", 4: "'üncü", 100: "'üncü", 6: "'ncı", 9: "'uncu", 10: "'uncu", 30: "'uncu", 60: "'ıncı", 90: "'ıncı" }; e.defineLocale('tr', { months: 'Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık'.split('_'), monthsShort: 'Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara'.split('_'), weekdays: 'Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi'.split('_'), weekdaysShort: 'Paz_Pts_Sal_Çar_Per_Cum_Cts'.split('_'), weekdaysMin: 'Pz_Pt_Sa_Ça_Pe_Cu_Ct'.split('_'), meridiem (e, t, n) { return e < 12 ? n ? 'öö' : 'ÖÖ' : n ? 'ös' : 'ÖS' }, meridiemParse: /öö|ÖÖ|ös|ÖS/, isPM (input) { return input === 'ös' || input === 'ÖS' }, longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'DD.MM.YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY HH:mm', LLLL: 'dddd, D MMMM YYYY HH:mm' }, calendar: { sameDay: '[bugün saat] LT', nextDay: '[yarın saat] LT', nextWeek: '[gelecek] dddd [saat] LT', lastDay: '[dün] LT', lastWeek: '[geçen] dddd [saat] LT', sameElse: 'L' }, relativeTime: { future: '%s sonra', past: '%s önce', s: 'birkaç saniye', ss: '%d saniye', m: 'bir dakika', mm: '%d dakika', h: 'bir saat', hh: '%d saat', d: 'bir gün', dd: '%d gün', M: 'bir ay', MM: '%d ay', y: 'bir yıl', yy: '%d yıl' }, ordinal (e, n) { switch (n) { case 'd':case 'D':case 'Do':case 'DD':return e; default:if (e === 0) { return e + "'ıncı" } var a = e % 10; return e + (t[a] || t[e % 100 - a] || t[e >= 100 ? 100 : null]) } }, week: { dow: 1, doy: 7 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; function t (e, t, n, r) { const o = { s: ['viensas secunds', "'iensas secunds"], ss: [e + ' secunds', e + ' secunds'], m: ["'n míut", "'iens míut"], mm: [e + ' míuts', e + ' míuts'], h: ["'n þora", "'iensa þora"], hh: [e + ' þoras', e + ' þoras'], d: ["'n ziua", "'iensa ziua"], dd: [e + ' ziuas', e + ' ziuas'], M: ["'n mes", "'iens mes"], MM: [e + ' mesen', e + ' mesen'], y: ["'n ar", "'iens ar"], yy: [e + ' ars', e + ' ars'] }; return r || t ? o[n][0] : o[n][1] }e.defineLocale('tzl', { months: 'Januar_Fevraglh_Març_Avrïu_Mai_Gün_Julia_Guscht_Setemvar_Listopäts_Noemvar_Zecemvar'.split('_'), monthsShort: 'Jan_Fev_Mar_Avr_Mai_Gün_Jul_Gus_Set_Lis_Noe_Zec'.split('_'), weekdays: 'Súladi_Lúneçi_Maitzi_Márcuri_Xhúadi_Viénerçi_Sáturi'.split('_'), weekdaysShort: 'Súl_Lún_Mai_Már_Xhú_Vié_Sát'.split('_'), weekdaysMin: 'Sú_Lú_Ma_Má_Xh_Vi_Sá'.split('_'), longDateFormat: { LT: 'HH.mm', LTS: 'HH.mm.ss', L: 'DD.MM.YYYY', LL: 'D. MMMM [dallas] YYYY', LLL: 'D. MMMM [dallas] YYYY HH.mm', LLLL: 'dddd, [li] D. MMMM [dallas] YYYY HH.mm' }, meridiemParse: /d\'o|d\'a/i, isPM (input) { return input.toLowerCase() === "d'o" }, meridiem (e, t, n) { return e > 11 ? n ? "d'o" : "D'O" : n ? "d'a" : "D'A" }, calendar: { sameDay: '[oxhi à] LT', nextDay: '[demà à] LT', nextWeek: 'dddd [à] LT', lastDay: '[ieiri à] LT', lastWeek: '[sür el] dddd [lasteu à] LT', sameElse: 'L' }, relativeTime: { future: 'osprei %s', past: 'ja%s', s: t, ss: t, m: t, mm: t, h: t, hh: t, d: t, dd: t, M: t, MM: t, y: t, yy: t }, dayOfMonthOrdinalParse: /\d{1,2}\./, ordinal: '%d.', week: { dow: 1, doy: 4 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; e.defineLocale('tzm', { months: 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'), monthsShort: 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'), weekdays: 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'), weekdaysShort: 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'), weekdaysMin: 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'), longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'DD/MM/YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY HH:mm', LLLL: 'dddd D MMMM YYYY HH:mm' }, calendar: { sameDay: '[ⴰⵙⴷⵅ ⴴ] LT', nextDay: '[ⴰⵙⴽⴰ ⴴ] LT', nextWeek: 'dddd [ⴴ] LT', lastDay: '[ⴰⵚⴰⵏⵜ ⴴ] LT', lastWeek: 'dddd [ⴴ] LT', sameElse: 'L' }, relativeTime: { future: 'ⴷⴰⴷⵅ ⵙ ⵢⴰⵏ %s', past: 'ⵢⴰⵏ %s', s: 'ⵉⵎⵉⴽ', ss: '%d ⵉⵎⵉⴽ', m: 'ⵎⵉⵏⵓⴺ', mm: '%d ⵎⵉⵏⵓⴺ', h: 'ⵙⴰⵄⴰ', hh: '%d ⵜⴰⵙⵙⴰⵄⵉⵏ', d: 'ⴰⵙⵙ', dd: '%d oⵙⵙⴰⵏ', M: 'ⴰⵢoⵓⵔ', MM: '%d ⵉⵢⵢⵉⵔⵏ', y: 'ⴰⵙⴳⴰⵙ', yy: '%d ⵉⵙⴳⴰⵙⵏ' }, week: { dow: 6, doy: 12 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; e.defineLocale('tzm-latn', { months: 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'), monthsShort: 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'), weekdays: 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'), weekdaysShort: 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'), weekdaysMin: 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'), longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'DD/MM/YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY HH:mm', LLLL: 'dddd D MMMM YYYY HH:mm' }, calendar: { sameDay: '[asdkh g] LT', nextDay: '[aska g] LT', nextWeek: 'dddd [g] LT', lastDay: '[assant g] LT', lastWeek: 'dddd [g] LT', sameElse: 'L' }, relativeTime: { future: 'dadkh s yan %s', past: 'yan %s', s: 'imik', ss: '%d imik', m: 'minuḍ', mm: '%d minuḍ', h: 'saɛa', hh: '%d tassaɛin', d: 'ass', dd: '%d ossan', M: 'ayowr', MM: '%d iyyirn', y: 'asgas', yy: '%d isgasn' }, week: { dow: 6, doy: 12 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; e.defineLocale('ug-cn', { months: 'يانۋار_فېۋرال_مارت_ئاپرېل_ماي_ئىيۇن_ئىيۇل_ئاۋغۇست_سېنتەبىر_ئۆكتەبىر_نويابىر_دېكابىر'.split('_'), monthsShort: 'يانۋار_فېۋرال_مارت_ئاپرېل_ماي_ئىيۇن_ئىيۇل_ئاۋغۇست_سېنتەبىر_ئۆكتەبىر_نويابىر_دېكابىر'.split('_'), weekdays: 'يەكشەنبە_دۈشەنبە_سەيشەنبە_چارشەنبە_پەيشەنبە_جۈمە_شەنبە'.split('_'), weekdaysShort: 'يە_دۈ_سە_چا_پە_جۈ_شە'.split('_'), weekdaysMin: 'يە_دۈ_سە_چا_پە_جۈ_شە'.split('_'), longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'YYYY-MM-DD', LL: 'YYYY-يىلىM-ئاينىڭD-كۈنى', LLL: 'YYYY-يىلىM-ئاينىڭD-كۈنى، HH:mm', LLLL: 'dddd، YYYY-يىلىM-ئاينىڭD-كۈنى، HH:mm' }, meridiemParse: /يېرىم كېچە|سەھەر|چۈشتىن بۇرۇن|چۈش|چۈشتىن كېيىن|كەچ/, meridiemHour (e, t) { return e === 12 && (e = 0), t === 'يېرىم كېچە' || t === 'سەھەر' || t === 'چۈشتىن بۇرۇن' ? e : t === 'چۈشتىن كېيىن' || t === 'كەچ' ? e + 12 : e >= 11 ? e : e + 12 }, meridiem (e, t, n) { const r = 100 * e + t; return r < 600 ? 'يېرىم كېچە' : r < 900 ? 'سەھەر' : r < 1130 ? 'چۈشتىن بۇرۇن' : r < 1230 ? 'چۈش' : r < 1800 ? 'چۈشتىن كېيىن' : 'كەچ' }, calendar: { sameDay: '[بۈگۈن سائەت] LT', nextDay: '[ئەتە سائەت] LT', nextWeek: '[كېلەركى] dddd [سائەت] LT', lastDay: '[تۆنۈگۈن] LT', lastWeek: '[ئالدىنقى] dddd [سائەت] LT', sameElse: 'L' }, relativeTime: { future: '%s كېيىن', past: '%s بۇرۇن', s: 'نەچچە سېكونت', ss: '%d سېكونت', m: 'بىر مىنۇت', mm: '%d مىنۇت', h: 'بىر سائەت', hh: '%d سائەت', d: 'بىر كۈن', dd: '%d كۈن', M: 'بىر ئاي', MM: '%d ئاي', y: 'بىر يىل', yy: '%d يىل' }, dayOfMonthOrdinalParse: /\d{1,2}(-كۈنى|-ئاي|-ھەپتە)/, ordinal (e, t) { switch (t) { case 'd':case 'D':case 'DDD':return e + '-كۈنى'; case 'w':case 'W':return e + '-ھەپتە'; default:return e } }, preparse (e) { return e.replace(/،/g, ',') }, postformat (e) { return e.replace(/,/g, '،') }, week: { dow: 1, doy: 7 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; function t (e, t, n) { let r, o; return n === 'm' ? t ? 'хвилина' : 'хвилину' : n === 'h' ? t ? 'година' : 'годину' : e + ' ' + (r = +e, o = { ss: t ? 'секунда_секунди_секунд' : 'секунду_секунди_секунд', mm: t ? 'хвилина_хвилини_хвилин' : 'хвилину_хвилини_хвилин', hh: t ? 'година_години_годин' : 'годину_години_годин', dd: 'день_дні_днів', MM: 'місяць_місяці_місяців', yy: 'рік_роки_років' }[n].split('_'), r % 10 == 1 && r % 100 != 11 ? o[0] : r % 10 >= 2 && r % 10 <= 4 && (r % 100 < 10 || r % 100 >= 20) ? o[1] : o[2]) } function n (e) { return function () { return e + 'о' + (this.hours() === 11 ? 'б' : '') + '] LT' } }e.defineLocale('uk', { months: { format: 'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split('_'), standalone: 'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split('_') }, monthsShort: 'січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд'.split('_'), weekdays (e, t) { const n = { nominative: 'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split('_'), accusative: 'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split('_'), genitive: 'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split('_') }; return !0 === e ? n.nominative.slice(1, 7).concat(n.nominative.slice(0, 1)) : e ? n[/(\[[ВвУу]\]) ?dddd/.test(t) ? 'accusative' : /\[?(?:минулої|наступної)? ?\] ?dddd/.test(t) ? 'genitive' : 'nominative'][e.day()] : n.nominative }, weekdaysShort: 'нд_пн_вт_ср_чт_пт_сб'.split('_'), weekdaysMin: 'нд_пн_вт_ср_чт_пт_сб'.split('_'), longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'DD.MM.YYYY', LL: 'D MMMM YYYY р.', LLL: 'D MMMM YYYY р., HH:mm', LLLL: 'dddd, D MMMM YYYY р., HH:mm' }, calendar: { sameDay: n('[Сьогодні '), nextDay: n('[Завтра '), lastDay: n('[Вчора '), nextWeek: n('[У] dddd ['), lastWeek () { switch (this.day()) { case 0:case 3:case 5:case 6:return n('[Минулої] dddd [').call(this); case 1:case 2:case 4:return n('[Минулого] dddd [').call(this) } }, sameElse: 'L' }, relativeTime: { future: 'за %s', past: '%s тому', s: 'декілька секунд', ss: t, m: t, mm: t, h: 'годину', hh: t, d: 'день', dd: t, M: 'місяць', MM: t, y: 'рік', yy: t }, meridiemParse: /ночі|ранку|дня|вечора/, isPM (input) { return /^(дня|вечора)$/.test(input) }, meridiem (e, t, n) { return e < 4 ? 'ночі' : e < 12 ? 'ранку' : e < 17 ? 'дня' : 'вечора' }, dayOfMonthOrdinalParse: /\d{1,2}-(й|го)/, ordinal (e, t) { switch (t) { case 'M':case 'd':case 'DDD':case 'w':case 'W':return e + '-й'; case 'D':return e + '-го'; default:return e } }, week: { dow: 1, doy: 7 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; const t = ['جنوری', 'فروری', 'مارچ', 'اپریل', 'مئی', 'جون', 'جولائی', 'اگست', 'ستمبر', 'اکتوبر', 'نومبر', 'دسمبر']; const n = ['اتوار', 'پیر', 'منگل', 'بدھ', 'جمعرات', 'جمعہ', 'ہفتہ']; e.defineLocale('ur', { months: t, monthsShort: t, weekdays: n, weekdaysShort: n, weekdaysMin: n, longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'DD/MM/YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY HH:mm', LLLL: 'dddd، D MMMM YYYY HH:mm' }, meridiemParse: /صبح|شام/, isPM (input) { return input === 'شام' }, meridiem (e, t, n) { return e < 12 ? 'صبح' : 'شام' }, calendar: { sameDay: '[آج بوقت] LT', nextDay: '[کل بوقت] LT', nextWeek: 'dddd [بوقت] LT', lastDay: '[گذشتہ روز بوقت] LT', lastWeek: '[گذشتہ] dddd [بوقت] LT', sameElse: 'L' }, relativeTime: { future: '%s بعد', past: '%s قبل', s: 'چند سیکنڈ', ss: '%d سیکنڈ', m: 'ایک منٹ', mm: '%d منٹ', h: 'ایک گھنٹہ', hh: '%d گھنٹے', d: 'ایک دن', dd: '%d دن', M: 'ایک ماہ', MM: '%d ماہ', y: 'ایک سال', yy: '%d سال' }, preparse (e) { return e.replace(/،/g, ',') }, postformat (e) { return e.replace(/,/g, '،') }, week: { dow: 1, doy: 4 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; e.defineLocale('uz', { months: 'январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр'.split('_'), monthsShort: 'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'), weekdays: 'Якшанба_Душанба_Сешанба_Чоршанба_Пайшанба_Жума_Шанба'.split('_'), weekdaysShort: 'Якш_Душ_Сеш_Чор_Пай_Жум_Шан'.split('_'), weekdaysMin: 'Як_Ду_Се_Чо_Па_Жу_Ша'.split('_'), longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'DD/MM/YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY HH:mm', LLLL: 'D MMMM YYYY, dddd HH:mm' }, calendar: { sameDay: '[Бугун соат] LT [да]', nextDay: '[Эртага] LT [да]', nextWeek: 'dddd [куни соат] LT [да]', lastDay: '[Кеча соат] LT [да]', lastWeek: '[Утган] dddd [куни соат] LT [да]', sameElse: 'L' }, relativeTime: { future: 'Якин %s ичида', past: 'Бир неча %s олдин', s: 'фурсат', ss: '%d фурсат', m: 'бир дакика', mm: '%d дакика', h: 'бир соат', hh: '%d соат', d: 'бир кун', dd: '%d кун', M: 'бир ой', MM: '%d ой', y: 'бир йил', yy: '%d йил' }, week: { dow: 1, doy: 7 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; e.defineLocale('uz-latn', { months: 'Yanvar_Fevral_Mart_Aprel_May_Iyun_Iyul_Avgust_Sentabr_Oktabr_Noyabr_Dekabr'.split('_'), monthsShort: 'Yan_Fev_Mar_Apr_May_Iyun_Iyul_Avg_Sen_Okt_Noy_Dek'.split('_'), weekdays: 'Yakshanba_Dushanba_Seshanba_Chorshanba_Payshanba_Juma_Shanba'.split('_'), weekdaysShort: 'Yak_Dush_Sesh_Chor_Pay_Jum_Shan'.split('_'), weekdaysMin: 'Ya_Du_Se_Cho_Pa_Ju_Sha'.split('_'), longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'DD/MM/YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY HH:mm', LLLL: 'D MMMM YYYY, dddd HH:mm' }, calendar: { sameDay: '[Bugun soat] LT [da]', nextDay: '[Ertaga] LT [da]', nextWeek: 'dddd [kuni soat] LT [da]', lastDay: '[Kecha soat] LT [da]', lastWeek: "[O'tgan] dddd [kuni soat] LT [da]", sameElse: 'L' }, relativeTime: { future: 'Yaqin %s ichida', past: 'Bir necha %s oldin', s: 'soniya', ss: '%d soniya', m: 'bir daqiqa', mm: '%d daqiqa', h: 'bir soat', hh: '%d soat', d: 'bir kun', dd: '%d kun', M: 'bir oy', MM: '%d oy', y: 'bir yil', yy: '%d yil' }, week: { dow: 1, doy: 7 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; e.defineLocale('vi', { months: 'tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12'.split('_'), monthsShort: 'Thg 01_Thg 02_Thg 03_Thg 04_Thg 05_Thg 06_Thg 07_Thg 08_Thg 09_Thg 10_Thg 11_Thg 12'.split('_'), monthsParseExact: !0, weekdays: 'chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy'.split('_'), weekdaysShort: 'CN_T2_T3_T4_T5_T6_T7'.split('_'), weekdaysMin: 'CN_T2_T3_T4_T5_T6_T7'.split('_'), weekdaysParseExact: !0, meridiemParse: /sa|ch/i, isPM (input) { return /^ch$/i.test(input) }, meridiem (e, t, n) { return e < 12 ? n ? 'sa' : 'SA' : n ? 'ch' : 'CH' }, longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'DD/MM/YYYY', LL: 'D MMMM [năm] YYYY', LLL: 'D MMMM [năm] YYYY HH:mm', LLLL: 'dddd, D MMMM [năm] YYYY HH:mm', l: 'DD/M/YYYY', ll: 'D MMM YYYY', lll: 'D MMM YYYY HH:mm', llll: 'ddd, D MMM YYYY HH:mm' }, calendar: { sameDay: '[Hôm nay lúc] LT', nextDay: '[Ngày mai lúc] LT', nextWeek: 'dddd [tuần tới lúc] LT', lastDay: '[Hôm qua lúc] LT', lastWeek: 'dddd [tuần trước lúc] LT', sameElse: 'L' }, relativeTime: { future: '%s tới', past: '%s trước', s: 'vài giây', ss: '%d giây', m: 'một phút', mm: '%d phút', h: 'một giờ', hh: '%d giờ', d: 'một ngày', dd: '%d ngày', M: 'một tháng', MM: '%d tháng', y: 'một năm', yy: '%d năm' }, dayOfMonthOrdinalParse: /\d{1,2}/, ordinal (e) { return e }, week: { dow: 1, doy: 4 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; e.defineLocale('x-pseudo', { months: 'J~áñúá~rý_F~ébrú~árý_~Márc~h_Áp~ríl_~Máý_~Júñé~_Júl~ý_Áú~gúst~_Sép~témb~ér_Ó~ctób~ér_Ñ~óvém~bér_~Décé~mbér'.split('_'), monthsShort: 'J~áñ_~Féb_~Már_~Ápr_~Máý_~Júñ_~Júl_~Áúg_~Sép_~Óct_~Ñóv_~Déc'.split('_'), monthsParseExact: !0, weekdays: 'S~úñdá~ý_Mó~ñdáý~_Túé~sdáý~_Wéd~ñésd~áý_T~húrs~dáý_~Fríd~áý_S~átúr~dáý'.split('_'), weekdaysShort: 'S~úñ_~Móñ_~Túé_~Wéd_~Thú_~Frí_~Sát'.split('_'), weekdaysMin: 'S~ú_Mó~_Tú_~Wé_T~h_Fr~_Sá'.split('_'), weekdaysParseExact: !0, longDateFormat: { LT: 'HH:mm', L: 'DD/MM/YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY HH:mm', LLLL: 'dddd, D MMMM YYYY HH:mm' }, calendar: { sameDay: '[T~ódá~ý át] LT', nextDay: '[T~ómó~rró~w át] LT', nextWeek: 'dddd [át] LT', lastDay: '[Ý~ést~érdá~ý át] LT', lastWeek: '[L~ást] dddd [át] LT', sameElse: 'L' }, relativeTime: { future: 'í~ñ %s', past: '%s á~gó', s: 'á ~féw ~sécó~ñds', ss: '%d s~écóñ~ds', m: 'á ~míñ~úté', mm: '%d m~íñú~tés', h: 'á~ñ hó~úr', hh: '%d h~óúrs', d: 'á ~dáý', dd: '%d d~áýs', M: 'á ~móñ~th', MM: '%d m~óñt~hs', y: 'á ~ýéár', yy: '%d ý~éárs' }, dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/, ordinal (e) { const b = e % 10; return e + (~~(e % 100 / 10) == 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th') }, week: { dow: 1, doy: 4 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; e.defineLocale('yo', { months: 'Sẹ́rẹ́_Èrèlè_Ẹrẹ̀nà_Ìgbé_Èbibi_Òkùdu_Agẹmo_Ògún_Owewe_Ọ̀wàrà_Bélú_Ọ̀pẹ̀̀'.split('_'), monthsShort: 'Sẹ́r_Èrl_Ẹrn_Ìgb_Èbi_Òkù_Agẹ_Ògú_Owe_Ọ̀wà_Bél_Ọ̀pẹ̀̀'.split('_'), weekdays: 'Àìkú_Ajé_Ìsẹ́gun_Ọjọ́rú_Ọjọ́bọ_Ẹtì_Àbámẹ́ta'.split('_'), weekdaysShort: 'Àìk_Ajé_Ìsẹ́_Ọjr_Ọjb_Ẹtì_Àbá'.split('_'), weekdaysMin: 'Àì_Aj_Ìs_Ọr_Ọb_Ẹt_Àb'.split('_'), longDateFormat: { LT: 'h:mm A', LTS: 'h:mm:ss A', L: 'DD/MM/YYYY', LL: 'D MMMM YYYY', LLL: 'D MMMM YYYY h:mm A', LLLL: 'dddd, D MMMM YYYY h:mm A' }, calendar: { sameDay: '[Ònì ni] LT', nextDay: '[Ọ̀la ni] LT', nextWeek: "dddd [Ọsẹ̀ tón'bọ] [ni] LT", lastDay: '[Àna ni] LT', lastWeek: 'dddd [Ọsẹ̀ tólọ́] [ni] LT', sameElse: 'L' }, relativeTime: { future: 'ní %s', past: '%s kọjá', s: 'ìsẹjú aayá die', ss: 'aayá %d', m: 'ìsẹjú kan', mm: 'ìsẹjú %d', h: 'wákati kan', hh: 'wákati %d', d: 'ọjọ́ kan', dd: 'ọjọ́ %d', M: 'osù kan', MM: 'osù %d', y: 'ọdún kan', yy: 'ọdún %d' }, dayOfMonthOrdinalParse: /ọjọ́\s\d{1,2}/, ordinal: 'ọjọ́ %d', week: { dow: 1, doy: 4 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; e.defineLocale('zh-cn', { months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'), monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'), weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'), weekdaysShort: '周日_周一_周二_周三_周四_周五_周六'.split('_'), weekdaysMin: '日_一_二_三_四_五_六'.split('_'), longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'YYYY/MM/DD', LL: 'YYYY年M月D日', LLL: 'YYYY年M月D日Ah点mm分', LLLL: 'YYYY年M月D日ddddAh点mm分', l: 'YYYY/M/D', ll: 'YYYY年M月D日', lll: 'YYYY年M月D日 HH:mm', llll: 'YYYY年M月D日dddd HH:mm' }, meridiemParse: /凌晨|早上|上午|中午|下午|晚上/, meridiemHour (e, t) { return e === 12 && (e = 0), t === '凌晨' || t === '早上' || t === '上午' ? e : t === '下午' || t === '晚上' ? e + 12 : e >= 11 ? e : e + 12 }, meridiem (e, t, n) { const r = 100 * e + t; return r < 600 ? '凌晨' : r < 900 ? '早上' : r < 1130 ? '上午' : r < 1230 ? '中午' : r < 1800 ? '下午' : '晚上' }, calendar: { sameDay: '[今天]LT', nextDay: '[明天]LT', nextWeek (e) { return e.week() !== this.week() ? '[下]dddLT' : '[本]dddLT' }, lastDay: '[昨天]LT', lastWeek (e) { return this.week() !== e.week() ? '[上]dddLT' : '[本]dddLT' }, sameElse: 'L' }, dayOfMonthOrdinalParse: /\d{1,2}(日|月|周)/, ordinal (e, t) { switch (t) { case 'd':case 'D':case 'DDD':return e + '日'; case 'M':return e + '月'; case 'w':case 'W':return e + '周'; default:return e } }, relativeTime: { future: '%s后', past: '%s前', s: '几秒', ss: '%d 秒', m: '1 分钟', mm: '%d 分钟', h: '1 小时', hh: '%d 小时', d: '1 天', dd: '%d 天', M: '1 个月', MM: '%d 个月', y: '1 年', yy: '%d 年' }, week: { dow: 1, doy: 4 } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; e.defineLocale('zh-hk', { months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'), monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'), weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'), weekdaysShort: '週日_週一_週二_週三_週四_週五_週六'.split('_'), weekdaysMin: '日_一_二_三_四_五_六'.split('_'), longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'YYYY/MM/DD', LL: 'YYYY年M月D日', LLL: 'YYYY年M月D日 HH:mm', LLLL: 'YYYY年M月D日dddd HH:mm', l: 'YYYY/M/D', ll: 'YYYY年M月D日', lll: 'YYYY年M月D日 HH:mm', llll: 'YYYY年M月D日dddd HH:mm' }, meridiemParse: /凌晨|早上|上午|中午|下午|晚上/, meridiemHour (e, t) { return e === 12 && (e = 0), t === '凌晨' || t === '早上' || t === '上午' ? e : t === '中午' ? e >= 11 ? e : e + 12 : t === '下午' || t === '晚上' ? e + 12 : void 0 }, meridiem (e, t, n) { const r = 100 * e + t; return r < 600 ? '凌晨' : r < 900 ? '早上' : r < 1200 ? '上午' : r === 1200 ? '中午' : r < 1800 ? '下午' : '晚上' }, calendar: { sameDay: '[今天]LT', nextDay: '[明天]LT', nextWeek: '[下]ddddLT', lastDay: '[昨天]LT', lastWeek: '[上]ddddLT', sameElse: 'L' }, dayOfMonthOrdinalParse: /\d{1,2}(日|月|週)/, ordinal (e, t) { switch (t) { case 'd':case 'D':case 'DDD':return e + '日'; case 'M':return e + '月'; case 'w':case 'W':return e + '週'; default:return e } }, relativeTime: { future: '%s後', past: '%s前', s: '幾秒', ss: '%d 秒', m: '1 分鐘', mm: '%d 分鐘', h: '1 小時', hh: '%d 小時', d: '1 天', dd: '%d 天', M: '1 個月', MM: '%d 個月', y: '1 年', yy: '%d 年' } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; e.defineLocale('zh-mo', { months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'), monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'), weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'), weekdaysShort: '週日_週一_週二_週三_週四_週五_週六'.split('_'), weekdaysMin: '日_一_二_三_四_五_六'.split('_'), longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'DD/MM/YYYY', LL: 'YYYY年M月D日', LLL: 'YYYY年M月D日 HH:mm', LLLL: 'YYYY年M月D日dddd HH:mm', l: 'D/M/YYYY', ll: 'YYYY年M月D日', lll: 'YYYY年M月D日 HH:mm', llll: 'YYYY年M月D日dddd HH:mm' }, meridiemParse: /凌晨|早上|上午|中午|下午|晚上/, meridiemHour (e, t) { return e === 12 && (e = 0), t === '凌晨' || t === '早上' || t === '上午' ? e : t === '中午' ? e >= 11 ? e : e + 12 : t === '下午' || t === '晚上' ? e + 12 : void 0 }, meridiem (e, t, n) { const r = 100 * e + t; return r < 600 ? '凌晨' : r < 900 ? '早上' : r < 1130 ? '上午' : r < 1230 ? '中午' : r < 1800 ? '下午' : '晚上' }, calendar: { sameDay: '[今天] LT', nextDay: '[明天] LT', nextWeek: '[下]dddd LT', lastDay: '[昨天] LT', lastWeek: '[上]dddd LT', sameElse: 'L' }, dayOfMonthOrdinalParse: /\d{1,2}(日|月|週)/, ordinal (e, t) { switch (t) { case 'd':case 'D':case 'DDD':return e + '日'; case 'M':return e + '月'; case 'w':case 'W':return e + '週'; default:return e } }, relativeTime: { future: '%s內', past: '%s前', s: '幾秒', ss: '%d 秒', m: '1 分鐘', mm: '%d 分鐘', h: '1 小時', hh: '%d 小時', d: '1 天', dd: '%d 天', M: '1 個月', MM: '%d 個月', y: '1 年', yy: '%d 年' } }) }(n(0))) }, function (e, t, n) { !(function (e) { 'use strict'; e.defineLocale('zh-tw', { months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'), monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'), weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'), weekdaysShort: '週日_週一_週二_週三_週四_週五_週六'.split('_'), weekdaysMin: '日_一_二_三_四_五_六'.split('_'), longDateFormat: { LT: 'HH:mm', LTS: 'HH:mm:ss', L: 'YYYY/MM/DD', LL: 'YYYY年M月D日', LLL: 'YYYY年M月D日 HH:mm', LLLL: 'YYYY年M月D日dddd HH:mm', l: 'YYYY/M/D', ll: 'YYYY年M月D日', lll: 'YYYY年M月D日 HH:mm', llll: 'YYYY年M月D日dddd HH:mm' }, meridiemParse: /凌晨|早上|上午|中午|下午|晚上/, meridiemHour (e, t) { return e === 12 && (e = 0), t === '凌晨' || t === '早上' || t === '上午' ? e : t === '中午' ? e >= 11 ? e : e + 12 : t === '下午' || t === '晚上' ? e + 12 : void 0 }, meridiem (e, t, n) { const r = 100 * e + t; return r < 600 ? '凌晨' : r < 900 ? '早上' : r < 1130 ? '上午' : r < 1230 ? '中午' : r < 1800 ? '下午' : '晚上' }, calendar: { sameDay: '[今天] LT', nextDay: '[明天] LT', nextWeek: '[下]dddd LT', lastDay: '[昨天] LT', lastWeek: '[上]dddd LT', sameElse: 'L' }, dayOfMonthOrdinalParse: /\d{1,2}(日|月|週)/, ordinal (e, t) { switch (t) { case 'd':case 'D':case 'DDD':return e + '日'; case 'M':return e + '月'; case 'w':case 'W':return e + '週'; default:return e } }, relativeTime: { future: '%s後', past: '%s前', s: '幾秒', ss: '%d 秒', m: '1 分鐘', mm: '%d 分鐘', h: '1 小時', hh: '%d 小時', d: '1 天', dd: '%d 天', M: '1 個月', MM: '%d 個月', y: '1 年', yy: '%d 年' } }) }(n(0))) }, function (e, t, n) { 'use strict'; t.a = function (e, t) { return t = t || {}, new Promise(function (n, r) { const s = new XMLHttpRequest(); const o = []; const u = []; const i = {}; var a = function () { return { ok: (s.status / 100 | 0) == 2, statusText: s.statusText, status: s.status, url: s.responseURL, text () { return Promise.resolve(s.responseText) }, json () { return Promise.resolve(JSON.parse(s.responseText)) }, blob () { return Promise.resolve(new Blob([s.response])) }, clone: a, headers: { keys () { return o }, entries () { return u }, get (e) { return i[e.toLowerCase()] }, has (e) { return e.toLowerCase() in i } } } }; for (const d in s.open(t.method || 'get', e, !0), s.onload = function () { s.getAllResponseHeaders().replace(/^(.*?):[^\S\n]*([\s\S]*?)$/gm, function (e, t, n) { o.push(t = t.toLowerCase()), u.push([t, n]), i[t] = i[t] ? i[t] + ',' + n : n }), n(a()) }, s.onerror = r, s.withCredentials = t.credentials == 'include', t.headers) { s.setRequestHeader(d, t.headers[d]) }s.send(t.body || null) }) } },, function (e, t, n) { 'use strict'; const r = function (e) { return (function (e) { return !!e && typeof e === 'object' }(e)) && !(function (e) { const t = Object.prototype.toString.call(e); return t === '[object RegExp]' || t === '[object Date]' || (function (e) { return e.$$typeof === o }(e)) }(e)) }; var o = typeof Symbol === 'function' && Symbol.for ? Symbol.for('react.element') : 60103; function d (e, t) { return !1 !== t.clone && t.isMergeableObject(e) ? h((n = e, Array.isArray(n) ? [] : {}), e, t) : e; let n } function _ (e, source, t) { return e.concat(source).map(function (element) { return d(element, t) }) } function l (e) { return Object.keys(e).concat(function (e) { return Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols(e).filter(function (symbol) { return e.propertyIsEnumerable(symbol) }) : [] }(e)) } function c (object, e) { try { return e in object } catch (e) { return !1 } } function m (e, source, t) { const n = {}; return t.isMergeableObject(e) && l(e).forEach(function (r) { n[r] = d(e[r], t) }), l(source).forEach(function (r) { (function (e, t) { return c(e, t) && !(Object.hasOwnProperty.call(e, t) && Object.propertyIsEnumerable.call(e, t)) })(e, r) || (c(e, r) && t.isMergeableObject(source[r]) ? n[r] = (function (e, t) { if (!t.customMerge) { return h } const n = t.customMerge(e); return typeof n === 'function' ? n : h }(r, t))(e[r], source[r], t) : n[r] = d(source[r], t)) }), n } function h (e, source, t) { (t = t || {}).arrayMerge = t.arrayMerge || _, t.isMergeableObject = t.isMergeableObject || r, t.cloneUnlessOtherwiseSpecified = d; const n = Array.isArray(source); return n === Array.isArray(e) ? n ? t.arrayMerge(e, source, t) : m(e, source, t) : d(source, t) }h.all = function (e, t) { if (!Array.isArray(e)) { throw new TypeError('first argument should be an array') } return e.reduce(function (e, n) { return h(e, n, t) }, {}) }; const f = h; e.exports = f }, function (e, t, n) { 'use strict'; function r (e) { return (r = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function (e) { return typeof e } : function (e) { return e && typeof Symbol === 'function' && e.constructor === Symbol && e !== Symbol.prototype ? 'symbol' : typeof e })(e) } function o (e) { return e !== null && r(e) === 'object' && !Array.isArray(e) } function d (e, t) { if (!o(e)) { return d({}, t) } if (!o(t)) { return d(e, {}) } const n = Object.assign({}, t); for (const r in e) { if (r !== '__proto__' && r !== 'constructor') { const _ = e[r]; _ !== null && (o(_) && o(n[r]) ? n[r] = d(_, n[r]) : n[r] = _) } } return n }e.exports = function () { for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++) { t[n] = arguments[n] } return t.reduce(d, {}) } }, function (e, t, n) { 'use strict'; n(16), n(18); const r = n(3); const o = n(1); const d = n(2); const _ = window.__NUXT__; function l () { if (!this._hydrated) { return this.$fetch() } } function c () { if ((e = this).$vnode && e.$vnode.elm && e.$vnode.elm.dataset && e.$vnode.elm.dataset.fetchKey) { var e; this._hydrated = !0, this._fetchKey = +this.$vnode.elm.dataset.fetchKey; const data = _.fetch[this._fetchKey]; if (data && data._error) { this.$fetchState.error = data._error } else { for (const t in data) { o.a.set(this.$data, t, data[t]) } } } else { m.call(this) } } function m () { let e = !1 !== this.$options.fetchOnServer; if (typeof this.$options.fetchOnServer === 'function' && (e = !1 !== this.$options.fetchOnServer.call(this)), e && !this.$nuxt.isPreview && this.$nuxt._pagePayload) { this._hydrated = !0, this._fetchKey = this.$nuxt._payloadFetchIndex++; const data = this.$nuxt._pagePayload.fetch[this._fetchKey]; if (data && data._error) { this.$fetchState.error = data._error } else { for (const t in data) { o.a.set(this.$data, t, data[t]) } } } } function h () { const e = this; return this._fetchPromise || (this._fetchPromise = f.call(this).then(function () { delete e._fetchPromise })), this._fetchPromise } function f () { return M.apply(this, arguments) } function M () { return (M = Object(r.a)(regeneratorRuntime.mark(function e () { let t; let n; let r; const o = this; return regeneratorRuntime.wrap(function (e) { for (;;) { switch (e.prev = e.next) { case 0:return this.$nuxt.nbFetching++, this.$fetchState.pending = !0, this.$fetchState.error = null, this._hydrated = !1, t = null, n = Date.now(), e.prev = 6, e.next = 9, this.$options.fetch.call(this); case 9:e.next = 15; break; case 11:e.prev = 11, e.t0 = e.catch(6), t = Object(d.o)(e.t0); case 15:if (!((r = this._fetchDelay - (Date.now() - n)) > 0)) { e.next = 19; break } return e.next = 19, new Promise(function (e) { return setTimeout(e, r) }); case 19:this.$fetchState.error = t, this.$fetchState.pending = !1, this.$fetchState.timestamp = Date.now(), this.$nextTick(function () { return o.$nuxt.nbFetching-- }); case 23:case 'end':return e.stop() } } }, e, this, [[6, 11]]) }))).apply(this, arguments) }t.a = { beforeCreate () { Object(d.l)(this) && (this._fetchDelay = typeof this.$options.fetchDelay === 'number' ? this.$options.fetchDelay : 200, o.a.util.defineReactive(this, '$fetchState', { pending: !1, error: null, timestamp: Date.now() }), this.$fetch = h.bind(this), Object(d.a)(this, 'created', c), Object(d.a)(this, 'beforeMount', l)) } } }, function (e, t, n) { n(265), e.exports = n(266) }, function (e, t, n) { (function (e) { e.installComponents = function (component, e) { const t = typeof component.exports === 'function' ? component.exports.extendOptions : component.options; for (const i in typeof component.exports === 'function' && (t.components = component.exports.options.components), t.components = t.components || {}, e) { t.components[i] = t.components[i] || e[i] }t.functional && (function (component, e) { if (component.exports._functionalComponents) { return } component.exports._functionalComponents = !0; const t = component.exports.render; component.exports.render = function (n, r) { return t(n, Object.assign({}, r, { _c (t, a, b) { return r._c(e[t] || t, a, b) } })) } }(component, t.components)) } }).call(this, n(29)) }, function (e, t, n) { 'use strict'; n.r(t), (function (e) { n(41), n(30), n(46), n(35), n(36), n(48); const t = n(39); const r = (n(18), n(277), n(3)); const o = (n(80), n(81), n(37), n(16), n(61), n(22), n(110), n(281), n(289), n(291), n(1)); const d = n(259); const _ = n(91); const l = n(2); const c = n(17); const m = n(263); const h = n(72); n(336); function f (e, t) { let n; if (typeof Symbol === 'undefined' || e[Symbol.iterator] == null) { if (Array.isArray(e) || (n = (function (e, t) { if (!e) { return } if (typeof e === 'string') { return M(e, t) } let n = Object.prototype.toString.call(e).slice(8, -1); n === 'Object' && e.constructor && (n = e.constructor.name); if (n === 'Map' || n === 'Set') { return Array.from(e) } if (n === 'Arguments' || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) { return M(e, t) } }(e))) || t && e && typeof e.length === 'number') { n && (e = n); let i = 0; const r = function () {}; return { s: r, n () { return i >= e.length ? { done: !0 } : { done: !1, value: e[i++] } }, e (e) { throw e }, f: r } } throw new TypeError('Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.') } let o; let d = !0; let _ = !1; return { s () { n = e[Symbol.iterator]() }, n () { const e = n.next(); return d = e.done, e }, e (e) { _ = !0, o = e }, f () { try { d || n.return == null || n.return() } finally { if (_) { throw o } } } } } function M (e, t) { (t == null || t > e.length) && (t = e.length); for (var i = 0, n = new Array(t); i < t; i++) { n[i] = e[i] } return n }o.a.__nuxt__fetch__mixin__ || (o.a.mixin(m.a), o.a.__nuxt__fetch__mixin__ = !0), o.a.component(h.a.name, h.a), o.a.component('NLink', h.a), e.fetch || (e.fetch = d.a); let y; let L; let Y = []; const k = window.__NUXT__ || {}; Object.assign(o.a.config, { silent: !0, performance: !1 }); const w = o.a.config.errorHandler || console.error; function v (e, t, n) { for (var r = function (component) { const e = (function (component, e) { if (!component || !component.options || !component.options[e]) { return {} } const option = component.options[e]; if (typeof option === 'function') { for (var t = arguments.length, n = new Array(t > 2 ? t - 2 : 0), r = 2; r < t; r++) { n[r - 2] = arguments[r] } return option.apply(void 0, n) } return option }(component, 'transition', t, n)) || {}; return typeof e === 'string' ? { name: e } : e }, o = n ? Object(l.g)(n) : [], d = Math.max(e.length, o.length), _ = [], c = function (i) { const t = Object.assign({}, r(e[i])); const n = Object.assign({}, r(o[i])); Object.keys(t).filter(function (e) { return void 0 !== t[e] && !e.toLowerCase().includes('leave') }).forEach(function (e) { n[e] = t[e] }), _.push(n) }, i = 0; i < d; i++) { c(i) } return _ } function D (e, t, n) { return T.apply(this, arguments) } function T () { return (T = Object(r.a)(regeneratorRuntime.mark(function e (t, n, r) { let o; let d; let _; let c; const m = this; return regeneratorRuntime.wrap(function (e) { for (;;) { switch (e.prev = e.next) { case 0:if (this._routeChanged = Boolean(y.nuxt.err) || n.name !== t.name, this._paramChanged = !this._routeChanged && n.path !== t.path, this._queryChanged = !this._paramChanged && n.fullPath !== t.fullPath, this._diffQuery = this._queryChanged ? Object(l.i)(t.query, n.query) : [], (this._routeChanged || this._paramChanged) && this.$loading.start && !this.$loading.manual && this.$loading.start(), e.prev = 5, !this._queryChanged) { e.next = 12; break } return e.next = 9, Object(l.q)(t, function (e, t) { return { Component: e, instance: t } }); case 9:o = e.sent, o.some(function (e) { const r = e.Component; const o = e.instance; const d = r.options.watchQuery; return !0 === d || (Array.isArray(d) ? d.some(function (e) { return m._diffQuery[e] }) : typeof d === 'function' && d.apply(o, [t.query, n.query])) }) && this.$loading.start && !this.$loading.manual && this.$loading.start(); case 12:r(), e.next = 26; break; case 15:if (e.prev = 15, e.t0 = e.catch(5), d = e.t0 || {}, _ = d.statusCode || d.status || d.response && d.response.status || 500, c = d.message || '', !/^Loading( CSS)? chunk (\d)+ failed\./.test(c)) { e.next = 23; break } return window.location.reload(!0), e.abrupt('return'); case 23:this.error({ statusCode: _, message: c }), this.$nuxt.$emit('routeChanged', t, n, d), r(); case 26:case 'end':return e.stop() } } }, e, this, [[5, 15]]) }))).apply(this, arguments) } function x (e, t) { return k.serverRendered && t && Object(l.b)(e, t), e._Ctor = e, e } function S (e) { const path = Object(l.f)(e.options.base, e.options.mode); return Object(l.d)(e.match(path), (function () { const e = Object(r.a)(regeneratorRuntime.mark(function e (t, n, r, o, d) { let _; return regeneratorRuntime.wrap(function (e) { for (;;) { switch (e.prev = e.next) { case 0:if (typeof t !== 'function' || t.options) { e.next = 4; break } return e.next = 3, t(); case 3:t = e.sent; case 4:return _ = x(Object(l.r)(t), k.data ? k.data[d] : null), r.components[o] = _, e.abrupt('return', _); case 7:case 'end':return e.stop() } } }, e) })); return function (t, n, r, o, d) { return e.apply(this, arguments) } }())) } function j (e, t, n) { const r = this; let o = []; let d = !1; if (void 0 !== n && (o = [], (n = Object(l.r)(n)).options.middleware && (o = o.concat(n.options.middleware)), e.forEach(function (e) { e.options.middleware && (o = o.concat(e.options.middleware)) })), o = o.map(function (e) { return typeof e === 'function' ? e : (typeof _.a[e] !== 'function' && (d = !0, r.error({ statusCode: 500, message: 'Unknown middleware ' + e })), _.a[e]) }), !d) { return Object(l.n)(o, t) } } function H (e, t, n) { return O.apply(this, arguments) } function O () { return (O = Object(r.a)(regeneratorRuntime.mark(function e (t, n, o) { let d; let _; let m; let h; let M; let L; let k; let w; let D; let T; let x; let S; let H; let O; let P; let W; const E = this; return regeneratorRuntime.wrap(function (e) { for (;;) { switch (e.prev = e.next) { case 0:if (!1 !== this._routeChanged || !1 !== this._paramChanged || !1 !== this._queryChanged) { e.next = 2; break } return e.abrupt('return', o()); case 2:return d = !1, t === n ? (Y = [], d = !0) : (_ = [], Y = Object(l.g)(n, _).map(function (e, i) { return Object(l.c)(n.matched[_[i]].path)(n.params) })), m = !1, h = function (path) { n.path === path.path && E.$loading.finish && E.$loading.finish(), n.path !== path.path && E.$loading.pause && E.$loading.pause(), m || (m = !0, o(path)) }, e.next = 8, Object(l.s)(y, { route: t, from: n, next: h.bind(this) }); case 8:if (this._dateLastError = y.nuxt.dateErr, this._hadError = Boolean(y.nuxt.err), M = [], (L = Object(l.g)(t, M)).length) { e.next = 27; break } return e.next = 15, j.call(this, L, y.context); case 15:if (!m) { e.next = 17; break } return e.abrupt('return'); case 17:return k = (c.a.options || c.a).layout, e.next = 20, this.loadLayout(typeof k === 'function' ? k.call(c.a, y.context) : k); case 20:return w = e.sent, e.next = 23, j.call(this, L, y.context, w); case 23:if (!m) { e.next = 25; break } return e.abrupt('return'); case 25:return y.context.error({ statusCode: 404, message: 'This page could not be found' }), e.abrupt('return', o()); case 27:return L.forEach(function (e) { e._Ctor && e._Ctor.options && (e.options.asyncData = e._Ctor.options.asyncData, e.options.fetch = e._Ctor.options.fetch) }), this.setTransitions(v(L, t, n)), e.prev = 29, e.next = 32, j.call(this, L, y.context); case 32:if (!m) { e.next = 34; break } return e.abrupt('return'); case 34:if (!y.context._errored) { e.next = 36; break } return e.abrupt('return', o()); case 36:return typeof (D = L[0].options.layout) === 'function' && (D = D(y.context)), e.next = 40, this.loadLayout(D); case 40:return D = e.sent, e.next = 43, j.call(this, L, y.context, D); case 43:if (!m) { e.next = 45; break } return e.abrupt('return'); case 45:if (!y.context._errored) { e.next = 47; break } return e.abrupt('return', o()); case 47:T = !0, e.prev = 48, x = f(L), e.prev = 50, x.s(); case 52:if ((S = x.n()).done) { e.next = 63; break } if (typeof (H = S.value).options.validate === 'function') { e.next = 56; break } return e.abrupt('continue', 61); case 56:return e.next = 58, H.options.validate(y.context); case 58:if (T = e.sent) { e.next = 61; break } return e.abrupt('break', 63); case 61:e.next = 52; break; case 63:e.next = 68; break; case 65:e.prev = 65, e.t0 = e.catch(50), x.e(e.t0); case 68:return e.prev = 68, x.f(), e.finish(68); case 71:e.next = 77; break; case 73:return e.prev = 73, e.t1 = e.catch(48), this.error({ statusCode: e.t1.statusCode || '500', message: e.t1.message }), e.abrupt('return', o()); case 77:if (T) { e.next = 80; break } return this.error({ statusCode: 404, message: 'This page could not be found' }), e.abrupt('return', o()); case 80:return e.next = 82, Promise.all(L.map(function () { const e = Object(r.a)(regeneratorRuntime.mark(function e (r, i) { let o, _, c, m, h, f, L, k, p; return regeneratorRuntime.wrap(function (e) { for (;;) { switch (e.prev = e.next) { case 0:if (r._path = Object(l.c)(t.matched[M[i]].path)(t.params), r._dataRefresh = !1, o = r._path !== Y[i], E._routeChanged && o ? r._dataRefresh = !0 : E._paramChanged && o ? (_ = r.options.watchParam, r._dataRefresh = !1 !== _) : E._queryChanged && (!0 === (c = r.options.watchQuery) ? r._dataRefresh = !0 : Array.isArray(c) ? r._dataRefresh = c.some(function (e) { return E._diffQuery[e] }) : typeof c==='function' && (O || (O = Object(l.h)(t)), r._dataRefresh = c.apply(O[i], [t.query, n.query]))), E._hadError || !E._isMounted || r._dataRefresh) { e.next = 6; break } return e.abrupt('return'); case 6:return m = [], h = r.options.asyncData && typeof r.options.asyncData==='function', f = Boolean(r.options.fetch) && r.options.fetch.length, L = h && f ? 30 : 45, h && ((k = E.isPreview || d ? Object(l.p)(r.options.asyncData, y.context) : E.fetchPayload(t.path).then(function (e) { return e.data[i] }).catch(function (e) { return Object(l.p)(r.options.asyncData, y.context) })).then(function (e) { Object(l.b)(r, e), E.$loading.increase && E.$loading.increase(L) }), m.push(k)), E.$loading.manual = !1 === r.options.loading, E.isPreview || d || m.push(E.fetchPayload(t.path).catch(function (e) { return null })), f && ((p = r.options.fetch(y.context)) && (p instanceof Promise || typeof p.then==='function') || (p = Promise.resolve(p)), p.then(function (e) { E.$loading.increase && E.$loading.increase(L) }), m.push(p)), e.abrupt('return', Promise.all(m)); case 15:case 'end':return e.stop() } } }, e) })); return function (t, n) { return e.apply(this, arguments) } }())); case 82:m || (this.$loading.finish && !this.$loading.manual && this.$loading.finish(), o()), e.next = 99; break; case 85:if (e.prev = 85, e.t2 = e.catch(29), (P = e.t2 || {}).message !== 'ERR_REDIRECT') { e.next = 90; break } return e.abrupt('return', this.$nuxt.$emit('routeChanged', t, n, P)); case 90:return Y = [], Object(l.k)(P), typeof (W = (c.a.options || c.a).layout) === 'function' && (W = W(y.context)), e.next = 96, this.loadLayout(W); case 96:this.error(P), this.$nuxt.$emit('routeChanged', t, n, P), o(); case 99:case 'end':return e.stop() } } }, e, this, [[29, 85], [48, 73], [50, 65, 68, 71]]) }))).apply(this, arguments) } function P (e, n) { Object(l.d)(e, function (e, n, r, d) { return Object(t.a)(e) !== 'object' || e.options || ((e = o.a.extend(e))._Ctor = e, r.components[d] = e), e }) } function W (e) { let t = Boolean(this.$options.nuxt.err); this._hadError && this._dateLastError === this.$options.nuxt.dateErr && (t = !1); let n = t ? (c.a.options || c.a).layout : e.matched[0].components.default.options.layout; typeof n === 'function' && (n = n(y.context)), this.setLayout(n) } function E (e) { e._hadError && e._dateLastError === e.$options.nuxt.dateErr && e.error() } function A (e, t) { const n = this; if (!1 !== this._routeChanged || !1 !== this._paramChanged || !1 !== this._queryChanged) { const r = Object(l.h)(e); const d = Object(l.g)(e); o.a.nextTick(function () { r.forEach(function (e, i) { if (e && !e._isDestroyed && e.constructor._dataRefresh && d[i] === e.constructor && !0 !== e.$vnode.data.keepAlive && typeof e.constructor.options.data === 'function') { const t = e.constructor.options.data.call(e); for (const n in t) { o.a.set(e.$data, n, t[n]) }window.$nuxt.$nextTick(function () { window.$nuxt.$emit('triggerScroll') }) } }), E(n) }) } } function z (e) { window.onNuxtReadyCbs.forEach(function (t) { typeof t === 'function' && t(e) }), typeof window._onNuxtLoaded === 'function' && window._onNuxtLoaded(e), L.afterEach(function (t, n) { o.a.nextTick(function () { return e.$nuxt.$emit('routeChanged', t, n) }) }) } function F () { return (F = Object(r.a)(regeneratorRuntime.mark(function e (t) { let n, r, d, _, c, m; return regeneratorRuntime.wrap(function (e) { for (;;) { switch (e.prev = e.next) { case 0:if (y = t.app, L = t.router, n = new o.a(y), k.data || !k.serverRendered) { e.next = 13; break } return e.prev = 4, e.next = 7, n.fetchPayload(k.routePath || n.context.route.path); case 7:r = e.sent, Object.assign(k, r), e.next = 13; break; case 11:e.prev = 11, e.t0 = e.catch(4); case 13:return d = k.layout || 'default', e.next = 16, n.loadLayout(d); case 16:return n.setLayout(d), _ = function () { n.$mount('#__nuxt'), L.afterEach(P), L.afterEach(W.bind(n)), L.afterEach(A.bind(n)), o.a.nextTick(function () { z(n) }) }, e.next = 20, Promise.all(S(L)); case 20:if (c = e.sent, n.setTransitions = n.$options.nuxt.setTransitions.bind(n), c.length && (n.setTransitions(v(c, L.currentRoute)), Y = L.currentRoute.matched.map(function (e) { return Object(l.c)(e.path)(L.currentRoute.params) })), n.$loading = {}, k.error && n.error(k.error), L.beforeEach(D.bind(n)), L.beforeEach(H.bind(n)), !k.serverRendered) { e.next = 29; break } return e.abrupt('return', _()); case 29:return m = function () { P(L.currentRoute, L.currentRoute), W.call(n, L.currentRoute), E(n), _() }, e.next = 32, new Promise(function (e) { return setTimeout(e, 0) }); case 32:H.call(n, L.currentRoute, L.currentRoute, function (path) { if (path) { var e = L.afterEach(function (t, n) { e(), m() }); L.push(path, void 0, function (e) { e && w(e) }) } else { m() } }); case 33:case 'end':return e.stop() } } }, e, null, [[4, 11]]) }))).apply(this, arguments) }Object(c.b)(null, k.config).then(function (e) { return F.apply(this, arguments) }).catch(w) }.call(this, n(29))) },,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,, function (e, t, n) { 'use strict'; const r = n(63); n.n(r).a }, function (e, t, n) { (t = n(23)(!1)).push([e.i, '.__nuxt-error-page{padding:1rem;background:#f7f8fb;color:#47494e;text-align:center;display:flex;justify-content:center;align-items:center;flex-direction:column;font-family:sans-serif;font-weight:100!important;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%;-webkit-font-smoothing:antialiased;position:absolute;top:0;left:0;right:0;bottom:0}.__nuxt-error-page .error{max-width:450px}.__nuxt-error-page .title{font-size:1.5rem;margin-top:15px;color:#47494e;margin-bottom:8px}.__nuxt-error-page .description{color:#7f828b;line-height:21px;margin-bottom:10px}.__nuxt-error-page a{color:#7f828b!important;text-decoration:none}.__nuxt-error-page .logo{position:fixed;left:12px;bottom:12px}', '']), e.exports = t }, function (e, t, n) { 'use strict'; const r = n(64); n.n(r).a }, function (e, t, n) { (t = n(23)(!1)).push([e.i, '.nuxt-progress{position:fixed;top:0;left:0;right:0;height:2px;width:0;opacity:1;transition:width .1s,opacity .4s;background-color:#000;z-index:999999}.nuxt-progress.nuxt-progress-notransition{transition:none}.nuxt-progress-failed{background-color:red}', '']), e.exports = t }, function (e, t, n) { 'use strict'; const r = n(65); n.n(r).a }, function (e, t, n) { (t = n(23)(!1)).push([e.i, 'header[data-v-f430662e]{background-color:#7a24e2}#navi .navi-in a[data-v-f430662e],#navi .navi-in a[data-v-f430662e]:hover,.header[data-v-f430662e],.header .site-name-text[data-v-f430662e]{color:#fff}.logo-text[data-v-f430662e]{padding:20px 0 30px;font-size:1em}.site-name-text[data-v-f430662e]{font-size:28px}.site-name-text-link[data-v-f430662e]{color:#333;text-decoration:none;font-weight:400!important}.tagline[data-v-f430662e]{text-align:center;font-size:14px;margin:.6em 1em}', '']), e.exports = t },, function (e, t, n) { 'use strict'; const r = n(66); n.n(r).a }, function (e, t, n) { (t = n(23)(!1)).push([e.i, '#navi .navi-in>.menu-header .sub-menu[data-v-9280cc0e],.navi[data-v-9280cc0e]{background-color:#a06ae2}.item-label[data-v-9280cc0e]{color:#fff}', '']), e.exports = t }, function (e, t, n) { 'use strict'; const r = n(67); n.n(r).a }, function (e, t, n) { (t = n(23)(!1)).push([e.i, 'ul[data-v-15b08b0e]{padding:0}.sidebar[data-v-15b08b0e]{height:100%}.widget_categories ul li a[data-v-15b08b0e]{color:#333;text-decoration:none;display:block;padding:10px 4px}.post-count[data-v-15b08b0e]{display:block;float:right}.tagcloud[data-v-15b08b0e]{display:block;flex-wrap:wrap}.tagcloud a[data-v-15b08b0e]{border:1px solid #eee;border-radius:2px;color:#555;padding:3px 8px;text-decoration:none;font-size:12px;margin:2px;flex:1 1 auto;display:flex;justify-content:space-between;transition:all .3s ease-in-out}', '']), e.exports = t }, function (e, t, n) { 'use strict'; const r = n(70); n.n(r).a }, function (e, t, n) { (t = n(23)(!1)).push([e.i, '#footer[data-v-35559f0e]{background:#a3a3a3}.footer[data-v-35559f0e]{margin-top:20px;padding-top:10px}.footer-bottom[data-v-35559f0e]{margin-top:24px;padding:8px;position:relative;font-size:14px}.footer-bottom-content[data-v-35559f0e]{float:none;display:block;text-align:center}.copyright[data-v-35559f0e]{margin-top:8px}', '']), e.exports = t }, function (e, t, n) { 'use strict'; const r = n(71); n.n(r).a }, function (e, t, n) { (t = n(23)(!1)).push([e.i, '@charset "UTF-8";\n\n/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}*,:after,:before{box-sizing:inherit}*{background-repeat:no-repeat;-ms-box-sizing:border-box}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block}audio:not([controls]){display:none;height:0}progress{vertical-align:baseline}[hidden],template{display:none}a{background-color:transparent;-webkit-text-decoration-skip:objects;-webkit-tap-highlight-color:transparent}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}svg:not(:root){overflow:hidden}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}ul{list-style-type:none}button,input,select,textarea{font:inherit;margin:0}optgroup{font-weight:700}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-input-placeholder{color:inherit;opacity:.54}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}.faw:before{font-family:FontAwesome;padding-right:4px}.entry-card,.related-entry-card{position:relative;height:100%}.carousel-entry-card-thumb,.entry-card-thumb,.related-entry-card-thumb,.widget-entry-card-thumb{float:left;margin-top:3px;position:relative}.entry-card-content,.related-entry-card-content{padding-bottom:1.2em}.entry-card-title,.related-entry-card-title{font-size:18px;margin:0 0 5px;line-height:1.2;font-weight:700}.entry-card-snippet,.related-entry-card-snippet{font-size:.8em;max-height:7.8em;line-height:1.3;overflow:hidden}.entry-card-meta,.related-entry-card-meta{bottom:0;position:absolute;right:0;text-align:right;line-height:1}.entry-categories-tags{margin-bottom:18px}.sns-follow,.sns-share{margin:24px 0}.sns-follow-message,.sns-share-message{text-align:center;margin-bottom:3px}.appeal,.header,body{background-position:top;background-repeat:no-repeat;background-size:100% auto}.ba-fixed.appeal,.ba-fixed.header,body.ba-fixed{background-attachment:fixed}.amp-back,.entry-category,.post-author,.post-date,.post-update{padding:2px;display:inline;font-size:.7em}.search-edit,input[type=date],input[type=datetime],input[type=email],input[type=number],input[type=password],input[type=search],input[type=tel],input[type=text],input[type=time],input[type=url],select,textarea{padding:11px;border:1px solid #ccc;border-radius:4px;font-size:18px;width:100%}.fz-12px{font-size:12px}.fz-13px{font-size:13px}.fz-14px{font-size:14px}.fz-15px{font-size:15px}.fz-16px{font-size:16px}.fz-17px{font-size:17px}.fz-18px{font-size:18px}.fz-19px{font-size:19px}.fz-20px{font-size:20px}.fz-21px{font-size:21px}.fz-22px{font-size:22px}.fz-24px{font-size:24px}.fz-28px{font-size:28px}.fz-32px{font-size:32px}.fz-36px{font-size:36px}.fz-40px{font-size:40px}.fz-44px{font-size:44px}.fz-48px{font-size:48px}.fw-100{font-weight:100}.fw-200{font-weight:200}.fw-300{font-weight:300}.fw-400{font-weight:400}.fw-500{font-weight:500}.fw-600{font-weight:600}.fw-700{font-weight:700}.fw-800{font-weight:800}.fw-900{font-weight:900}.ff-meiryo,.wf-loading body{font-family:Meiryo,"Hiragino Kaku Gothic ProN","Hiragino Sans",sans-serif}.ff-yu-gothic{font-family:"Yu Gothic",Meiryo,"Hiragino Kaku Gothic ProN","Hiragino Sans",sans-serif}.ff-ms-pgothic{font-family:"MS PGothic","Hiragino Kaku Gothic ProN","Hiragino Sans",Meiryo,sans-serif}.ff-noto-sans-jp,.wf-active .ff-noto-sans-jp{font-family:"Noto Sans JP",sans-serif}.ff-noto-serif-jp,.wf-active .ff-noto-serif-jp{font-family:"Noto Serif JP",sans-serif}.ff-mplus-1p,.wf-active .ff-mplus-1p{font-family:"M PLUS 1p",sans-serif}.ff-rounded-mplus-1c,.wf-active .ff-rounded-mplus-1c{font-family:"M PLUS Rounded 1c",sans-serif}.ff-kosugi,.wf-active .ff-kosugi{font-family:"Kosugi",sans-serif}.ff-kosugi-maru,.wf-active .ff-kosugi-maru{font-family:"Kosugi Maru",sans-serif}.ff-sawarabi-gothic,.wf-active .ff-sawarabi-gothic{font-family:"Sawarabi Gothic",sans-serif}.ff-sawarabi-mincho,.wf-active .ff-sawarabi-mincho{font-family:"Sawarabi Mincho",sans-serif}.sub-caption{font-family:Tunga,"Trebuchet MS",Tahoma,Verdana,"Segoe UI","Hiragino Kaku Gothic ProN","Hiragino Sans",Meiryo,sans-serif;font-weight:400;font-size:.75em;opacity:.5}span.sub-caption{opacity:.8}*{padding:0;margin:0;box-sizing:border-box;word-wrap:break-word}.container{padding-right:env(safe-area-inset-right);padding-left:env(safe-area-inset-left)}body{font-size:18px;color:#333;line-height:1.8;margin:0;word-wrap:break-word;background-color:#f4f5f7;-ms-text-size-adjust:100%;text-size-adjust:100%;-webkit-text-size-adjust:100%;-moz-text-size-adjust:100%;background-attachment:fixed}a{color:#1967d2}a:hover{color:#e53900}ol,ul{margin:1em 0;padding-left:40px}hr{color:#eee}.cf:after{clear:both;content:"";display:block}.footer,.header-container,.main,.sidebar{background-color:#fff}.wrap{margin:0 auto}.content-in{display:flex;justify-content:space-between;flex-wrap:wrap}.main{width:67%;padding:20px 29px;border:1px solid transparent;border-radius:4px;position:relative}.no-sidebar .content .main{margin:0;width:100%}.no-scrollable-main .main{height:100%}.main-scroll{position:-webkit-sticky;position:sticky;top:0;margin-top:2em}@media (-ms-high-contrast:none){.main-scroll{position:static;top:auto}.logo{height:100%}}.publisher{display:none}#wpadminbar{font-size:13px}.wp-caption{margin:1em 0}.aligncenter{display:block;margin-right:auto;margin-left:auto}.alignleft{float:left;margin-right:10px;margin-bottom:10px}.alignright{float:right;margin-left:10px;margin-bottom:10px}.wp-caption{padding-top:4px;border:1px solid #eee;border-radius:3px;background-color:#f5f6f7;text-align:center;max-width:100%}.gallery-caption,.wp-caption-text{font-size:.8em;margin:2px}.wp-caption img{margin:0;padding:0;border:0}.wp-caption-dd{margin:0;padding:0 4px 5px;font-size:11px;line-height:17px}img.alignright{display:inline-block;margin:0 0 1em 1.5em}img.alignleft{display:inline-block;margin:0 1.5em 1em 0}.comment-btn{margin:24px 0}.comment-btn,label{cursor:pointer}.sitemap li a:before{display:none}.content-bottom,.content-top{margin:1em 0}figure{margin:0}img{max-width:100%;height:auto;border:0}.circle-image img{border-radius:50%}.header{height:100%}.header-in{display:flex;flex-direction:column;justify-content:center}.tagline{font-size:14px;margin:.6em 1em}.logo,.tagline{text-align:center}.logo-image a,.logo-image span{display:inline-block;max-width:100%}.site-name-text-link{color:#333;text-decoration:none;font-weight:400}.site-name-text-link:hover{color:inherit}.site-name-text{font-size:28px}.logo-text{padding:20px 0 30px;font-size:1em}.logo-image{padding:10px 0;font-size:inherit}.header-container-in.hlt-top-menu{display:flex;justify-content:space-between;align-items:center;align-content:center}.header-container-in.hlt-top-menu .wrap{width:auto}.header-container-in.hlt-top-menu .header{background-image:none}.header-container-in.hlt-top-menu .logo-text{padding:0;display:flex;align-items:center;align-content:center}.header-container-in.hlt-top-menu .logo-image{padding:0;margin:0}.header-container-in.hlt-top-menu .site-name-text-link{margin:0 16px;display:block}.header-container-in.hlt-top-menu .site-name-text{font-size:22px;white-space:nowrap}.header-container-in.hlt-top-menu .tagline{display:none}.header-container-in.hlt-top-menu .logo-header{max-height:60px}.header-container-in.hlt-top-menu .logo-header .site-name{margin:0}.header-container-in.hlt-top-menu .logo-header img{max-height:60px;height:auto}.header-container-in.hlt-top-menu amp-img{max-width:160px;max-height:60px}.header-container-in.hlt-top-menu amp-img img{height:auto}.header-container-in.hlt-top-menu .navi{width:100%}.header-container-in.hlt-top-menu.hlt-tm-small .site-name-text-link{margin:0 16px}.header-container-in.hlt-top-menu.hlt-tm-small .site-name-text{font-size:20px}.header-container-in.hlt-top-menu.hlt-tm-small .logo-header{height:40px}.header-container-in.hlt-top-menu.hlt-tm-small .navi-in>ul>.menu-item-has-description>a>.caption-wrap,.header-container-in.hlt-top-menu.hlt-tm-small .navi-in>ul>li{line-height:40px;height:40px;display:block}.header-container-in.hlt-top-menu.hlt-tm-small .item-description{display:none}.hlt-tm-right .navi-in>ul{justify-content:flex-end}.header-container-in.hlt-center-logo-top-menu{display:flex;flex-direction:column-reverse}.cl-slim .navi-in>ul li{height:40px;line-height:40px}.cl-slim .navi-in>ul li .sub-menu ul{top:-40px}.cl-slim .navi-in>ul li.menu-item-has-description>a>.caption-wrap{height:40px;line-height:16px;font-size:14px;padding-top:6px}.navi{background-color:#fff}.navi-in a{position:relative}.navi-in .has-icon{position:absolute;right:6px;top:0;display:inline-block;opacity:.7;font-size:11px}.navi-in>ul{padding:0;margin:0;list-style:none;display:flex;flex-wrap:wrap;justify-content:center;text-align:center}.navi-in>ul li{display:block;width:176px;height:60px;line-height:60px;position:relative}.navi-in>ul li:hover>ul{display:block}.navi-in>ul .menu-item-has-description>a>.caption-wrap{line-height:21.4285714286px;display:flex;flex-wrap:wrap;justify-content:center;align-items:center;align-content:center;height:60px}.navi-in>ul .menu-item-has-description>a>.caption-wrap>div{width:100%}.navi-in>ul .sub-menu{display:none;position:absolute;margin:0;min-width:240px;list-style:none;padding:0;background-color:#fafbfc;z-index:99;text-align:left}.navi-in>ul .sub-menu li{width:auto}.navi-in>ul .sub-menu a{padding-left:16px;padding-right:16px}.navi-in>ul .sub-menu ul{top:-60px;left:240px;position:relative}.navi-in a{text-decoration:none;display:block;font-size:16px}.navi-in a,.navi-in a:hover{color:#333;transition:all .3s ease-in-out}.navi-in a:hover{background-color:#f5f8fa}.navi-in a:hover>ul{display:block}.navi-in>.menu-mobile,.navi-in>.menu-mobile .sub-menu{display:none}.navi-footer-in>.menu-footer{padding:0;list-style:none;display:flex;flex-wrap:wrap;justify-content:flex-end;text-align:center;margin:0}.navi-footer-in>.menu-footer li{width:120px;border-left:1px solid #ddd}.navi-footer-in>.menu-footer li:last-child{border-right:1px solid #ddd}.navi-footer-in a{color:#333;text-decoration:none;display:block;font-size:14px;transition:all .3s ease-in-out}.navi-footer-in a:hover{background-color:#f5f8fa}.a-wrap,.navi-footer-in a:hover{transition:all .3s ease-in-out;color:#333}.a-wrap{text-decoration:none;display:block;padding:1.5%;margin-bottom:3%}.a-wrap:hover{background-color:#f5f8fa;transition:all .3s ease-in-out;color:#333}.card-thumb img{width:100%}.entry-card-thumb{width:320px}.related-entry-card-thumb{width:160px}.cat-label{position:absolute;top:.3em;left:.3em;border:1px solid #eee;font-size:11px;color:#fff;background-color:rgba(51,51,51,.7);padding:1px 5px;max-width:80%;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.entry-card-content{margin-left:330px}.entry-card-info>*{font-size:.7em;padding:2px}.e-card-info .post-author{display:flex;flex-wrap:wrap;justify-content:flex-end;align-items:center}.post-author-image{margin-right:3px}.post-author-image img{border-radius:50%}.e-card-info{display:flex;flex-wrap:wrap;justify-content:flex-end;align-items:center}.e-card-info>span{margin-right:4px}.ect-vertical-card{display:flex;flex-wrap:wrap;justify-content:space-between}.ect-vertical-card .entry-card-wrap{width:49.5%;display:inline-block;margin-bottom:12px}.ect-vertical-card .entry-card-wrap .entry-card-thumb{width:100%;float:none}.ect-vertical-card .entry-card-wrap .entry-card-thumb img{width:100%}.ect-vertical-card .entry-card-wrap .entry-card-content{margin:0}.ect-vertical-card .entry-card-wrap .post-date,.ect-vertical-card .entry-card-wrap .post-update{margin-right:0}.ect-vertical-card.ect-tile-card .a-wrap{margin:0 .25% 12px}.ect-vertical-card.ect-tile-card .entry-card-content{padding:0}.ect-vertical-card.ect-tile-card .card-snippet{padding:0;margin:0}.ect-vertical-card.ect-tile-card .card-meta{position:static}.ect-vertical-card.ect-tile-card .a-wrap{margin:0 .16666% 12px}.ect-2-columns>*{width:49.5%;display:inline-block}.ect-3-columns{justify-content:space-around}.ect-3-columns .entry-card-wrap{width:33%;padding:7px}.ect-3-columns .entry-card-snippet{max-height:4em;overflow:hidden}.ect-3-columns>*{width:33%;display:inline-block}.ecb-entry-border .entry-card-wrap{border:1px solid #ccc}.entry-card-day span:last-child{margin-right:0}.ect-big-card .card-thumb,.front-top-page .ect-big-card-first .a-wrap:first-of-type .card-thumb{float:none;width:100%}.ect-big-card .card-content,.front-top-page .ect-big-card-first .a-wrap:first-of-type .card-content{margin:0}.date-tags{line-height:.8;text-align:right;margin-bottom:1em}.amp-back,.post-author,.post-date,.post-update{margin-right:8px}.related-entry-post-date{margin-right:0}.breadcrumb{margin:1em .4em;color:#777;font-size:13px}.breadcrumb div{display:inline}.breadcrumb .sp{margin:0 10px}.breadcrumb a{text-decoration:none;color:#777}.breadcrumb.pbp-footer-before,.breadcrumb.pbp-main-before,.breadcrumb.sbp-footer-before,.breadcrumb.sbp-main-before{background-color:#fff;margin:12px auto 0;padding:.6em 1em}.breadcrumb.pbp-main-before+.content,.breadcrumb.sbp-main-before+.content{margin-top:12px}.breadcrumb-caption{margin:0 3px}.sns-buttons{display:flex;align-items:center}.sns-buttons a{display:block;background-color:#333;text-align:center;color:#fff;text-decoration:none;border-radius:4px;height:45px}.sns-buttons a:hover{opacity:.7;color:#fff;transition:all .3s ease-in-out}.sns-follow a,.sns-share a{cursor:pointer}.bc-brand-color.sns-follow .twitter-button,.bc-brand-color.sns-share .twitter-button{background-color:#1da1f2}.bc-brand-color.sns-follow .facebook-button,.bc-brand-color.sns-share .facebook-button{background-color:#3b5998}.bc-brand-color.sns-follow .hatebu-button,.bc-brand-color.sns-share .hatebu-button{background-color:#2c6ebd}.bc-brand-color.sns-follow .google-plus-button,.bc-brand-color.sns-share .google-plus-button{background-color:#dd4b39}.bc-brand-color.sns-follow .pocket-button,.bc-brand-color.sns-share .pocket-button{background-color:#ef4056}.bc-brand-color.sns-follow .line-button,.bc-brand-color.sns-share .line-button{background-color:#00c300}.bc-brand-color.sns-follow .website-button,.bc-brand-color.sns-share .website-button{background-color:#002561}.bc-brand-color.sns-follow .instagram-button,.bc-brand-color.sns-share .instagram-button{background-color:#405de6}.bc-brand-color.sns-follow .pinterest-button,.bc-brand-color.sns-share .pinterest-button{background-color:#bd081c}.bc-brand-color.sns-follow .youtube-button,.bc-brand-color.sns-share .youtube-button{background-color:#cd201f}.bc-brand-color.sns-follow .linkedin-button,.bc-brand-color.sns-share .linkedin-button{background-color:#0077b5}.bc-brand-color.sns-follow .note-button,.bc-brand-color.sns-share .note-button{background-color:#41c9b4}.bc-brand-color.sns-follow .soundcloud-button,.bc-brand-color.sns-share .soundcloud-button{background-color:#f80}.bc-brand-color.sns-follow .flickr-button,.bc-brand-color.sns-share .flickr-button{background-color:#111}.bc-brand-color.sns-follow .amazon-button,.bc-brand-color.sns-share .amazon-button{background-color:#f90}.bc-brand-color.sns-follow .rakuten-room-button,.bc-brand-color.sns-share .rakuten-room-button{background-color:#c61e79}.bc-brand-color.sns-follow .slack-button,.bc-brand-color.sns-share .slack-button{background-color:#e01563}.bc-brand-color.sns-follow .github-button,.bc-brand-color.sns-share .github-button{background-color:#4078c0}.bc-brand-color.sns-follow .codepen-button,.bc-brand-color.sns-share .codepen-button{background-color:#333}.bc-brand-color.sns-follow .feedly-button,.bc-brand-color.sns-share .feedly-button{background-color:#2bb24c}.bc-brand-color.sns-follow .rss-button,.bc-brand-color.sns-share .rss-button{background-color:#f26522}.bc-brand-color-white.sns-follow a,.bc-brand-color-white.sns-share a{background-color:#fff;font-weight:500;border:1px solid #333;color:#333}.bc-brand-color-white.sns-follow a:hover,.bc-brand-color-white.sns-share a:hover{opacity:.5}.bc-brand-color-white.sns-follow .twitter-button,.bc-brand-color-white.sns-share .twitter-button{color:#1da1f2;border-color:#1da1f2}.bc-brand-color-white.sns-follow .facebook-button,.bc-brand-color-white.sns-share .facebook-button{color:#3b5998;border-color:#3b5998}.bc-brand-color-white.sns-follow .hatebu-button,.bc-brand-color-white.sns-share .hatebu-button{color:#2c6ebd;border-color:#2c6ebd}.bc-brand-color-white.sns-follow .google-plus-button,.bc-brand-color-white.sns-share .google-plus-button{color:#dd4b39;border-color:#dd4b39}.bc-brand-color-white.sns-follow .pocket-button,.bc-brand-color-white.sns-share .pocket-button{color:#ef4056;border-color:#ef4056}.bc-brand-color-white.sns-follow .line-button,.bc-brand-color-white.sns-share .line-button{color:#00c300;border-color:#00c300}.bc-brand-color-white.sns-follow .website-button,.bc-brand-color-white.sns-share .website-button{color:#002561;border-color:#002561}.bc-brand-color-white.sns-follow .instagram-button,.bc-brand-color-white.sns-share .instagram-button{color:#405de6;border-color:#405de6}.bc-brand-color-white.sns-follow .pinterest-button,.bc-brand-color-white.sns-share .pinterest-button{color:#bd081c;border-color:#bd081c}.bc-brand-color-white.sns-follow .youtube-button,.bc-brand-color-white.sns-share .youtube-button{color:#cd201f;border-color:#cd201f}.bc-brand-color-white.sns-follow .linkedin-button,.bc-brand-color-white.sns-share .linkedin-button{color:#0077b5;border-color:#0077b5}.bc-brand-color-white.sns-follow .note-button,.bc-brand-color-white.sns-share .note-button{color:#41c9b4;border-color:#41c9b4}.bc-brand-color-white.sns-follow .soundcloud-button,.bc-brand-color-white.sns-share .soundcloud-button{color:#f80;border-color:#f80}.bc-brand-color-white.sns-follow .flickr-button,.bc-brand-color-white.sns-share .flickr-button{color:#111;border-color:#111}.bc-brand-color-white.sns-follow .amazon-button,.bc-brand-color-white.sns-share .amazon-button{color:#f90;border-color:#f90}.bc-brand-color-white.sns-follow .rakuten-room-button,.bc-brand-color-white.sns-share .rakuten-room-button{color:#c61e79;border-color:#c61e79}.bc-brand-color-white.sns-follow .slack-button,.bc-brand-color-white.sns-share .slack-button{color:#e01563;border-color:#e01563}.bc-brand-color-white.sns-follow .github-button,.bc-brand-color-white.sns-share .github-button{color:#4078c0;border-color:#4078c0}.bc-brand-color-white.sns-follow .codepen-button,.bc-brand-color-white.sns-share .codepen-button{color:#333;border-color:#333}.bc-brand-color-white.sns-follow .feedly-button,.bc-brand-color-white.sns-share .feedly-button{color:#2bb24c;border-color:#2bb24c}.bc-brand-color-white.sns-follow .rss-button,.bc-brand-color-white.sns-share .rss-button{color:#f26522;border-color:#f26522}.ss-top{margin-top:0;margin-bottom:0}.ss-top .sns-share-message{display:none}.sns-share.ss-col-1 a{width:100%}.sns-share.ss-col-2 a{width:49%}.sns-share.ss-col-4 a{width:24%}.sns-share.ss-col-5 a{width:19%}.sns-share.ss-col-6 a{width:16%}.sns-share.ss-high-and-low-cl a,.sns-share.ss-high-and-low-lc a{display:flex;align-content:center;line-height:16px}.sns-share.ss-high-and-low-cl a .button-caption,.sns-share.ss-high-and-low-cl a .social-icon,.sns-share.ss-high-and-low-lc a .button-caption,.sns-share.ss-high-and-low-lc a .social-icon{display:block;font-size:16px;margin:0}.sns-share.ss-high-and-low-cl a .button-caption.button-caption,.sns-share.ss-high-and-low-cl a .social-icon.button-caption,.sns-share.ss-high-and-low-lc a .button-caption.button-caption,.sns-share.ss-high-and-low-lc a .social-icon.button-caption{font-size:12px}.sns-share.ss-high-and-low-lc a{flex-direction:column}.sns-share.ss-high-and-low-lc a>span{padding-top:3px}.sns-share.ss-high-and-low-cl a{flex-direction:column-reverse}.sns-share-buttons{flex-wrap:wrap;justify-content:space-around;align-content:center}.sns-share-buttons a{width:32%;margin-bottom:8px;font-size:18px;display:inline-flex;align-content:center;align-items:center;justify-content:center;position:relative}.sns-share-buttons a .button-caption{font-size:16px;margin-left:10px}.sns-share-buttons a .share-count{position:absolute;right:3px;bottom:3px;font-size:12px;line-height:1}.share-menu-content .sns-share-buttons a{width:24%}.copy-info,.sbc-hide .share-count{display:none}.copy-info{padding:1em 2em;color:#fff;border-radius:8px;position:fixed;top:50%;left:50%;transform:translate(-50%,-50%);background-color:#333;opacity:.8;box-shadow:0 4px 8px #777;z-index:2}.content{margin-top:24px}.archive-title,.entry-title{font-size:26px;margin:16px 0;line-height:1.3}.archive-title span{margin-right:10px}.entry-content{margin-top:1em;margin-bottom:3em}pre,pre *{line-height:1.6;word-wrap:normal}.entry-categories-tags>div{margin-bottom:.5em}.ctdt-one-row>div{display:inline-block}.ctdt-category-only .entry-tags,.ctdt-none,.ctdt-tag-only .entry-categories{display:none}.cat-link{color:#fff;text-decoration:none;display:inline-block;margin-right:5px;padding:2px 6px;font-size:12px;background-color:#333;border-radius:2px;word-break:break-all}.cat-link:hover{opacity:.5;color:#fff}.comment-reply-link,.tag-link{color:#333;text-decoration:none;display:inline-block;margin-right:5px;padding:1px 5px;font-size:12px;border:1px solid #999;border-radius:2px;word-break:break-all}.comment-reply-link:hover,.tag-link:hover{background-color:#f5f8fa;transition:all .3s ease-in-out;color:#333}.paragraph,p{margin:1.2em 0}table{margin-bottom:20px;max-width:100%;width:100%;border-collapse:collapse;border-spacing:0}table th{background-color:#f5f6f7}table tr:nth-of-type(odd){background-color:#fafbfc}table td,table th{border:1px solid #eee;padding:6px}.scrollable-table{-webkit-overflow-scrolling:touch}.scrollable-table.stfc-sticky tr>:first-child{background-color:#e9eff2;color:#333;position:sticky;position:-webkit-sticky;left:0;z-index:2}.scrollable-table table{border-collapse:collapse;max-width:none}.scrollable-table th{background-color:#eee}.scrollable-table td,.scrollable-table th{border:1px solid #ccc;padding:3px 5px;white-space:nowrap}.scrollable-table{overflow-x:auto!important;overflow-y:hidden!important;margin-bottom:1em}figure.wp-block-table table{width:auto}figure.wp-block-table.alignfull table,figure.wp-block-table.alignwide table{width:100%}.main figure.wp-block-table{width:auto;max-width:100%;display:block}figure.wp-block-table table{margin-right:auto}figure.wp-block-table.aligncenter table{margin-left:auto}figure.wp-block-table.alignright table{margin-left:0}.scroll-hint-icon-wrap{overflow:hidden}.article dl{margin:1em 0}.article dd{margin-left:40px}.article ol li,.article ul li{margin:.2em}.article ol ol,.article ol ul,.article ul ol,.article ul ul{margin:0}.article .wp-block-gallery ul{padding-left:0}.article h1,.article h2,.article h3,.article h4,.article h5,.article h6{line-height:1.25;font-weight:700}.article h2,.article h3,.article h4,.article h5,.article h6{margin:2.4em 0 1em}.article h4,.article h5,.article h6{font-size:20px;padding:9px 10px}.article h2{font-size:24px;padding:25px;background-color:#f5f6f7;border-radius:2px}.article h3{border:1px solid #ddd;border-left:7px solid #888;font-size:22px;padding:12px 20px}.article h4{border-top:2px solid #ddd}.article h4,.article h5{border-bottom:2px solid #ddd}.article h6{border-bottom:1px solid #ddd}.article .column-wrap h1,.article .column-wrap h2,.article .column-wrap h3,.article .column-wrap h4,.article .column-wrap h5,.article .column-wrap h6{margin-top:0}blockquote{background-color:#fafbfc;border:1px solid #ddd;margin:1em 0;padding:10px 1.2em;position:relative}blockquote:after,blockquote:before{color:#c8c8c8;font-family:serif;position:absolute;font-size:300%}blockquote:before{content:"“";line-height:1.1;left:10px;top:0}blockquote:after{content:"”";line-height:0;right:10px;bottom:0}blockquote cite{font-size:.7em}.footer-meta{font-size:.8em;text-align:right}.author-info .post-author{font-size:14px}.content-only .ad-area,.content-only .appeal,.content-only .article-footer,.content-only .breadcrumb,.content-only .content-bottom,.content-only .content-top,.content-only .date-tags,.content-only .footer,.content-only .go-to-top-button,.content-only .header-container,.content-only .main-scroll,.content-only .notice-area,.content-only .recommended,.content-only .sns-follow,.content-only .sns-share,.content-only .under-entry-content{display:none}.content-only .carousel{display:none!important}span.external-icon,span.internal-icon{margin-left:3px;font-size:.8em}.login-user-only{text-align:center;padding:2em;background-color:#fafbfc;border:1px solid #ccc;margin:1em 0}.no-post-author .author-info,.no-post-date .post-date,.no-post-update .post-update{display:none}.read-time{text-align:center;font-size:.7em;border-top:4px double #eee;border-bottom:4px double #eee;margin:0 3%}.eye-catch-wrap{display:flex}.eye-catch{position:relative;margin-bottom:.6em;max-width:100%}.eye-catch .cat-label{position:absolute;right:auto;top:.4em;bottom:auto;left:.4em;font-size:14px;padding:4px 8px;opacity:.9;border:1px solid #eee}.eye-catch img{vertical-align:bottom}.eye-catch-caption{color:#fff;position:absolute;bottom:0;padding:2em .6em .2em;text-align:right;width:100%;font-size:.9em;background:linear-gradient(180deg,transparent,#555);opacity:.9}@media (-ms-high-contrast:none){.eye-catch-wrap{display:block}}.show-pinterest-button .eye-catch:hover .cat-label{display:none}.ad-area{text-align:center;margin-bottom:1.8em;overflow:hidden}.entry-content .ad-area{margin:1em 0}.ad-label-invisible .ad-label{display:none}.ad-content-top{margin-top:1em}.ad-responsive ins{width:100%}.ad-dabble-rectangle .ad-responsive,.ad-single-rectangle .ad-responsive{max-width:336px;margin:auto}.ad-dabble-rectangle .ad-wrap{display:flex}.ad-dabble-rectangle .ad-responsive{width:336px}@media screen and (max-width:692px){.ad-dabble-rectangle .ad-responsive{width:300px}}@media screen and (max-width:626px){.ad-dabble-rectangle .ad-responsive{width:250px}}@media screen and (max-width:556px){.ad-dabble-rectangle .ad-wrap{display:block}.ad-dabble-rectangle .ad-responsive{width:auto;max-width:none;margin:auto}.ad-dabble-rectangle .ad-additional-double{display:none}}.sidebar .ad-additional-double,.sidebar .ad-additional-vertical{display:none}@media screen and (max-width:834px){.sidebar .ad-vertical .ad-usual{display:none}.sidebar .ad-vertical .ad-additional-vertical{display:block}}.blogcard-wrap{margin:24px auto;padding:0;width:90%;background-color:#fff}.blogcard{padding:1.6% 2.2% 2%;border:1px solid #ccc;border-radius:4px;line-height:1.6;position:relative}.blogcard-thumbnail{float:left;margin-top:3px;width:160px}.blogcard-thumbnail img{width:100%}.blogcard-content{margin-left:170px;max-height:140px;min-height:100px;overflow:hidden}.blogcard-title{font-weight:700;margin-bottom:.4em}.blogcard-snippet{font-size:.8em}.blogcard-footer{clear:both;font-size:16px;padding-top:.6%}.blogcard-site{float:left}.blogcard-date,.blogcard-site{display:flex;align-content:center}.blogcard-date{float:right}.blogcard-favicon{margin-right:4px;margin-top:2px}.eb-right .blogcard-thumbnail,.ib-right .blogcard-thumbnail{float:right;margin-left:1.6%}.eb-right .blogcard-content,.ib-right .blogcard-content{margin-left:0;margin-right:170px}.nwa .blogcard-wrap{width:100%}.nwa .blogcard-thumbnail{width:120px}.nwa .blogcard-title{font-size:.9em;margin-bottom:0}.nwa .blogcard-snippet{font-size:12px}.nwa .blogcard-content{margin-left:130px;margin-right:0;max-height:120px;min-height:70px;font-size:.9em;line-height:1.2}.nwa .blogcard-footer{font-size:14px}.nwa .eb-right .blogcard-content,.nwa .ib-right .blogcard-content{margin-right:31.6%;margin-left:0}.toc{border:1px solid #ccc;font-size:.9em;padding:1em 1.6em;margin-bottom:1em;display:table}.toc .toc-list{padding-left:1em}.toc .toc-list ol,.toc .toc-list ul{padding-left:1em;margin:0}.toc li{margin:0}.toc ul{list-style:none}.toc a{color:#333;text-decoration:none}.toc a:hover{text-decoration:underline}.toc-center{margin:1em auto}.toc-title{font-size:1.1em;text-align:center;display:block;padding:2px 16px}.toc-widget-box .toc-title{display:none}.toc-widget-box .toc-content{visibility:visible;opacity:1;height:100%}.nwa .toc{border:0;padding:0 1em}.tnt-none .toc-list,.tnt-number-detail .toc-list{padding-left:0}.toc.tnt-number-detail ol{list-style:none;counter-reset:toc}.toc.tnt-number-detail ol li:before{margin-right:6px;counter-increment:toc;content:counters(toc,".") "."}.sidebar{width:33%;border:1px solid transparent;padding:19px;border-radius:4px;background-color:#fff}.sidebar h3{background-color:#f5f6f7;padding:12px;margin:16px 0;border-radius:2px}.no-scrollable-sidebar .sidebar{height:100%}.sidebar-scroll{position:-webkit-sticky;position:sticky;top:0}.sidebar-menu-content .sidebar{height:auto}.no-sidebar .sidebar{display:none}.sidebar-left .content-in{flex-direction:row-reverse}.nwa .ranking-item-img-desc,.nwa .ranking-item-link-buttons{display:block}.nwa .ranking-item-img-desc a,.nwa .ranking-item-link-buttons a{padding:6px 0}.nwa .ranking-item-image-tag{max-width:100%;text-align:center;display:flex;justify-content:center}.nwa .ranking-item-name-text,.nwa .widget_item_ranking .main-widget-label{font-size:20px}.nwa .ranking-item-description p{font-size:.9em}.nwa .blogcard-wrap{width:auto}.badge,.badge-blue,.badge-brown,.badge-green,.badge-grey,.badge-pink,.badge-purple,.badge-red,.badge-yellow,.ref,.reffer,.sankou{color:#fff;padding:1px 5px 0;border-radius:2px;font-size:12px}.badge,.ref,.reffer,.sankou{background-color:#f39800}.badge-red{background-color:#e60033}.badge-pink{background-color:#e95295}.badge-purple{background-color:#884898}.badge-blue{background-color:#0095d9}.badge-green{background-color:#3eb370}.badge-yellow{background-color:#ffd900}.badge-brown{background-color:#954e2a}.badge-grey{background-color:#949495}.bold{font-weight:700}.bold-red,.red{color:#e60033}.bold-red{font-weight:700}.blue,.bold-blue{color:#0095d9}.bold-blue{font-weight:700}.bold-green,.green{color:#3eb370}.bold-green{font-weight:700}.red-under{border-bottom:2px solid red}.marker{background-color:#ff9}.marker-red{background-color:#ffd0d1}.marker-blue{background-color:#a8dafb}.marker-under{background:linear-gradient(transparent 60%,#ff9 0)}.marker-under-red{background:linear-gradient(transparent 60%,#ffd0d1 0)}.marker-under-blue{background:linear-gradient(transparent 60%,#a8dafb 0)}.strike{text-decoration:line-through}@media print{body{-webkit-print-color-adjust:exact}}html{font-size:62.5%;font-feature-settings:"kern";-webkit-font-kerning:normal;font-kerning:normal;text-rendering:optimizeSpeed}body{background-color:#fff;font-size:10px;font-size:1rem;font-family:Roboto,"游ゴシック","Yu Gothic","游ゴシック体","YuGothic","ヒラギノ角ゴ Pro W3","Hiragino Kaku Gothic Pro","Meiryo UI","メイリオ",Meiryo,sans-serif}.clearfix:after,.col:after,.container:after,.content_wrap:after,.row:after,.wrap_inner:after,article:after{content:"";display:table;clear:both}.row{display:table}.col{display:block;float:left;width:100%}@media (min-width:768px){.span_1{width:8.33333333333%}.span_2{width:16.6666666667%}.span_3{width:25%}.span_4{width:33.3333333333%}.span_5{width:41.6666666667%}.span_6{width:50%}.span_7{width:58.3333333333%}.span_8{width:66.6666666667%}.span_9{width:75%}.span_10{width:83.3333333333%}.span_11{width:91.6666666667%}.span_12{width:100%}}.f-left{float:left;display:block}.f-right{float:right;display:block}.left{text-align:left}.right{text-align:right}.center{text-align:center}.m10{margin:10px!important}.m20{margin:20px!important}.m40{margin:40px!important}.m60{margin:60px!important}.m80{margin:80px!important}.m0{margin:0!important}.mt0{margin-top:0!important}.mt20{margin-top:20px!important}.mt40{margin-top:40px!important}.mt60{margin-top:60px!important}.mt80{margin-top:80px!important}.mb0{margin-bottom:0!important}.mb10{margin-bottom:21px!important}.mb20{margin-bottom:20px!important}.mb40{margin-bottom:40px!important}.mb60{margin-bottom:60px!important}.mb80{margin-bottom:80px!important}.mb1em{margin-bottom:1em!important}.p10{padding:10px!important}.p20{padding:20px!important}.p40{padding:40px!important}.p60{padding:60px!important}.p80{padding:80px!important}.p0{padding:0!important}.pl0{padding-left:0!important}.pr0{padding-right:0!important}.pt0{padding-top:0!important}.pt20{padding-top:20px!important}.pt40{padding-top:40px!important}.pt60{padding-top:60px!important}.pt80{padding-top:80px!important}.pb0{padding-bottom:0!important}.pb20{padding-bottom:20px!important}.pb40{padding-bottom:40px!important}.pb60{padding-bottom:60px!important}.pb80{padding-bottom:80px!important}@media only screen and (min-width:768px){.pc_none{display:none!important}}@media only screen and (max-width:767px){.sp_none{display:none!important}}h3,h4,h5{margin-bottom:.8em}h1{font-size:32px;font-size:3.2rem}h2{font-size:28px;font-size:2.8rem}h3{font-size:24px;font-size:2.4rem}h4{font-size:18px;font-size:1.8rem}h5{font-size:15px;font-size:1.5rem}.red{color:#d00}.red1{color:#f05d5f}.red2{color:#c51919}.red3{color:#a3090e}.red4{color:#921313}.bg_red{background-color:#d00}.bg_red1{background-color:#f05d5f}.bg_red2{background-color:#c51919}.bg_red3{background-color:#a3090e}.bg_red4{background-color:#921313}.bg_blk0{background-color:#fff}.bg_blk1{background-color:#f7f7f7}.bg_blk2{background-color:#343434}.bg_blk3{background-color:#212121}.bg_blk4{background-color:#121212}*,:after,:before{box-sizing:border-box;margin:0}.button--green{display:inline-block;border-radius:4px;border:1px solid #3b8070;color:#3b8070;text-decoration:none;padding:10px 30px}.button--green:hover{color:#fff;background-color:#3b8070}.button--grey{display:inline-block;border-radius:4px;border:1px solid #35495e;color:#35495e;text-decoration:none;padding:10px 30px;margin-left:15px}.button--grey:hover{color:#fff;background-color:#35495e}', '']), e.exports = t },,,,,,,,,,,,,,,,,, function (e, t, n) { const map = { './af': 126, './af.js': 126, './ar': 127, './ar-dz': 128, './ar-dz.js': 128, './ar-kw': 129, './ar-kw.js': 129, './ar-ly': 130, './ar-ly.js': 130, './ar-ma': 131, './ar-ma.js': 131, './ar-sa': 132, './ar-sa.js': 132, './ar-tn': 133, './ar-tn.js': 133, './ar.js': 127, './az': 134, './az.js': 134, './be': 135, './be.js': 135, './bg': 136, './bg.js': 136, './bm': 137, './bm.js': 137, './bn': 138, './bn.js': 138, './bo': 139, './bo.js': 139, './br': 140, './br.js': 140, './bs': 141, './bs.js': 141, './ca': 142, './ca.js': 142, './cs': 143, './cs.js': 143, './cv': 144, './cv.js': 144, './cy': 145, './cy.js': 145, './da': 146, './da.js': 146, './de': 147, './de-at': 148, './de-at.js': 148, './de-ch': 149, './de-ch.js': 149, './de.js': 147, './dv': 150, './dv.js': 150, './el': 151, './el.js': 151, './en-au': 152, './en-au.js': 152, './en-ca': 153, './en-ca.js': 153, './en-gb': 154, './en-gb.js': 154, './en-ie': 155, './en-ie.js': 155, './en-il': 156, './en-il.js': 156, './en-in': 157, './en-in.js': 157, './en-nz': 158, './en-nz.js': 158, './en-sg': 159, './en-sg.js': 159, './eo': 160, './eo.js': 160, './es': 161, './es-do': 162, './es-do.js': 162, './es-us': 163, './es-us.js': 163, './es.js': 161, './et': 164, './et.js': 164, './eu': 165, './eu.js': 165, './fa': 166, './fa.js': 166, './fi': 167, './fi.js': 167, './fil': 168, './fil.js': 168, './fo': 169, './fo.js': 169, './fr': 170, './fr-ca': 171, './fr-ca.js': 171, './fr-ch': 172, './fr-ch.js': 172, './fr.js': 170, './fy': 173, './fy.js': 173, './ga': 174, './ga.js': 174, './gd': 175, './gd.js': 175, './gl': 176, './gl.js': 176, './gom-deva': 177, './gom-deva.js': 177, './gom-latn': 178, './gom-latn.js': 178, './gu': 179, './gu.js': 179, './he': 180, './he.js': 180, './hi': 181, './hi.js': 181, './hr': 182, './hr.js': 182, './hu': 183, './hu.js': 183, './hy-am': 184, './hy-am.js': 184, './id': 185, './id.js': 185, './is': 186, './is.js': 186, './it': 187, './it-ch': 188, './it-ch.js': 188, './it.js': 187, './ja': 189, './ja.js': 189, './jv': 190, './jv.js': 190, './ka': 191, './ka.js': 191, './kk': 192, './kk.js': 192, './km': 193, './km.js': 193, './kn': 194, './kn.js': 194, './ko': 195, './ko.js': 195, './ku': 196, './ku.js': 196, './ky': 197, './ky.js': 197, './lb': 198, './lb.js': 198, './lo': 199, './lo.js': 199, './lt': 200, './lt.js': 200, './lv': 201, './lv.js': 201, './me': 202, './me.js': 202, './mi': 203, './mi.js': 203, './mk': 204, './mk.js': 204, './ml': 205, './ml.js': 205, './mn': 206, './mn.js': 206, './mr': 207, './mr.js': 207, './ms': 208, './ms-my': 209, './ms-my.js': 209, './ms.js': 208, './mt': 210, './mt.js': 210, './my': 211, './my.js': 211, './nb': 212, './nb.js': 212, './ne': 213, './ne.js': 213, './nl': 214, './nl-be': 215, './nl-be.js': 215, './nl.js': 214, './nn': 216, './nn.js': 216, './oc-lnc': 217, './oc-lnc.js': 217, './pa-in': 218, './pa-in.js': 218, './pl': 219, './pl.js': 219, './pt': 220, './pt-br': 221, './pt-br.js': 221, './pt.js': 220, './ro': 222, './ro.js': 222, './ru': 223, './ru.js': 223, './sd': 224, './sd.js': 224, './se': 225, './se.js': 225, './si': 226, './si.js': 226, './sk': 227, './sk.js': 227, './sl': 228, './sl.js': 228, './sq': 229, './sq.js': 229, './sr': 230, './sr-cyrl': 231, './sr-cyrl.js': 231, './sr.js': 230, './ss': 232, './ss.js': 232, './sv': 233, './sv.js': 233, './sw': 234, './sw.js': 234, './ta': 235, './ta.js': 235, './te': 236, './te.js': 236, './tet': 237, './tet.js': 237, './tg': 238, './tg.js': 238, './th': 239, './th.js': 239, './tk': 240, './tk.js': 240, './tl-ph': 241, './tl-ph.js': 241, './tlh': 242, './tlh.js': 242, './tr': 243, './tr.js': 243, './tzl': 244, './tzl.js': 244, './tzm': 245, './tzm-latn': 246, './tzm-latn.js': 246, './tzm.js': 245, './ug-cn': 247, './ug-cn.js': 247, './uk': 248, './uk.js': 248, './ur': 249, './ur.js': 249, './uz': 250, './uz-latn': 251, './uz-latn.js': 251, './uz.js': 250, './vi': 252, './vi.js': 252, './x-pseudo': 253, './x-pseudo.js': 253, './yo': 254, './yo.js': 254, './zh-cn': 255, './zh-cn.js': 255, './zh-hk': 256, './zh-hk.js': 256, './zh-mo': 257, './zh-mo.js': 257, './zh-tw': 258, './zh-tw.js': 258 }; function r (e) { const t = o(e); return n(t) } function o (e) { if (!n.o(map, e)) { const t = new Error("Cannot find module '" + e + "'"); throw t.code = 'MODULE_NOT_FOUND', t } return map[e] }r.keys = function () { return Object.keys(map) }, r.resolve = o, e.exports = r, r.id = 335 }, function (e, t, n) { n(22), n(16); const r = {}; const o = {}; const d = {}; window.__NUXT_JSONP__ = function (e, t) { r[e] = t }, window.__NUXT_JSONP_CACHE__ = r, window.__NUXT_IMPORT__ = function (e, t) { if (r[e]) { return Promise.resolve(r[e]) } if (d[e]) { return Promise.reject(d[e]) } if (o[e]) { return o[e] } let n; let _; const l = o[e] = new Promise(function (e, t) { n = e, _ = t }); delete r[e]; let c; const script = document.createElement('script'); script.charset = 'utf-8', script.timeout = 120, script.src = t; const m = new Error(); const h = script.onerror = script.onload = function (t) { if (clearTimeout(c), delete o[e], script.onerror = script.onload = null, r[e]) { return n(r[e]) } const l = t && (t.type === 'load' ? 'missing' : t.type); const h = t && t.target && t.target.src; m.message = 'Loading chunk ' + e + ' failed.\n(' + l + ': ' + h + ')', m.name = 'ChunkLoadError', m.type = l, m.request = h, d[e] = m, _(m) }; return c = setTimeout(function () { h({ type: 'timeout', target: script }) }, 12e4), document.head.appendChild(script), l } }], [[264, 5, 6]]])
// # sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwLjg5MDI1M2YuanMiLCJzb3VyY2VzIjpbXSwibWFwcGluZ3MiOiI7QSIsInNvdXJjZVJvb3QiOiIifQ==
