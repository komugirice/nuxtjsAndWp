(window.webpackJsonp = window.webpackJsonp || []).push([[4], { 338 (t, e, n) { let content = n(343); typeof content === 'string' && (content = [[t.i, content, '']]), content.locals && (t.exports = content.locals); (0, n(24).default)('f52d5678', content, !0, { sourceMap: !1 }) }, 342 (t, e, n) { 'use strict'; const r = n(338); n.n(r).a }, 343 (t, e, n) { (e = n(23)(!1)).push([t.i, 'ul.list{margin-bottom:50px}.entry-card-content{margin-left:0}.list-title{font-size:40px;margin:16px 0;line-height:1.3}.list-title-in{position:relative;display:inline-block;padding:0 75px}.list-title-in:before{left:0;margin-right:10px}.list-title-in:after{right:0;margin-left:10px}.list-title-in:after,.list-title-in:before{content:"";position:absolute;top:50%;display:inline-block;width:55px;height:1px;background-color:#000}.modified-date{font-size:.7em;padding:2px}', '']), t.exports = e }, 347 (t, e, n) { 'use strict'; n.r(e); n(18); const r = n(3); const l = { data () { return { postsByTag: [] } }, created () { this.fetchData({ slug: this.$route.params.slug }) }, methods: { fetchData (t) { const e = this; return Object(r.a)(regeneratorRuntime.mark(function n () { return regeneratorRuntime.wrap(function (n) { for (;;) { switch (n.prev = n.next) { case 0:return n.next = 2, e.$fetchPostsByTag({}, t); case 2:e.postsByTag = n.sent, console.log(e.postsByTag); case 4:case 'end':return n.stop() } } }, n) }))() } } }; const c = (n(342), n(8)); const component = Object(c.a)(l, function () { const t = this; const e = t.$createElement; const n = t._self._c || e; return n('div', [n('div', { staticClass: 'list ect-entry-card ecb-entry-border front-page-type-tag' }, [n('ul', { staticClass: 'list' }, [n('h1', { staticClass: 'list-title' }, [n('span', { staticClass: 'list-title-in' }, [t._v(t._s(t.postsByTag.name))])]), t._v(' '), t._l(t.postsByTag.posts, function (e) { return n('li', { key: e.id }, [n('a', { staticClass: 'entry-card-wrap a-wrap border-element cf', attrs: { href: t._f('postLink')(e), title: e.title.rendered } }, [n('article', { staticClass: 'entry-card e-card cf post type-post status-publish format-standard hentry' }, [n('div', { staticClass: 'entry-card-content card-content e-card-content' }, [n('h2', { staticClass: 'entry-card-title card-title e-card-title', attrs: { itemprop: 'headline' } }, [t._v(t._s(e.title.rendered))]), t._v(' '), n('div', { staticClass: 'entry-card-meta card-meta e-card-meta' }, [n('div', { staticClass: 'entry-card-info e-card-info' }), t._v(' '), n('div', { staticClass: 'entry-card-tags' }, [n('span', { staticClass: 'modified-date' }, [t._v(t._s(t._f('formatDate')(e.modified)))])])])])])])]) })], 2)])]) }, [], !1, null, null, null); e.default = component.exports } }])
