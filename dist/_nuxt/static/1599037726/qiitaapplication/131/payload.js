__NUXT_JSONP__('qiitaapplication/131', (function (a, b, c, d) { return { data: [{ post: { id: 131, date: '2020-08-06T17:04:01', date_gmt: '2020-08-06T08:04:01', guid: { rendered: 'http:\u002F\u002Fwordpressmyblog-env.eba-pyivcx8v.ap-northeast-1.elasticbeanstalk.com\u002F?p=131' }, modified: '2020-08-19T10:40:21', modified_gmt: '2020-08-19T01:40:21', slug: 'mainactivity', status: 'publish', type: 'post', link: 'https:\u002F\u002Fwww.komugirice.com\u002Fqiitaapplication\u002F131\u002F', title: { rendered: 'MainActivityについて' }, content: { rendered: '\n\u003Cp\u003E\u003C\u002Fp\u003E\n\n\n\n\u003Cp\u003E大枠の流れだけ説明する\u003C\u002Fp\u003E\n\n\n\n\u003Cp\u003EMainActivity.ktで\u003Cstrong\u003EviewPager\u003C\u002Fstrong\u003Eと\u003Cstrong\u003EtabLayout\u003C\u002Fstrong\u003Eの初期化を行っている\u003C\u002Fp\u003E\n\n\n\n\u003Cp class="filename"\u003EinitViewPager\u003C\u002Fp\u003E\n\n\n\n\u003Cpre class="EnlighterJSRAW" data-enlighter-language="kotlin" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="195" data-enlighter-title="" data-enlighter-group=""\u003E    private fun initViewPager() {\n        viewPager.apply {\n            adapter = customAdapter\n            offscreenPageLimit = customAdapter.count\n            addOnPageChangeListener(object: ViewPager.OnPageChangeListener {\n                override fun onPageScrollStateChanged(state: Int) {}\n                override fun onPageScrolled(position: Int, positionOffset: Float, positionOffsetPixels: Int) {}\n                override fun onPageSelected(position: Int) {\n                    hideKeybord()\n                }\n            })\n        }\n    }\u003C\u002Fpre\u003E\n\n\n\n\u003Cp class="filename"\u003EviewPagerのadapterに設定するCustomAdapter\u003C\u002Fp\u003E\n\n\n\n\u003Cpre class="EnlighterJSRAW" data-enlighter-language="kotlin" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="226" data-enlighter-title="" data-enlighter-group=""\u003E    class CustomAdapter(private val context: Context, fragmentManager: FragmentManager) :\n        FragmentPagerAdapter(fragmentManager) {\n\n        inner class Item(val fragment: Fragment, val title:Int)\n\n        val fragments = listOf(Item(ArticleFragment(), R.string.tab_article)\n            , Item(FavoriteFragment(), R.string.tab_favorite))\n\n        override fun getCount(): Int = 2\n\n        override fun getItem(position: Int) = fragments[position].fragment\n\n        override fun getPageTitle(position: Int) = context.getString( fragments[position].title )\n    }\u003C\u002Fpre\u003E\n\n\n\n\u003Cp class="filename"\u003EinitTabLayout\u003C\u002Fp\u003E\n\n\n\n\u003Cpre class="EnlighterJSRAW" data-enlighter-language="kotlin" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="217" data-enlighter-title="" data-enlighter-group=""\u003E    private fun initTabLayout() {\n        tabLayout.setupWithViewPager(viewPager)\n    }\u003C\u002Fpre\u003E\n\n\n\n\u003Cp\u003Eタブ名にviewPager.adapter.getPageTitle()が設定される模様\u003C\u002Fp\u003E\n', protected: b }, excerpt: { rendered: '\u003Cp\u003E大枠の流れだけ説明する MainActivity.ktでviewPagerとtabLayoutの初期化を行っている initViewPager viewPagerのadapterに設定するCustomAdapter in [&hellip;]\u003C\u002Fp\u003E\n', protected: b }, author: c, featured_media: 0, comment_status: d, ping_status: d, sticky: b, template: '', format: 'standard', meta: [], categories: [7], tags: [8, 9, 5], _links: { self: [{ href: 'https:\u002F\u002Fwww.komugirice.com\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F131' }], collection: [{ href: 'https:\u002F\u002Fwww.komugirice.com\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts' }], about: [{ href: 'https:\u002F\u002Fwww.komugirice.com\u002Fwp-json\u002Fwp\u002Fv2\u002Ftypes\u002Fpost' }], author: [{ embeddable: a, href: 'https:\u002F\u002Fwww.komugirice.com\u002Fwp-json\u002Fwp\u002Fv2\u002Fusers\u002F1' }], replies: [{ embeddable: a, href: 'https:\u002F\u002Fwww.komugirice.com\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=131' }], 'version-history': [{ count: c, href: 'https:\u002F\u002Fwww.komugirice.com\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F131\u002Frevisions' }], 'predecessor-version': [{ id: 610, href: 'https:\u002F\u002Fwww.komugirice.com\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F131\u002Frevisions\u002F610' }], 'wp:attachment': [{ href: 'https:\u002F\u002Fwww.komugirice.com\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=131' }], 'wp:term': [{ taxonomy: 'category', embeddable: a, href: 'https:\u002F\u002Fwww.komugirice.com\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=131' }, { taxonomy: 'post_tag', embeddable: a, href: 'https:\u002F\u002Fwww.komugirice.com\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=131' }], curies: [{ name: 'wp', href: 'https:\u002F\u002Fapi.w.org\u002F{rel}', templated: a }] } } }], fetch: [], mutations: void 0 } }(true, false, 1, 'closed')))
