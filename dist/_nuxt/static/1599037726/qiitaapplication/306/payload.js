__NUXT_JSONP__("qiitaapplication/306", (function(a,b,c,d){return {data:[{post:{id:306,date:"2020-08-10T09:37:15",date_gmt:"2020-08-10T00:37:15",guid:{rendered:"http:\u002F\u002Fwordpressmyblog-env.eba-pyivcx8v.ap-northeast-1.elasticbeanstalk.com\u002F?p=306"},modified:"2020-08-19T10:40:21",modified_gmt:"2020-08-19T01:40:21",slug:"%e6%a4%9c%e7%b4%a2%e7%b5%90%e6%9e%9c%e3%81%8c0%e4%bb%b6%e3%81%ae%e5%a0%b4%e5%90%88%e3%81%ae%e5%87%a6%e7%90%86",status:"publish",type:"post",link:"https:\u002F\u002Fwww.komugirice.com\u002Fqiitaapplication\u002F306\u002F",title:{rendered:"検索結果が0件の場合の処理"},content:{rendered:"\u003Cp\u003ERecyclerViewにおいてitemsが0件の場合は「検索結果が0件です」のcellを表示する。\u003Cbr\u003E\nただし、RecyclerViewの初期設定中は必ず0件の状態になってしまう。\u003Cbr\u003E\nなので初期設定中は、getItemCount()で0件を返し、「検索結果が0件です」のcellは表示しないようにする。\u003Cbr\u003E\n初期設定完了後は、getItemCount()で1件を返し、「検索結果が0件です」のcellを表示する。\u003C\u002Fp\u003E\n\n\n\u003Cdiv class=\"mb60\"\u003E\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp class=\"filename\"\u003EArticleAdapter.kt\u003C\u002Fp\u003E\n\n\n\n\u003Cpre class=\"EnlighterJSRAW\" data-enlighter-language=\"kotlin\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"28\" data-enlighter-title=\"\" data-enlighter-group=\"\"\u003E    \u002F\u002F スワイプ更新中に「検索結果が0件です」を出さない為の対応\n    private var hasCompletedFirstRefresh = false\u003C\u002Fpre\u003E\n\n\n\n\u003Cp\u003E説明した処理の部分\u003C\u002Fp\u003E\n\n\n\n\u003Cp\u003Eitems.isEmpty()がtrueの場合は、hasCompletedFirstRefreshで判別する\u003C\u002Fp\u003E\n\n\n\n\u003Cpre class=\"EnlighterJSRAW\" data-enlighter-language=\"kotlin\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"170\" data-enlighter-title=\"\" data-enlighter-group=\"\"\u003E    \u002F**\n     * getItemCountメソッド\n     *\n     * @return Int\n     *\u002F\n    override fun getItemCount(): Int {\n        \u002F\u002F リストデータ中の件数をリターン。\n        return if (items.isEmpty()) {\n            if (hasCompletedFirstRefresh)\n                1\n            else\n                0\n        } else items.size\n    }\n    \u002F**\n     * itemsの数によってVIEW_TYPEを振り分け\n     *\n     * @param position\n     * @return VIEW_TYPE: Int\n     *\u002F\n\n    override fun getItemViewType(position: Int): Int {\n        return if (items.isEmpty() ) VIEW_TYPE_EMPTY else VIEW_TYPE_ITEM\n    }\u003C\u002Fpre\u003E\n\n\n\n\u003Cpre class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\" data-enlighter-theme=\"\" data-enlighter-highlight=\"3,7\" data-enlighter-linenumbers=\"false\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\"\u003E    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): RecyclerView.ViewHolder {\n\n        if (viewType == VIEW_TYPE_ITEM) {\n\n・・・\n\n        } else {\n            return EmptyViewHolder(\n                LayoutInflater.from(context).inflate(R.layout.empty_row, parent, false)\n            )\n        }\n    }\u003C\u002Fpre\u003E\n\n\n\n\u003Cpre class=\"EnlighterJSRAW\" data-enlighter-language=\"kotlin\" data-enlighter-theme=\"\" data-enlighter-highlight=\"202,217\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"195\" data-enlighter-title=\"\" data-enlighter-group=\"\"\u003E    \u002F**\n     * refreshメソッド\n     *\n     * @param qiitaList\n     *\u002F\n    fun refresh(qiitaList: List&lt;QiitaData\u003E) {\n        \u002F\u002F リフレッシュ実行フラグON\n        hasCompletedFirstRefresh = true\n        items.apply {\n            clear()\n            addAll(qiitaList)\n        }\n\n        notifyDataSetChanged()\n    }\n\n    \u002F**\n     * clearメソッド\n     *\n     *\u002F\n    fun clear() {\n        \u002F\u002F 上スワイプで「検索結果0件」表示のバグ対応\n        hasCompletedFirstRefresh = false\n        items.apply {\n            clear()\n        }\n        notifyDataSetChanged()\n    }\u003C\u002Fpre\u003E\n",protected:b},excerpt:{rendered:"\u003Cp\u003ERecyclerViewにおいてitemsが0件の場合は「検索結果が0件です」のcellを表示する。 ただし、RecyclerViewの初期設定中は必ず0件の状態になってしまう。 なので初期設定中は、getItemCou [&hellip;]\u003C\u002Fp\u003E\n",protected:b},author:c,featured_media:0,comment_status:d,ping_status:d,sticky:b,template:"",format:"standard",meta:[],categories:[7],tags:[21],_links:{self:[{href:"https:\u002F\u002Fwww.komugirice.com\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F306"}],collection:[{href:"https:\u002F\u002Fwww.komugirice.com\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts"}],about:[{href:"https:\u002F\u002Fwww.komugirice.com\u002Fwp-json\u002Fwp\u002Fv2\u002Ftypes\u002Fpost"}],author:[{embeddable:a,href:"https:\u002F\u002Fwww.komugirice.com\u002Fwp-json\u002Fwp\u002Fv2\u002Fusers\u002F1"}],replies:[{embeddable:a,href:"https:\u002F\u002Fwww.komugirice.com\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=306"}],"version-history":[{count:c,href:"https:\u002F\u002Fwww.komugirice.com\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F306\u002Frevisions"}],"predecessor-version":[{id:601,href:"https:\u002F\u002Fwww.komugirice.com\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F306\u002Frevisions\u002F601"}],"wp:attachment":[{href:"https:\u002F\u002Fwww.komugirice.com\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=306"}],"wp:term":[{taxonomy:"category",embeddable:a,href:"https:\u002F\u002Fwww.komugirice.com\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=306"},{taxonomy:"post_tag",embeddable:a,href:"https:\u002F\u002Fwww.komugirice.com\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=306"}],curies:[{name:"wp",href:"https:\u002F\u002Fapi.w.org\u002F{rel}",templated:a}]}}}],fetch:[],mutations:void 0}}(true,false,1,"closed")));