__NUXT_JSONP__('qiitaapplication/138', (function (a, b, c) { return { data: [{ post: { id: 138, date: '2020-08-06T17:17:57', date_gmt: '2020-08-06T08:17:57', guid: { rendered: 'http:\u002F\u002Fwordpressmyblog-env.eba-pyivcx8v.ap-northeast-1.elasticbeanstalk.com\u002F?p=138' }, modified: '2020-08-19T10:40:21', modified_gmt: '2020-08-19T01:40:21', slug: 'articlefragment', status: 'publish', type: 'post', link: 'https:\u002F\u002Fwww.komugirice.com\u002Fqiitaapplication\u002F138\u002F', title: { rendered: 'ArticleFragmentについて' }, content: { rendered: '\n\u003Cp\u003E記事一覧タブ\u003C\u002Fp\u003E\n\n\n\n\u003Cp\u003EMainActivityのviewPagerに設定する\u003C\u002Fp\u003E\n\n\n\n\u003Cp\u003EswipeRefreshLayoutとRecyclerViewによって、記事を一覧表示している\u003C\u002Fp\u003E\n\n\n\u003Cdiv class="mb20 clearfix"\u003E\u003C\u002Fdiv\u003E\n\n\n\u003Cp class="filename"\u003Efragment_article.xml\u003C\u002Fp\u003E\n\n\n\n\u003Cp\u003E&lt;layout\u003Eタグで囲むことでDataBinding化する\u003C\u002Fp\u003E\n\n\n\n\u003Cpre class="EnlighterJSRAW" data-enlighter-language="xml" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group=""\u003E&lt;?xml version="1.0" encoding="utf-8"?\u003E\n&lt;layout\u003E\n&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http:\u002F\u002Fschemas.android.com\u002Fapk\u002Fres\u002Fandroid"\n    xmlns:app="http:\u002F\u002Fschemas.android.com\u002Fapk\u002Fres-auto"\n    xmlns:tools="http:\u002F\u002Fschemas.android.com\u002Ftools"\n    android:layout_width="match_parent"\n    android:layout_height="match_parent"\n    android:background="@android:color\u002Fwhite"\u003E\n\n\n    &lt;androidx.swiperefreshlayout.widget.SwipeRefreshLayout\n        android:id="@+id\u002FswipeRefreshLayout"\n        android:layout_width="match_parent"\n        android:layout_height="match_parent"\n        app:layout_constraintBottom_toBottomOf="parent"\n        app:layout_constraintEnd_toEndOf="parent"\n        app:layout_constraintStart_toStartOf="parent"\u003E\n\n        &lt;androidx.recyclerview.widget.RecyclerView\n            android:id="@+id\u002FarticleListView"\n            android:layout_width="match_parent"\n            android:layout_height="match_parent"\n            android:scrollbars="vertical"\n            app:layout_constraintBottom_toBottomOf="parent"\n            app:layout_constraintStart_toStartOf="parent"\n            app:layout_constraintEnd_toEndOf="parent"\n            app:layout_constraintHorizontal_bias="0.0"\n            app:layout_constraintTop_toBottomOf="@+id\u002FheaderView" \u002F\u003E\n\n    &lt;\u002Fandroidx.swiperefreshlayout.widget.SwipeRefreshLayout\u003E\n\n&lt;\u002Fandroidx.constraintlayout.widget.ConstraintLayout\u003E\n&lt;\u002Flayout\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cdiv class="mb20 clearfix"\u003E\u003C\u002Fdiv\u003E\n\n\n\u003Cp class="filename"\u003EArticleFragment.kt\u003C\u002Fp\u003E\n\n\n\n\u003Cp class="filename"\u003Eインスタンス変数\u003C\u002Fp\u003E\n\n\n\n\u003Cp\u003EDataBinding化したのでFragmentArticleBindingクラスが生成された\u003C\u002Fp\u003E\n\n\n\n\u003Cpre class="EnlighterJSRAW" data-enlighter-language="kotlin" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="28" data-enlighter-title="" data-enlighter-group=""\u003Eclass ArticleFragment : Fragment() {\n\n    private lateinit var binding: FragmentArticleBinding\n    private lateinit var viewModel: ArticleViewModel\n\n    private val handler = Handler()\n    \u002F** ArticleAdapter *\u002F\n    private val customAdapter by lazy {\n        ArticleAdapter(\n            context,\n            false\n        )\n    }\n    \u002F** EndlessScrollListenerインスタンス *\u002F\n    private lateinit var mEndlessScrollListener: EndlessScrollListener\n\u003C\u002Fpre\u003E\n\n\n\u003Cdiv class="mb20 clearfix"\u003E\u003C\u002Fdiv\u003E\n\n\n\u003Cp class="caption"\u003EDataBindingの設定\u003C\u002Fp\u003E\n\n\n\n\u003Cp\u003EonCreateView()でFragmentArticleBindingをインフレート(xmlファイルからViewオブジェクトを作成)する\u003C\u002Fp\u003E\n\n\n\n\u003Cpre class="EnlighterJSRAW" data-enlighter-language="kotlin" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="false" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group=""\u003E  override fun onCreateView(\n        inflater: LayoutInflater, container: ViewGroup?,\n        savedInstanceState: Bundle?\n    ): View? {\n        \u002F\u002F Inflate the layout for this fragment\n        \u002F\u002Finflater.inflate(com.komugirice.qiitaapplication.R.layout.fragment_article, container, false)\n\n        \u002F\u002F initBinding\n        binding = FragmentArticleBinding.inflate(inflater, container, false)\n        binding.lifecycleOwner = this\n\n        ・・・\n\n        return binding.root\n    }\n\u003C\u002Fpre\u003E\n\n\n\u003Cdiv class="mb20 clearfix"\u003E\u003C\u002Fdiv\u003E\n\n\n\u003Cp class="caption"\u003EViewModelの設定\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EViewModelProvidersでArticleViewModelをインスタンス化し、items変数とisExceptionのliveDataの設定を行っている\u003C\u002Fp\u003E\n\n\n\u003Cpre class="EnlighterJSRAW" data-enlighter-language="kotlin" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="false" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group=""\u003E        viewModel = ViewModelProviders.of(this).get(ArticleViewModel::class.java).apply {\n            \u002F\u002F QiitaApiが実行されて正常終了した\n            items.observe(this@ArticleFragment, Observer {\n                        ・・・\n            })\n            \u002F\u002F QiitaAPIでExceptionが発生した\n            isException.observe(this@ArticleFragment, Observer {\n                        ・・・\n            })\n        }\u003C\u002Fpre\u003E\n\n\n\n\u003Cp\u003EArticleViewModel.initData()でAPIを実行しており、レスポンス結果をこちらのliveDataで受け取り、RecyclerViewに設定している\u003C\u002Fp\u003E\n', protected: b }, excerpt: { rendered: '\u003Cp\u003E記事一覧タブ MainActivityのviewPagerに設定する swipeRefreshLayoutとRecyclerViewによって、記事を一覧表示している fragment_article.xml &lt;la [&hellip;]\u003C\u002Fp\u003E\n', protected: b }, author: 1, featured_media: 0, comment_status: c, ping_status: c, sticky: b, template: '', format: 'standard', meta: [], categories: [7], tags: [11, 12, 10], _links: { self: [{ href: 'https:\u002F\u002Fwww.komugirice.com\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F138' }], collection: [{ href: 'https:\u002F\u002Fwww.komugirice.com\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts' }], about: [{ href: 'https:\u002F\u002Fwww.komugirice.com\u002Fwp-json\u002Fwp\u002Fv2\u002Ftypes\u002Fpost' }], author: [{ embeddable: a, href: 'https:\u002F\u002Fwww.komugirice.com\u002Fwp-json\u002Fwp\u002Fv2\u002Fusers\u002F1' }], replies: [{ embeddable: a, href: 'https:\u002F\u002Fwww.komugirice.com\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=138' }], 'version-history': [{ count: 3, href: 'https:\u002F\u002Fwww.komugirice.com\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F138\u002Frevisions' }], 'predecessor-version': [{ id: 595, href: 'https:\u002F\u002Fwww.komugirice.com\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F138\u002Frevisions\u002F595' }], 'wp:attachment': [{ href: 'https:\u002F\u002Fwww.komugirice.com\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=138' }], 'wp:term': [{ taxonomy: 'category', embeddable: a, href: 'https:\u002F\u002Fwww.komugirice.com\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=138' }, { taxonomy: 'post_tag', embeddable: a, href: 'https:\u002F\u002Fwww.komugirice.com\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=138' }], curies: [{ name: 'wp', href: 'https:\u002F\u002Fapi.w.org\u002F{rel}', templated: a }] } } }], fetch: [], mutations: void 0 } }(true, false, 'closed')))
