__NUXT_JSONP__("qiitaapplication/287", (function(a,b,c,d){return {data:[{post:{id:287,date:"2020-08-10T08:40:36",date_gmt:"2020-08-09T23:40:36",guid:{rendered:"http:\u002F\u002Fwordpressmyblog-env.eba-pyivcx8v.ap-northeast-1.elasticbeanstalk.com\u002F?p=287"},modified:"2020-08-19T10:40:21",modified_gmt:"2020-08-19T01:40:21",slug:"%e6%a4%9c%e7%b4%a2%e5%87%a6%e7%90%86%e3%81%ab%e3%81%a4%e3%81%84%e3%81%a6",status:"publish",type:"post",link:"https:\u002F\u002Fwww.komugirice.com\u002Fqiitaapplication\u002F287\u002F",title:{rendered:"検索処理について"},content:{rendered:"\n\u003Cp\u003EMainActivityの虫眼鏡アイコンを押下した場合、検索ワードを入力して検索処理を実行する。またタグを押下すると、タグで検索処理を実行する。\u003C\u002Fp\u003E\n\n\n\n\u003Cfigure class=\"wp-block-gallery columns-1 is-cropped\"\u003E\u003Cul class=\"blocks-gallery-grid\"\u003E\u003Cli class=\"blocks-gallery-item\"\u003E\u003Cfigure\u003E\u003Cimg loading=\"lazy\" width=\"323\" height=\"482\" src=\"https:\u002F\u002Fkomugirice-myblog.s3.ap-northeast-1.amazonaws.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002FqiitaApplicaton-search-min-1.png\" alt=\"\" data-id=\"351\" data-full-url=\"https:\u002F\u002Fkomugirice-myblog.s3.ap-northeast-1.amazonaws.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002FqiitaApplicaton-search-min-1.png\" data-link=\"http:\u002F\u002Fwordpressmyblog-env.eba-pyivcx8v.ap-northeast-1.elasticbeanstalk.com\u002Fqiitaapplicaton-search-min\u002F\" class=\"wp-image-351\" srcset=\"https:\u002F\u002Fkomugirice-myblog.s3.ap-northeast-1.amazonaws.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002FqiitaApplicaton-search-min-1.png 323w, https:\u002F\u002Fkomugirice-myblog.s3.ap-northeast-1.amazonaws.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002FqiitaApplicaton-search-min-1-300x448.png 300w\" sizes=\"(max-width: 323px) 100vw, 323px\" \u002F\u003E\u003C\u002Ffigure\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003C\u002Ffigure\u003E\n\n\n\n\u003Cdiv class=\"mb20 clearfix\"\u003E\u003C\u002Fdiv\u003E\n\u003Cp class=\"caption mb20 clearfix\"\u003E呼び出し先\u003C\u002Fp\u003E\n\u003Cp class=\"filename\"\u003EMainActivity.kt\u003C\u002Fp\u003E\n\n\n\n\u003Cpre class=\"EnlighterJSRAW\" data-enlighter-language=\"kotlin\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"97\" data-enlighter-title=\"\" data-enlighter-group=\"\"\u003E    private fun initEditText() {\n        \u002F\u002F 検索実行\n        searchEditText.setOnEditorActionListener { textView, actionId, _ -\u003E\n            if (actionId == EditorInfo.IME_ACTION_SEARCH) {\n                \u002F\u002F EditTextに値がある場合\n                if(textView.text.toString().isNotEmpty()) {\n                    \u002F\u002F SearchActivityに遷移\n                    SearchActivity.start(\n                        this,\n                        textView.text.toString(),\n                        false\n                    )\n                }\n                \u002F\u002Ftrue\n            }\n            false\n        }\n    }\u003C\u002Fpre\u003E\n\n\n\n\u003Cp\u003E\u003Cdiv class=\"mb20 clearfix\"\u003E\u003C\u002Fdiv\u003E\n\u003Cp class=\"filename\"\u003EArticleAdapter.kt\u003C\u002Fp\u003E\u003C\u002Fp\u003E\n\n\n\n\u003Cpre class=\"EnlighterJSRAW\" data-enlighter-language=\"kotlin\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\"\u003E            \u002F\u002F タグのクリックリスナ\n            holder.binding.tagGroup.setOnTagClickListener { tag, position -\u003E\n\n                \u002F\u002F 押下したタグごとに遷移\n                val itemsPos = holder.adapterPosition \u002F\u002F positionを取得\n                \u002F\u002F SearchActivityに遷移\n                (context as? Activity)?.also {\n                    SearchActivity.start(it, tag.text, true)\n                }\n\n            }\u003C\u002Fpre\u003E\n\n\n\n\u003Cdiv class=\"mb20 clearfix\"\u003E\u003C\u002Fdiv\u003E\n\u003Cp class=\"caption mb20 clearfix\"\u003E呼び出し元\u003C\u002Fp\u003E\n\u003Cdiv class=\"mb20 clearfix\"\u003E\u003C\u002Fdiv\u003E\n\u003Cp class=\"filename\"\u003ESearchActivity.kt\u003C\u002Fp\u003E\n\n\n\n\u003Cpre class=\"EnlighterJSRAW\" data-enlighter-language=\"kotlin\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"44\" data-enlighter-title=\"\" data-enlighter-group=\"\"\u003E    \u002F** 検索タイプ *\u002F\n    private val searchType by lazy { if (intent.getBooleanExtra(KEY_IS_SEARCH_BY_TAG, false)) SEARCH_TAG else SEARCH_BODY }\n    \u002F** 検索クエリ *\u002F\n    private val searchQuery by lazy { intent.getStringExtra(KEY_SEARCH_WORD) }\n\n\u003C\u002Fpre\u003E\n\n\n\n\u003Cpre class=\"EnlighterJSRAW\" data-enlighter-language=\"kotlin\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"88\" data-enlighter-title=\"\" data-enlighter-group=\"\"\u003E    private fun initViewModel() {\n        viewModel = ViewModelProviders.of(this).get(ArticleViewModel::class.java).apply {\n            \u002F\u002F QiitaApiが実行されて正常終了した\n            items.observe(this@SearchActivity, Observer {\n                binding.apply {\n                    customAdapter.refresh(it)\n                    swipeRefreshLayout.isRefreshing = false\n                }\n            })\n            \u002F\u002F QiitaAPIでExceptionが発生した\n            isException.observe(this@SearchActivity, Observer {\n                when(it) {\n                    is UnknownHostException -\u003E {\n                        showErrorDialog(\n                            R.string.title_network_error,\n                            R.string.message_network_error)\n                    }\n                    is HttpException -\u003E {\n                        showErrorDialog(\n                            R.string.title_api_error,\n                            R.string.message_api_error)\n                    }\n                    else -\u003E Log.e(\"QiitaAPI\", \"UnExpected Error\")\n                }\n                binding.swipeRefreshLayout.isRefreshing = false\n            })\n        }\n    }\u003C\u002Fpre\u003E\n\n\n\n\u003Cpre class=\"EnlighterJSRAW\" data-enlighter-language=\"kotlin\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"202\" data-enlighter-title=\"\" data-enlighter-group=\"\"\u003E    private fun initData() {\n        \u002F\u002F QiitaAPI実行\n        viewModel.initSearch(searchType, searchQuery)\n    }\u003C\u002Fpre\u003E\n\n\n\n\u003Cpre class=\"EnlighterJSRAW\" data-enlighter-language=\"kotlin\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"228\" data-enlighter-title=\"\" data-enlighter-group=\"\"\u003E    companion object { \u002F\u002F comapnion object はstaticです\n        val SEARCH_BODY = 0\n        val SEARCH_TAG = 1\n\n        private const val KEY_SEARCH_WORD = \"key_search_word\"\n        private const val KEY_IS_SEARCH_BY_TAG = \"key_is_search_by_tag\"\n\n        fun start(activity: Activity, searchWord: String, isSearchByTag: Boolean) =\n            activity.startActivity(\n                Intent(activity, SearchActivity::class.java)\n                    .putExtra(KEY_SEARCH_WORD, searchWord)\n                    .putExtra(KEY_IS_SEARCH_BY_TAG, isSearchByTag)\n            )\n    }\u003C\u002Fpre\u003E\n\n\n\u003Cdiv class=\"mb60\"\u003E\u003C\u002Fdiv\u003E\n\n\n\u003Cp class=\"filename\"\u003EArticleViewModel.kt\u003C\u002Fp\u003E\n\n\n\n\u003Cpre class=\"EnlighterJSRAW\" data-enlighter-language=\"kotlin\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"27\" data-enlighter-title=\"\" data-enlighter-group=\"\"\u003Efun initSearch(type: Int, query: String) {\n    search(type, 1, query)\n}\u003C\u002Fpre\u003E\n\n\n\n\u003Cpre class=\"EnlighterJSRAW\" data-enlighter-language=\"kotlin\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"88\" data-enlighter-title=\"\" data-enlighter-group=\"\"\u003E    \u002F**\n     * search\n     *\n     * @param type 0:検索 1:タグ\n     * @param page 検索するページ番号\n     * @param query 検索クエリ\n     * @param isAdd true:追加 false:クリア\n     *\n     *\u002F\n    fun search(type: Int, page: Int, query: String, isAdd: Boolean = false) {\n        \u002F\u002F searchQueryのエンコード\n        val encodeQuery = URLEncoder.encode(query, \"UTF-8\");\n        val client = OkHttpClient()\n        val observable =\n            when(type) {\n                \u002F\u002F 検索バー\n                SearchActivity.SEARCH_BODY -\u003E {\n                    QiitaApi.itemsIF.searchBody(page, encodeQuery)\n                }\n                \u002F\u002F タグ\n                SearchActivity.SEARCH_TAG -\u003E {\n                    QiitaApi.tagsIF.searchTag(encodeQuery, page)\n                }\n                else -\u003E {\n                    return\n                }\n            }\n\n        observable.observeOn(AndroidSchedulers.mainThread())\n            .subscribeOn(Schedulers.io())\n            .subscribe({\n                \u002F\u002F RecyclerViewのAdapter用のMutableList&lt;ArticleRow\u003Eに変換\n                var articleRowList: MutableList&lt;ArticleRow\u003E = mutableListOf()\n                it.forEach({ resp -\u003E\n                    val row =\n                        ArticleRow()\n                    row.convertFromQiitaResponse(resp)\n                    articleRowList.add(row)\n                })\n                \u002F\u002F 取得データ反映\n                setItems(articleRowList, false, isAdd)\n            }, {\n                currentPage = page\n                isAddPrev = isAdd\n\n                \u002F\u002Fitems.postValue(listOf())\n                isException.postValue(it)\n            })\n    }\u003C\u002Fpre\u003E\n",protected:b},excerpt:{rendered:"\u003Cp\u003EMainActivityの虫眼鏡アイコンを押下した場合、検索ワードを入力して検索処理を実行する。またタグを押下すると、タグで検索処理を実行する。 呼び出し先 MainActivity.kt ArticleAdapter. [&hellip;]\u003C\u002Fp\u003E\n",protected:b},author:c,featured_media:0,comment_status:d,ping_status:d,sticky:b,template:"",format:"standard",meta:[],categories:[7],tags:[21],_links:{self:[{href:"https:\u002F\u002Fwww.komugirice.com\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F287"}],collection:[{href:"https:\u002F\u002Fwww.komugirice.com\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts"}],about:[{href:"https:\u002F\u002Fwww.komugirice.com\u002Fwp-json\u002Fwp\u002Fv2\u002Ftypes\u002Fpost"}],author:[{embeddable:a,href:"https:\u002F\u002Fwww.komugirice.com\u002Fwp-json\u002Fwp\u002Fv2\u002Fusers\u002F1"}],replies:[{embeddable:a,href:"https:\u002F\u002Fwww.komugirice.com\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=287"}],"version-history":[{count:c,href:"https:\u002F\u002Fwww.komugirice.com\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F287\u002Frevisions"}],"predecessor-version":[{id:602,href:"https:\u002F\u002Fwww.komugirice.com\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F287\u002Frevisions\u002F602"}],"wp:attachment":[{href:"https:\u002F\u002Fwww.komugirice.com\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=287"}],"wp:term":[{taxonomy:"category",embeddable:a,href:"https:\u002F\u002Fwww.komugirice.com\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=287"},{taxonomy:"post_tag",embeddable:a,href:"https:\u002F\u002Fwww.komugirice.com\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=287"}],curies:[{name:"wp",href:"https:\u002F\u002Fapi.w.org\u002F{rel}",templated:a}]}}}],fetch:[],mutations:void 0}}(true,false,1,"closed")));